{
.appVersion = "1131";
DisplayStrings = (
"Waih/imacron"
);
classes = (
{
code = "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z";
name = DEFAULT;
},
{
code = "A.alt1 B.alt1 C.alt1 D.alt1 E.alt1 F.alt1 G.alt1 H.alt1 I.alt1 J.alt1 K.alt1 L.alt1 M.alt1 N.alt1 O.alt1 P.alt1 Q.alt1 R.alt1 S.alt1 T.alt1 U.alt1 V.alt1 W.alt1 X.alt1 Y.alt1 Z.alt1 a.alt1 b.alt1 c.alt1 d.alt1 e.alt1 f.alt1 g.alt1 h.alt1 i.alt1 j.alt1 k.alt1 l.alt1 m.alt1 n.alt1 o.alt1 p.alt1 q.alt1 r.alt1 s.alt1 t.alt1 u.alt1 v.alt1 w.alt1 x.alt1 y.alt1 z.alt1";
name = ALT1;
},
{
code = "B C D F G H J K L M N P Q R S T V W X Y Z b c d f g h j k l m n p q r s t v w x y z";
name = Con0;
},
{
code = "B.alt1 C.alt1 D.alt1 F.alt1 G.alt1 H.alt1 J.alt1 K.alt1 L.alt1 M.alt1 N.alt1 P.alt1 Q.alt1 R.alt1 S.alt1 T.alt1 V.alt1 W.alt1 X.alt1 Y.alt1 Z.alt1 b.alt1 c.alt1 d.alt1 f.alt1 g.alt1 h.alt1 j.alt1 k.alt1 l.alt1 m.alt1 n.alt1 p.alt1 q.alt1 r.alt1 s.alt1 t.alt1 v.alt1 w.alt1 x.alt1 y.alt1 z.alt1";
name = Con1;
},
{
code = "A E I O U a e i o u";
name = Voc0;
},
{
code = "A.alt1 E.alt1 I.alt1 O.alt1 U.alt1 a.alt1 e.alt1 i.alt1 o.alt1 u.alt1";
name = Voc1;
},
{
code = "space comma\012";
name = Etc;
}
);
copyright = "Copyright 2019 The Mansalva Project Authors (https://github.com/carolinashort/mansalva)";
customParameters = (
{
name = vendorID;
value = bgtl;
},
{
name = panose;
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
7,
29,
31,
32,
33,
35,
38,
45,
60,
62
);
},
{
name = codePageRanges;
value = (
1252,
1250
);
},
{
name = glyphOrder;
value = (
.notdef,
.null,
space,
LF,
controlCR,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
verticalbar,
braceright,
asciitilde,
uni00A0,
exclamdown,
cent,
sterling,
currency,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
logicalnot,
uni00AD,
registered,
overscore,
degree,
plusminus,
uni00B2,
uni00B3,
acute,
uni00B5,
paragraph,
cedilla,
uni00B9,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
AE,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Eth,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
multiply,
Oslash,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
Thorn,
germandbls,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
ae,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
eth,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
divide,
oslash,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
thorn,
ydieresis,
dotlessi,
OE,
oe,
florin,
circumflex,
caron,
breve,
ogonek,
ilde,
hungarumlaut,
uni03A9,
pi,
uni1EBD,
endash,
emdash,
quoteleft,
quoteright,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
uni2074,
Euro,
trademark,
partialdiff,
uni2206,
product,
summation,
uni2215,
radical,
infinity,
approxequal,
notequal,
lessequal,
greaterequal,
lozenge,
uniE0FF,
uniE977,
uniE9AD,
U.alt1,
quoteright.alt1,
bullet.alt1,
oe.alt1,
X.alt1,
a.alt1,
ntilde.alt1,
z.alt1,
y.alt1,
x.alt1,
w.alt1,
v.alt1,
u.alt1,
t.alt1,
s.alt1,
s.alt2,
r.alt1,
q.alt1,
p.alt1,
o.alt1,
n.alt1,
m.alt1,
l.alt1,
k.alt1,
j.alt1,
i.alt1,
h.alt1,
g.alt1,
f.alt1,
e.alt1,
d.alt1,
c.alt1,
b.alt1,
a.alt2,
A.alt1,
A.alt2,
A.alt3,
E.alt1,
E.alt2,
B.alt1,
C.alt1,
C.alt2,
D.alt1,
F.alt1,
G.alt1,
H.alt1,
I.alt1,
J.alt1,
K.alt1,
K.alt2,
L.alt1,
L.alt2,
S.alt1,
S.alt2,
R.alt1,
Q.alt1,
P.alt1,
O.alt1,
O.alt2,
N.alt1,
M.alt1,
M.alt2,
T.alt1,
U.alt2,
V.alt1,
W.alt1,
X.alt2,
Y.alt1,
Z.alt1,
uniF8FF,
fi.liga,
fl.liga,
asciicircum,
arrowup,
uni2197,
arrowright,
uni2198,
arrowdown,
uni2199,
arrowleft,
uni2196,
arrowboth,
arrowupdn,
newGlyph,
newGlyph.001,
newGlyph.002,
newGlyph.003
);
},
{
name = fsType;
value = (
);
},
{
name = licenseURL;
value = "http://scripts.sil.org/OFL";
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL";
}
);
date = "2019-12-27 09:55:44 +0000";
designer = "Carolina Short";
designerURL = "http://bigital.com/";
disablesNiceNames = 1;
familyName = Mansalva;
featurePrefixes = (
{
code = "lookup lookup_0 {\012sub A by ordfeminine;\012sub O by ordmasculine;\012sub a by ordfeminine;\012sub o by ordmasculine;\012} lookup_0;\012";
name = lookup_0;
},
{
code = "lookup lookup_1 {\012sub b by b.alt1;\012sub c by c.alt1;\012sub d by d.alt1;\012sub f by f.alt1;\012sub g by g.alt1;\012sub h by h.alt1;\012sub j by j.alt1;\012sub k by k.alt1;\012sub l by l.alt1;\012sub m by m.alt1;\012sub n by n.alt1;\012sub p by p.alt1;\012sub q by q.alt1;\012sub r by r.alt1;\012sub s by s.alt1;\012sub t by t.alt1;\012sub v by v.alt1;\012sub w by w.alt1;\012sub x by x.alt1;\012sub y by y.alt1;\012sub z by z.alt1;\012} lookup_1;\012";
name = lookup_1;
},
{
automatic = 1;
code = "languagesystem DFLT dflt;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature frac;\012feature ordn;\012feature sups;\012feature calt;\012";
name = aalt;
},
{
code = "sub one slash two by onehalf;\012sub one slash four by onequarter;\012sub three slash four by threequarters;\012";
name = frac;
},
{
code = "sub f i by fi.liga;\012sub f l by fl.liga;\012";
name = liga;
},
{
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012";
name = ordn;
},
{
code = "sub one by uni00B9;\012sub two by uni00B2;\012sub three by uni00B3;\012sub four by uni2074;\012";
name = sups;
},
{
code = "# consonant-consonant\012sub @Con0 @Con0' by @Con1;\012\012# consonant-other-consonant\012sub @Con0 [@Voc0 @Voc1 @Etc] @Con0' by @Con1;\012\012# consonant-other-other-consonant\012sub @Con0 [@Voc0 @Voc1 @Etc] [@Voc0 @Voc1 @Etc] @Con0' by @Con1;\012\012# vowel-vowel\012sub @Voc0 @Voc0' by @Voc1;\012\012# vowel-other-vowel\012sub @Voc0 [@Con0 @Con1 @Etc] @Voc0' by @Voc1;\012\012# vowel-other-other-vowel\012sub @Voc0 [@Con0 @Con1 @Etc] [@Con0 @Con1 @Etc] @Voc0' by @Voc1;\012\012# vowel-other-other-other-vowel\012sub @Voc0 [@Con0 @Con1 @Etc] [@Con0 @Con1 @Etc] [@Con0 @Con1 @Etc] @Voc0' by @Voc1;";
name = calt;
}
);
fontMaster = (
{
ascender = 889;
capHeight = 702;
customParameters = (
{
name = typoAscender;
value = 889;
},
{
name = typoDescender;
value = -200;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1112;
},
{
name = winDescent;
value = 466;
},
{
name = hheaAscender;
value = 889;
},
{
name = hheaDescender;
value = -200;
},
{
name = strikeoutPosition;
value = 230;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 5 values pushed */\0120 39 24 3 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 8 values pushed */\01244 4 28 8 18 5 3 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 8 values pushed */\01248 2 36 6 23 3 3 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 10 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 5 values pushed */\0122880 1856 1216 3 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 13 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 5 values pushed */\01264 64 64 3 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 8 values pushed */\01246 2 30 6 20 3 3 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
24,
24,
24,
24,
706,
620,
-19,
706,
620,
-19,
106,
106,
45,
45,
668,
-18,
636,
400,
18,
-343,
703,
-18,
636,
400,
11,
-343,
24,
24,
24,
24,
727,
371,
727,
371
);
}
);
descender = -200;
horizontalStems = (
20
);
id = "D6A4831D-747C-4592-93C0-305F4CD57904";
weightValue = 400;
widthValue = 5;
xHeight = 384;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"517 368 LINE",
"517 448 LINE SMOOTH",
"517 467 OFFCURVE",
"516 620 OFFCURVE",
"511 684 QCURVE SMOOTH",
"509 712 OFFCURVE",
"488 771 OFFCURVE",
"473 791 QCURVE SMOOTH",
"467 799 OFFCURVE",
"447 809 OFFCURVE",
"436 809 QCURVE SMOOTH",
"426 809 OFFCURVE",
"415 802 QCURVE SMOOTH",
"342 756 OFFCURVE",
"250 757 OFFCURVE",
"227 744 OFFCURVE",
"206 727 OFFCURVE",
"219 668 OFFCURVE",
"241 673 OFFCURVE",
"273 673 QCURVE SMOOTH",
"365 673 OFFCURVE",
"419 673 QCURVE",
"427 670 OFFCURVE",
"423 508 OFFCURVE",
"423 406 QCURVE SMOOTH",
"423 211 OFFCURVE",
"440 74 OFFCURVE",
"429 0 QCURVE",
"383 -12 OFFCURVE",
"187 -35 OFFCURVE",
"136 -39 QCURVE",
"134 -6 OFFCURVE",
"133 11 QCURVE SMOOTH",
"127 96 OFFCURVE",
"128 134 QCURVE SMOOTH",
"128 163 OFFCURVE",
"129 178 QCURVE",
"131 396 OFFCURVE",
"139 529 QCURVE",
"140 539 OFFCURVE",
"144 584 QCURVE SMOOTH",
"148 618 OFFCURVE",
"148 637 QCURVE SMOOTH",
"148 657 OFFCURVE",
"137 680 OFFCURVE",
"123 684 QCURVE",
"116 687 OFFCURVE",
"100 687 QCURVE SMOOTH",
"55 687 OFFCURVE",
"22 660 QCURVE SMOOTH",
"17 656 OFFCURVE",
"15 627 OFFCURVE",
"15 592 QCURVE SMOOTH",
"15 567 OFFCURVE",
"14 558 QCURVE SMOOTH",
"13 547 OFFCURVE",
"16 521 OFFCURVE",
"17 514 QCURVE",
"18 308 LINE SMOOTH",
"22 34 OFFCURVE",
"22 -101 QCURVE SMOOTH",
"22 -112 OFFCURVE",
"26 -135 OFFCURVE",
"31 -139 QCURVE",
"41 -151 OFFCURVE",
"47 -158 QCURVE SMOOTH",
"73 -188 OFFCURVE",
"124 -201 OFFCURVE",
"131 -197 QCURVE",
"160 -182 OFFCURVE",
"225 -179 QCURVE",
"248 -175 OFFCURVE",
"301 -169 QCURVE SMOOTH",
"430 -157 OFFCURVE",
"495 -141 QCURVE SMOOTH",
"503 -139 OFFCURVE",
"523 -104 OFFCURVE",
"523 -90 QCURVE SMOOTH",
"523 2 OFFCURVE",
"520 233 OFFCURVE",
"519 278 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
49 41 22 3 0 2 1 76 0 4 3 4 133 0 1 3 2 3 1 2 128 0 0 2 0 134 0 3 1 2 3 89 0 3 3 2 95 0 2 3 2 79 70 68 66 65 61 58 33 31 25 5 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 527;
}
);
note = .notdef;
},
{
glyphname = .null;
lastChange = "2019-06-19 03:00:49 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
width = 600;
}
);
},
{
glyphname = space;
lastChange = "2019-08-10 08:04:39 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
width = 250;
}
);
note = space;
unicode = 0020;
},
{
glyphname = LF;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
width = 0;
}
);
note = LF;
},
{
glyphname = exclam;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"287 566 LINE",
"277 642 LINE SMOOTH",
"274 667 OFFCURVE",
"235 715 OFFCURVE",
"218 715 QCURVE SMOOTH",
"197 715 OFFCURVE",
"178 680 OFFCURVE",
"176 641 QCURVE SMOOTH",
"175 626 LINE SMOOTH",
"167 444 OFFCURVE",
"116 232 QCURVE SMOOTH",
"106 189 OFFCURVE",
"103 155 QCURVE",
"103 145 OFFCURVE",
"112 120 OFFCURVE",
"118 114 QCURVE",
"124 110 OFFCURVE",
"130 110 QCURVE SMOOTH",
"143 110 OFFCURVE",
"150 117 QCURVE",
"176 141 OFFCURVE",
"190 171 QCURVE",
"203 196 OFFCURVE",
"219 252 QCURVE SMOOTH",
"254 387 OFFCURVE",
"267 446 QCURVE SMOOTH",
"272 470 OFFCURVE",
"281 530 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"108 -34 OFFCURVE",
"120 -34 QCURVE SMOOTH",
"142 -34 OFFCURVE",
"156 -14 QCURVE SMOOTH",
"164 -3 OFFCURVE",
"164 10 QCURVE SMOOTH",
"164 31 OFFCURVE",
"145 47 QCURVE SMOOTH",
"132 58 OFFCURVE",
"115 63 QCURVE SMOOTH",
"102 67 OFFCURVE",
"64 75 OFFCURVE",
"55 77 QCURVE",
"50 60 OFFCURVE",
"50 40 QCURVE SMOOTH",
"50 15 OFFCURVE",
"73 -18 OFFCURVE",
"96 -28 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
15 1 0 1 32 1 2 0 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 0 1 2 1 0 2 128 0 1 1 36 77 0 2 2 31 2 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
0 1 0 1 133 0 0 2 0 133 0 2 2 31 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 14 values pushed */
0 1 0 1 133 0 0 2 0 133 0 2 2 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
44 42 44 25 3 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 337;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = quotedbl;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"84 674 OFFCURVE",
"84 641 QCURVE",
"85 629 OFFCURVE",
"87 587 QCURVE SMOOTH",
"88 565 LINE",
"83 539 OFFCURVE",
"71 501 QCURVE SMOOTH",
"60 465 OFFCURVE",
"50 422 OFFCURVE",
"50 399 QCURVE SMOOTH",
"50 395 OFFCURVE",
"63 391 QCURVE",
"67 389 OFFCURVE",
"72 392 QCURVE",
"113 432 OFFCURVE",
"166 552 OFFCURVE",
"180 614 QCURVE SMOOTH",
"186 641 OFFCURVE",
"188 665 QCURVE",
"189 670 OFFCURVE",
"189 685 OFFCURVE",
"191 697 QCURVE",
"192 705 OFFCURVE",
"167 713 OFFCURVE",
"148 713 QCURVE SMOOTH",
"128 713 OFFCURVE",
"92 705 OFFCURVE",
"91 701 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"335 693 OFFCURVE",
"289 706 OFFCURVE",
"263 706 QCURVE SMOOTH",
"240 706 OFFCURVE",
"240 701 QCURVE",
"227 652 OFFCURVE",
"224 575 QCURVE",
"222 555 LINE",
"216 523 OFFCURVE",
"214 511 QCURVE",
"199 444 OFFCURVE",
"199 399 QCURVE SMOOTH",
"199 395 OFFCURVE",
"212 391 QCURVE",
"214 390 OFFCURVE",
"239 417 OFFCURVE",
"242 420 QCURVE SMOOTH",
"270 448 OFFCURVE",
"303 508 OFFCURVE",
"318 564 OFFCURVE",
"329 614 QCURVE SMOOTH",
"334 637 OFFCURVE",
"334 644 QCURVE SMOOTH",
"334 647 OFFCURVE",
"333 655 OFFCURVE",
"333 661 QCURVE SMOOTH",
"333 672 OFFCURVE",
"334 681 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 7 values pushed */
48 29 25 22 4 0 73 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 7 values pushed */
48 29 25 22 4 1 73 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 7 values pushed */
1 1 0 0 36 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 5 values pushed */
1 1 0 0 118 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 9 values pushed */
0 0 1 0 133 0 1 1 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
53 52 33 2 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 384;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"771 336 OFFCURVE",
"761 348 OFFCURVE",
"754 351 QCURVE SMOOTH",
"740 357 OFFCURVE",
"714 357 QCURVE",
"682 355 OFFCURVE",
"616 350 QCURVE",
"624 385 OFFCURVE",
"639 453 QCURVE",
"658 457 OFFCURVE",
"704 470 OFFCURVE",
"716 473 QCURVE",
"738 480 LINE",
"744 481 OFFCURVE",
"758 492 OFFCURVE",
"758 495 QCURVE",
"758 495 LINE",
"755 500 OFFCURVE",
"740 509 OFFCURVE",
"730 511 QCURVE",
"724 513 OFFCURVE",
"705 513 QCURVE SMOOTH",
"688 513 OFFCURVE",
"680 512 QCURVE SMOOTH",
"653 509 LINE",
"666 571 LINE SMOOTH",
"670 592 OFFCURVE",
"670 608 QCURVE SMOOTH",
"670 635 OFFCURVE",
"660 645 QCURVE SMOOTH",
"638 666 OFFCURVE",
"606 676 QCURVE",
"595 679 OFFCURVE",
"580 655 OFFCURVE",
"576 630 QCURVE SMOOTH",
"573 610 OFFCURVE",
"564 556 OFFCURVE",
"561 542 QCURVE SMOOTH",
"553 501 LINE",
"443 493 LINE",
"457 535 LINE",
"462 554 OFFCURVE",
"485 631 OFFCURVE",
"493 661 QCURVE",
"498 676 OFFCURVE",
"498 686 QCURVE SMOOTH",
"498 701 OFFCURVE",
"476 719 OFFCURVE",
"452 724 QCURVE",
"447 726 OFFCURVE",
"436 726 QCURVE SMOOTH",
"407 725 LINE",
"391 658 LINE SMOOTH",
"354 506 OFFCURVE",
"349 485 QCURVE",
"283 479 LINE SMOOTH",
"240 474 OFFCURVE",
"184 461 QCURVE SMOOTH",
"172 458 OFFCURVE",
"149 446 OFFCURVE",
"150 441 QCURVE",
"151 433 OFFCURVE",
"168 416 OFFCURVE",
"178 411 QCURVE",
"207 399 OFFCURVE",
"242 399 QCURVE SMOOTH",
"253 399 OFFCURVE",
"279 402 QCURVE SMOOTH",
"306 406 LINE SMOOTH",
"313 407 OFFCURVE",
"327 408 OFFCURVE",
"332 409 QCURVE",
"328 387 LINE SMOOTH",
"321 350 OFFCURVE",
"311 319 QCURVE",
"311 318 LINE",
"200 297 LINE",
"184 295 OFFCURVE",
"167 288 QCURVE",
"143 276 OFFCURVE",
"143 262 QCURVE SMOOTH",
"143 249 OFFCURVE",
"166 235 QCURVE",
"205 215 OFFCURVE",
"239 215 QCURVE SMOOTH",
"251 215 OFFCURVE",
"265 218 QCURVE",
"270 220 OFFCURVE",
"284 222 QCURVE",
"264 153 OFFCURVE",
"255 119 QCURVE SMOOTH",
"248 93 OFFCURVE",
"245 55 QCURVE SMOOTH",
"243 34 OFFCURVE",
"242 26 QCURVE",
"262 14 OFFCURVE",
"284 4 OFFCURVE",
"292 4 QCURVE SMOOTH",
"303 4 OFFCURVE",
"316 24 OFFCURVE",
"324 50 QCURVE SMOOTH",
"341 107 OFFCURVE",
"374 223 QCURVE",
"376 238 LINE",
"424 246 LINE",
"506 260 LINE",
"472 92 LINE",
"468 55 LINE SMOOTH",
"466 32 OFFCURVE",
"466 27 QCURVE SMOOTH",
"466 0 OFFCURVE",
"478 0 QCURVE SMOOTH",
"484 0 OFFCURVE",
"499 11 QCURVE",
"522 26 OFFCURVE",
"552 92 OFFCURVE",
"564 141 QCURVE SMOOTH",
"587 230 OFFCURVE",
"598 275 QCURVE",
"673 288 LINE SMOOTH",
"697 292 OFFCURVE",
"749 309 OFFCURVE",
"755 310 QCURVE",
"762 313 OFFCURVE",
"774 325 OFFCURVE",
"773 329 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"524 344 LINE",
"489 343 LINE",
"401 332 LINE",
"406 350 LINE SMOOTH",
"417 392 OFFCURVE",
"424 422 QCURVE",
"541 437 LINE",
"541 433 OFFCURVE",
"539 429 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
128 100 85 64 53 5 3 5 118 1 7 6 132 36 19 3 2 7 30 15 2 0 2 4 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 48 values pushed */
0 5 4 3 4 5 3 128 0 3 6 4 3 6 126 0 6 7 4 6 7 126 0 7 2 4 7 2 126 0 2 0 4 2 0 126 0 4 4 36 77 1 1 0 0 40 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 4 5 4 133 0 5 3 5 133 0 3 6 3 133 0 6 7 6 133 0 7 2 7 133 0 2 0 2 133 1 1 0 0 40 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 35 values pushed */
0 4 5 4 133 0 5 3 5 133 0 3 6 3 133 0 6 7 6 133 0 7 2 7 133 0 2 0 2 133 1 1 0 0 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
134 133 121 119 104 102 75 73 60 58 44 28 44 8 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 852;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"421 490 OFFCURVE",
"434 496 OFFCURVE",
"453 508 QCURVE SMOOTH",
"468 518 OFFCURVE",
"468 532 QCURVE SMOOTH",
"468 546 OFFCURVE",
"454 555 QCURVE SMOOTH",
"399 592 OFFCURVE",
"346 592 QCURVE SMOOTH",
"334 592 OFFCURVE",
"325 606 OFFCURVE",
"324 633 QCURVE SMOOTH",
"323 662 OFFCURVE",
"315 705 OFFCURVE",
"307 730 QCURVE SMOOTH",
"295 766 OFFCURVE",
"256 766 QCURVE SMOOTH",
"250 766 OFFCURVE",
"237 764 QCURVE",
"218 760 OFFCURVE",
"205 739 OFFCURVE",
"205 722 QCURVE",
"206 700 LINE SMOOTH",
"207 683 OFFCURVE",
"206 660 OFFCURVE",
"206 653 QCURVE SMOOTH",
"206 632 LINE SMOOTH",
"206 605 OFFCURVE",
"207 590 QCURVE",
"208 553 OFFCURVE",
"173 529 QCURVE SMOOTH",
"127 497 OFFCURVE",
"93 463 QCURVE SMOOTH",
"48 419 OFFCURVE",
"50 373 QCURVE SMOOTH",
"51 349 OFFCURVE",
"77 307 OFFCURVE",
"102 292 QCURVE",
"123 281 OFFCURVE",
"146 272 OFFCURVE",
"159 273 QCURVE SMOOTH",
"175 274 OFFCURVE",
"185 276 QCURVE SMOOTH",
"209 281 OFFCURVE",
"224 257 OFFCURVE",
"224 239 QCURVE SMOOTH",
"224 232 OFFCURVE",
"223 209 OFFCURVE",
"223 201 QCURVE",
"224 196 OFFCURVE",
"224 186 QCURVE SMOOTH",
"224 145 OFFCURVE",
"210 114 OFFCURVE",
"189 114 QCURVE SMOOTH",
"174 114 OFFCURVE",
"132 125 QCURVE",
"127 126 OFFCURVE",
"110 122 OFFCURVE",
"106 121 QCURVE",
"107 119 OFFCURVE",
"109 101 OFFCURVE",
"113 99 QCURVE",
"121 94 OFFCURVE",
"149 78 OFFCURVE",
"177 64 OFFCURVE",
"193 60 QCURVE SMOOTH",
"211 56 OFFCURVE",
"229 40 OFFCURVE",
"229 24 QCURVE",
"232 -10 OFFCURVE",
"233 -28 QCURVE SMOOTH",
"234 -41 OFFCURVE",
"236 -76 OFFCURVE",
"236 -102 QCURVE SMOOTH",
"236 -107 OFFCURVE",
"237 -135 OFFCURVE",
"255 -157 OFFCURVE",
"288 -157 QCURVE SMOOTH",
"329 -157 OFFCURVE",
"329 -99 QCURVE SMOOTH",
"329 -24 LINE SMOOTH",
"330 20 OFFCURVE",
"328 51 QCURVE SMOOTH",
"327 68 LINE",
"327 79 OFFCURVE",
"340 94 OFFCURVE",
"364 114 QCURVE SMOOTH",
"385 132 OFFCURVE",
"416 170 OFFCURVE",
"436 197 QCURVE SMOOTH",
"442 205 OFFCURVE",
"457 225 OFFCURVE",
"467 238 QCURVE",
"485 259 OFFCURVE",
"485 286 QCURVE SMOOTH",
"485 304 OFFCURVE",
"468 335 OFFCURVE",
"454 344 QCURVE SMOOTH",
"439 354 OFFCURVE",
"397 371 OFFCURVE",
"380 375 QCURVE",
"355 377 OFFCURVE",
"319 383 OFFCURVE",
"306 391 OFFCURVE",
"306 401 QCURVE SMOOTH",
"306 414 OFFCURVE",
"318 454 QCURVE",
"322 487 LINE",
"342 486 LINE",
"362 483 OFFCURVE",
"384 483 QCURVE SMOOTH",
"394 483 OFFCURVE",
"398 484 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"223 350 OFFCURVE",
"199 339 OFFCURVE",
"184 339 QCURVE SMOOTH",
"165 339 OFFCURVE",
"146 370 OFFCURVE",
"148 392 QCURVE",
"146 403 OFFCURVE",
"146 407 QCURVE SMOOTH",
"146 430 OFFCURVE",
"182 460 OFFCURVE",
"214 471 QCURVE",
"218 469 OFFCURVE",
"226 408 OFFCURVE",
"226 382 QCURVE SMOOTH",
"226 369 OFFCURVE",
"224 358 QCURVE"
);
},
{
closed = 1;
nodes = (
"305 221 OFFCURVE",
"305 252 QCURVE SMOOTH",
"305 308 OFFCURVE",
"356 308 QCURVE SMOOTH",
"371 308 OFFCURVE",
"398 300 QCURVE",
"400 263 OFFCURVE",
"364 200 OFFCURVE",
"320 180 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 89 values pushed */
122 120 2 7 0 131 1 4 8 137 1 3 4 43 41 2 2 3 4 76 0 5 6 5 133 0 8 7 4 7 8 4 128 0 3 4 2 4 3 2 128 0 2 2 132 0 6 1 1 0 7 6 0 105 0 7 8 4 7 89 0 7 7 4 97 0 4 7 4 81 134 132 126 124 104 102 96 94 71 70 59 57 35 33 17 17 9 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 569;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"356 539 LINE",
"381 548 LINE",
"422 561 OFFCURVE",
"439 575 QCURVE SMOOTH",
"483 611 OFFCURVE",
"485 664 QCURVE SMOOTH",
"486 692 OFFCURVE",
"472 734 QCURVE SMOOTH",
"460 771 OFFCURVE",
"390 833 OFFCURVE",
"355 833 QCURVE SMOOTH",
"321 833 LINE SMOOTH",
"295 833 OFFCURVE",
"286 826 QCURVE SMOOTH",
"243 792 OFFCURVE",
"227 754 QCURVE SMOOTH",
"215 726 OFFCURVE",
"216 692 QCURVE SMOOTH",
"218 634 OFFCURVE",
"278 547 OFFCURVE",
"337 547 QCURVE SMOOTH",
"347 547 OFFCURVE",
"353 548 QCURVE"
);
},
{
closed = 1;
nodes = (
"330 607 OFFCURVE",
"323 607 QCURVE SMOOTH",
"310 607 OFFCURVE",
"305 626 QCURVE SMOOTH",
"282 713 OFFCURVE",
"273 778 QCURVE SMOOTH",
"271 792 OFFCURVE",
"304 815 OFFCURVE",
"323 815 QCURVE SMOOTH",
"340 815 OFFCURVE",
"377 789 OFFCURVE",
"402 753 OFFCURVE",
"403 741 QCURVE",
"399 689 OFFCURVE",
"374 631 OFFCURVE",
"341 613 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"212 145 LINE SMOOTH",
"315 233 OFFCURVE",
"364 282 QCURVE SMOOTH",
"411 329 OFFCURVE",
"537 459 OFFCURVE",
"571 495 QCURVE SMOOTH",
"647 571 OFFCURVE",
"718 648 QCURVE SMOOTH",
"730 661 OFFCURVE",
"730 674 QCURVE SMOOTH",
"730 682 OFFCURVE",
"719 697 OFFCURVE",
"710 700 QCURVE",
"695 708 OFFCURVE",
"671 708 QCURVE SMOOTH",
"661 708 OFFCURVE",
"647 706 QCURVE SMOOTH",
"620 702 OFFCURVE",
"583 674 OFFCURVE",
"561 646 QCURVE SMOOTH",
"547 628 OFFCURVE",
"538 619 QCURVE SMOOTH",
"438 517 OFFCURVE",
"278 340 QCURVE",
"228 290 OFFCURVE",
"136 173 QCURVE SMOOTH",
"114 145 LINE",
"107 135 OFFCURVE",
"107 120 QCURVE SMOOTH",
"107 115 OFFCURVE",
"108 112 QCURVE",
"109 107 OFFCURVE",
"129 98 OFFCURVE",
"135 94 QCURVE",
"144 98 OFFCURVE",
"175 114 OFFCURVE",
"184 121 QCURVE"
);
},
{
closed = 1;
nodes = (
"649 321 LINE SMOOTH",
"633 321 OFFCURVE",
"609 329 OFFCURVE",
"600 343 QCURVE",
"599 346 OFFCURVE",
"591 346 QCURVE SMOOTH",
"584 346 OFFCURVE",
"581 343 QCURVE SMOOTH",
"575 337 OFFCURVE",
"551 321 OFFCURVE",
"530 302 OFFCURVE",
"523 291 QCURVE SMOOTH",
"502 257 OFFCURVE",
"502 219 QCURVE SMOOTH",
"502 170 OFFCURVE",
"562 91 OFFCURVE",
"606 80 QCURVE",
"631 76 OFFCURVE",
"651 76 QCURVE SMOOTH",
"702 76 OFFCURVE",
"771 128 OFFCURVE",
"771 182 QCURVE SMOOTH",
"771 241 OFFCURVE",
"711 321 OFFCURVE",
"664 321 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"617 177 OFFCURVE",
"601 221 OFFCURVE",
"601 245 QCURVE SMOOTH",
"601 279 OFFCURVE",
"616 302 QCURVE",
"635 288 OFFCURVE",
"655 245 OFFCURVE",
"655 223 QCURVE SMOOTH",
"655 189 OFFCURVE",
"633 164 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
25 1 4 2 94 1 6 0 110 105 2 5 6 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 1 0 2 4 1 2 105 0 3 7 1 0 6 3 0 105 8 1 6 0 5 6 5 101 0 4 4 36 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 43 values pushed */
0 4 2 3 2 4 3 128 0 1 0 2 4 1 2 105 0 3 7 1 0 6 3 0 105 8 1 6 5 5 6 89 8 1 6 6 5 97 0 5 6 5 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 25 values pushed */
76 76 2 0 76 100 76 98 82 80 61 59 36 35 30 28 12 9 0 22 2 22 9 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 820;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"306 389 OFFCURVE",
"306 408 QCURVE SMOOTH",
"306 428 OFFCURVE",
"329 449 QCURVE SMOOTH",
"392 508 OFFCURVE",
"408 605 QCURVE SMOOTH",
"410 617 OFFCURVE",
"410 624 QCURVE SMOOTH",
"410 662 OFFCURVE",
"376 746 OFFCURVE",
"350 764 QCURVE SMOOTH",
"321 785 OFFCURVE",
"275 785 QCURVE SMOOTH",
"224 785 OFFCURVE",
"119 731 OFFCURVE",
"50 639 OFFCURVE",
"50 585 QCURVE SMOOTH",
"50 538 OFFCURVE",
"91 462 OFFCURVE",
"128 426 QCURVE SMOOTH",
"145 409 OFFCURVE",
"145 397 QCURVE SMOOTH",
"145 387 OFFCURVE",
"131 368 QCURVE SMOOTH",
"70 288 OFFCURVE",
"70 209 QCURVE SMOOTH",
"70 193 OFFCURVE",
"73 175 QCURVE SMOOTH",
"83 107 OFFCURVE",
"178 22 OFFCURVE",
"239 22 QCURVE SMOOTH",
"276 22 OFFCURVE",
"313 40 QCURVE SMOOTH",
"336 51 OFFCURVE",
"375 87 OFFCURVE",
"402 116 QCURVE SMOOTH",
"422 137 LINE SMOOTH",
"433 149 OFFCURVE",
"445 159 OFFCURVE",
"453 159 QCURVE SMOOTH",
"458 159 OFFCURVE",
"470 154 QCURVE",
"499 139 OFFCURVE",
"552 53 OFFCURVE",
"552 20 QCURVE SMOOTH",
"552 12 OFFCURVE",
"551 9 QCURVE SMOOTH",
"550 6 OFFCURVE",
"550 -1 QCURVE SMOOTH",
"550 -14 OFFCURVE",
"565 -29 OFFCURVE",
"579 -33 QCURVE",
"588 -36 OFFCURVE",
"596 -36 QCURVE SMOOTH",
"616 -36 OFFCURVE",
"641 -2 OFFCURVE",
"641 26 QCURVE SMOOTH",
"641 152 OFFCURVE",
"531 217 QCURVE",
"507 233 OFFCURVE",
"507 250 QCURVE SMOOTH",
"507 260 OFFCURVE",
"514 279 QCURVE SMOOTH",
"534 329 OFFCURVE",
"559 416 QCURVE SMOOTH",
"562 428 OFFCURVE",
"562 440 QCURVE SMOOTH",
"562 477 OFFCURVE",
"523 477 QCURVE SMOOTH",
"484 477 OFFCURVE",
"473 430 QCURVE SMOOTH",
"467 406 OFFCURVE",
"445 352 OFFCURVE",
"442 344 QCURVE SMOOTH",
"439 336 OFFCURVE",
"429 313 OFFCURVE",
"423 297 QCURVE",
"360 347 OFFCURVE",
"329 370 QCURVE"
);
},
{
closed = 1;
nodes = (
"238 482 OFFCURVE",
"226 482 QCURVE SMOOTH",
"215 482 OFFCURVE",
"201 500 QCURVE SMOOTH",
"168 545 OFFCURVE",
"168 594 QCURVE SMOOTH",
"168 621 OFFCURVE",
"191 673 OFFCURVE",
"212 693 QCURVE SMOOTH",
"237 716 OFFCURVE",
"253 716 QCURVE SMOOTH",
"265 716 OFFCURVE",
"281 694 OFFCURVE",
"287 672 QCURVE SMOOTH",
"290 661 OFFCURVE",
"294 632 QCURVE",
"301 627 LINE",
"283 582 LINE",
"276 567 OFFCURVE",
"259 526 OFFCURVE",
"247 500 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"350 240 OFFCURVE",
"354 226 OFFCURVE",
"354 219 QCURVE SMOOTH",
"354 212 OFFCURVE",
"352 210 QCURVE",
"313 152 OFFCURVE",
"279 115 QCURVE SMOOTH",
"268 103 OFFCURVE",
"251 103 QCURVE SMOOTH",
"233 103 OFFCURVE",
"202 132 OFFCURVE",
"198 155 QCURVE",
"194 185 OFFCURVE",
"194 200 QCURVE SMOOTH",
"194 268 OFFCURVE",
"234 325 QCURVE",
"275 295 LINE SMOOTH",
"288 285 OFFCURVE",
"324 259 OFFCURVE",
"346 242 QCURVE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
82 70 2 0 5 116 103 1 3 2 0 33 29 2 1 3 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 18 values pushed */
82 70 2 6 5 116 103 1 3 2 0 33 29 2 1 3 3 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
6 1 0 5 2 5 0 2 128 0 2 7 5 2 7 126 0 4 0 5 0 4 5 105 0 7 7 3 98 0 3 3 34 77 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
6 1 0 5 2 5 0 2 128 0 2 7 5 2 7 126 0 1 3 1 134 0 4 0 5 0 4 5 105 0 7 7 3 98 0 3 3 34 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 46 values pushed */
0 6 5 0 5 6 0 128 0 0 2 5 0 2 126 0 2 7 5 2 7 126 0 1 3 1 134 0 4 0 5 6 4 5 105 0 7 7 3 98 0 3 3 34 3 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
111 109 98 96 89 87 66 64 39 45 29 40 8 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 691;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
lastChange = "2019-03-19 08:22:37 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"99 691 OFFCURVE",
"132 660 OFFCURVE",
"123 622 CURVE",
"111 577 OFFCURVE",
"99 531 OFFCURVE",
"81 488 CURVE",
"75 473 OFFCURVE",
"52 464 OFFCURVE",
"35 455 CURVE",
"32 454 OFFCURVE",
"15 469 OFFCURVE",
"16 476 CURVE",
"20 537 OFFCURVE",
"25 598 OFFCURVE",
"32 659 CURVE",
"33 669 OFFCURVE",
"48 677 OFFCURVE",
"50 679 CURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
14 1 0 73 0 0 0 118 34 1 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 120;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
lastChange = "2019-03-19 08:02:52 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"349 -86 LINE",
"316 -71 LINE SMOOTH",
"245 -39 OFFCURVE",
"202 -18 QCURVE SMOOTH",
"155 5 OFFCURVE",
"152 62 QCURVE SMOOTH",
"150 104 OFFCURVE",
"156 130 QCURVE SMOOTH",
"169 188 OFFCURVE",
"211 306 OFFCURVE",
"244 369 QCURVE SMOOTH",
"293 465 OFFCURVE",
"381 535 QCURVE SMOOTH",
"400 550 OFFCURVE",
"400 567 QCURVE SMOOTH",
"400 573 OFFCURVE",
"397 579 QCURVE",
"389 601 OFFCURVE",
"370 627 OFFCURVE",
"352 632 QCURVE",
"301 593 LINE SMOOTH",
"290 585 OFFCURVE",
"283 575 QCURVE",
"122 403 OFFCURVE",
"83 154 QCURVE",
"81 138 OFFCURVE",
"81 131 QCURVE SMOOTH",
"82 100 OFFCURVE",
"96 49 QCURVE SMOOTH",
"107 10 OFFCURVE",
"160 -43 OFFCURVE",
"205 -74 QCURVE SMOOTH",
"277 -124 OFFCURVE",
"349 -124 QCURVE SMOOTH",
"361 -124 OFFCURVE",
"380 -115 OFFCURVE",
"387 -102 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
16 1 0 74 0 0 0 118 33 1 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 400;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2019-03-19 08:01:59 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"27 562 OFFCURVE",
"54 528 QCURVE",
"64 518 OFFCURVE",
"73 506 QCURVE",
"79 499 OFFCURVE",
"116 456 OFFCURVE",
"126 435 QCURVE SMOOTH",
"174 335 OFFCURVE",
"174 236 QCURVE SMOOTH",
"175 115 OFFCURVE",
"104 0 QCURVE SMOOTH",
"64 -65 LINE",
"30 -120 LINE",
"84 -115 OFFCURVE",
"162 -79 OFFCURVE",
"184 -41 QCURVE SMOOTH",
"255 83 OFFCURVE",
"255 194 QCURVE SMOOTH",
"255 207 OFFCURVE",
"253 233 QCURVE",
"250 256 LINE SMOOTH",
"242 321 OFFCURVE",
"221 408 OFFCURVE",
"193 445 QCURVE SMOOTH",
"174 468 OFFCURVE",
"114 544 QCURVE SMOOTH",
"83 583 LINE",
"71 597 OFFCURVE",
"37 609 OFFCURVE",
"9 609 QCURVE",
"12 600 OFFCURVE",
"23 568 OFFCURVE",
"29 559 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
19 1 0 73 0 0 0 118 18 1 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 300;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"283 543 OFFCURVE",
"271 543 QCURVE SMOOTH",
"257 543 OFFCURVE",
"247 538 QCURVE SMOOTH",
"237 533 OFFCURVE",
"237 504 QCURVE SMOOTH",
"238 471 OFFCURVE",
"244 409 QCURVE",
"233 405 LINE",
"211 431 LINE",
"187 464 OFFCURVE",
"139 504 OFFCURVE",
"107 511 QCURVE SMOOTH",
"97 513 OFFCURVE",
"70 504 OFFCURVE",
"62 496 QCURVE",
"60 492 OFFCURVE",
"60 487 QCURVE SMOOTH",
"60 478 OFFCURVE",
"66 459 OFFCURVE",
"71 454 QCURVE SMOOTH",
"118 405 OFFCURVE",
"175 358 QCURVE",
"192 345 OFFCURVE",
"192 336 QCURVE SMOOTH",
"192 330 OFFCURVE",
"181 321 OFFCURVE",
"169 314 QCURVE",
"115 287 OFFCURVE",
"67 251 QCURVE SMOOTH",
"50 238 OFFCURVE",
"50 223 QCURVE SMOOTH",
"50 215 OFFCURVE",
"64 199 OFFCURVE",
"76 195 QCURVE SMOOTH",
"92 190 OFFCURVE",
"127 190 QCURVE SMOOTH",
"148 190 LINE SMOOTH",
"150 190 OFFCURVE",
"176 194 QCURVE",
"163 168 LINE",
"160 163 OFFCURVE",
"145 131 OFFCURVE",
"137 120 QCURVE",
"126 103 OFFCURVE",
"126 89 QCURVE SMOOTH",
"126 71 OFFCURVE",
"145 58 QCURVE",
"164 46 OFFCURVE",
"186 46 QCURVE SMOOTH",
"217 46 OFFCURVE",
"231 67 QCURVE SMOOTH",
"256 107 LINE SMOOTH",
"260 113 OFFCURVE",
"271 132 OFFCURVE",
"279 144 QCURVE",
"328 -34 LINE",
"336 -30 OFFCURVE",
"359 -19 OFFCURVE",
"360 -15 QCURVE",
"371 78 OFFCURVE",
"382 195 QCURVE SMOOTH",
"386 232 LINE",
"488 180 LINE",
"493 177 OFFCURVE",
"514 163 OFFCURVE",
"522 163 QCURVE SMOOTH",
"534 163 OFFCURVE",
"543 175 QCURVE",
"529 205 OFFCURVE",
"482 244 OFFCURVE",
"443 267 QCURVE SMOOTH",
"413 285 OFFCURVE",
"399 295 QCURVE",
"430 313 LINE",
"475 338 LINE SMOOTH",
"532 369 OFFCURVE",
"547 378 QCURVE SMOOTH",
"552 381 OFFCURVE",
"560 397 OFFCURVE",
"562 401 QCURVE",
"558 403 OFFCURVE",
"542 412 OFFCURVE",
"536 412 QCURVE",
"523 413 OFFCURVE",
"497 413 QCURVE SMOOTH",
"455 413 LINE",
"463 432 LINE",
"482 473 OFFCURVE",
"491 502 QCURVE",
"493 512 OFFCURVE",
"493 519 QCURVE SMOOTH",
"493 531 OFFCURVE",
"491 550 OFFCURVE",
"490 557 QCURVE",
"485 555 OFFCURVE",
"452 542 OFFCURVE",
"440 534 QCURVE SMOOTH",
"431 528 OFFCURVE",
"414 506 OFFCURVE",
"410 501 QCURVE SMOOTH",
"364 443 LINE",
"347 465 LINE SMOOTH",
"314 509 OFFCURVE",
"287 539 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
86 12 2 3 0 4 96 64 41 30 4 3 0 35 1 1 3 48 1 2 1 4 76 47 1 2 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 4 0 4 133 0 3 0 1 0 3 1 128 0 1 2 0 1 2 126 0 2 2 132 0 0 0 33 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 4 0 4 133 0 0 3 0 133 0 3 1 3 133 0 1 2 1 133 0 2 2 118 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 13 values pushed */
103 101 68 65 55 53 37 36 19 17 5 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 612;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
lastChange = "2019-11-20 00:16:54 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"582 364 LINE",
"540 359 OFFCURVE",
"453 353 QCURVE",
"445 352 OFFCURVE",
"424 358 OFFCURVE",
"419 359 QCURVE",
"420 420 LINE SMOOTH",
"420 440 OFFCURVE",
"419 450 QCURVE SMOOTH",
"413 508 OFFCURVE",
"351 530 QCURVE",
"342 534 OFFCURVE",
"332 534 QCURVE SMOOTH",
"316 534 OFFCURVE",
"296 510 OFFCURVE",
"294 490 QCURVE",
"294 485 OFFCURVE",
"298 468 OFFCURVE",
"298 463 QCURVE SMOOTH",
"299 405 LINE SMOOTH",
"299 379 OFFCURVE",
"297 367 QCURVE",
"295 344 OFFCURVE",
"289 328 OFFCURVE",
"274 321 OFFCURVE",
"251 315 QCURVE SMOOTH",
"200 301 OFFCURVE",
"124 269 OFFCURVE",
"92 242 QCURVE SMOOTH",
"71 224 OFFCURVE",
"71 206 QCURVE SMOOTH",
"71 172 OFFCURVE",
"109 161 QCURVE SMOOTH",
"138 153 OFFCURVE",
"154 153 QCURVE SMOOTH",
"183 153 OFFCURVE",
"207 169 QCURVE SMOOTH",
"232 188 OFFCURVE",
"265 188 QCURVE",
"260 154 LINE",
"254 116 LINE SMOOTH",
"241 34 OFFCURVE",
"237 -4 QCURVE SMOOTH",
"236 -18 OFFCURVE",
"245 -34 OFFCURVE",
"253 -34 QCURVE SMOOTH",
"262 -34 OFFCURVE",
"274 -26 QCURVE SMOOTH",
"315 1 OFFCURVE",
"325 24 QCURVE SMOOTH",
"347 78 OFFCURVE",
"381 191 QCURVE SMOOTH",
"387 212 OFFCURVE",
"410 233 OFFCURVE",
"433 236 QCURVE SMOOTH",
"457 239 OFFCURVE",
"506 246 QCURVE SMOOTH",
"561 255 LINE",
"587 268 OFFCURVE",
"634 322 OFFCURVE",
"634 341 QCURVE SMOOTH",
"634 365 OFFCURVE",
"595 365 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
43 1 5 3 56 1 4 5 19 1 0 2 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 3 5 3 133 0 1 4 2 4 1 2 128 0 2 0 4 2 0 126 6 1 5 5 33 77 0 4 4 33 77 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 3 5 3 133 0 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 2 0 5 2 0 126 6 1 5 5 33 77 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
0 3 5 3 133 0 4 5 1 5 4 1 128 0 1 2 5 1 2 126 0 2 0 5 2 0 126 0 0 0 132 6 1 5 5 33 5 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 0 62 0 62 60 59 50 48 34 22 47 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 700;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
lastChange = "2019-03-19 07:57:21 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"100 130 OFFCURVE",
"82 79 OFFCURVE",
"76 40 OFFCURVE",
"74 34 QCURVE SMOOTH",
"41 -74 LINE",
"26 -146 OFFCURVE",
"8 -182 QCURVE SMOOTH",
"7 -184 OFFCURVE",
"43 -202 OFFCURVE",
"46 -208 QCURVE",
"149 -109 OFFCURVE",
"193 29 QCURVE SMOOTH",
"199 48 OFFCURVE",
"203 58 QCURVE SMOOTH",
"221 100 OFFCURVE",
"228 137 QCURVE SMOOTH",
"231 153 OFFCURVE",
"169 166 OFFCURVE",
"138 163 QCURVE SMOOTH",
"119 161 OFFCURVE",
"116 156 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
10 2 1 50 
CALL[ ]\011/* CallFunction */";
};
width = 300;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"499 301 OFFCURVE",
"408 323 OFFCURVE",
"354 323 QCURVE SMOOTH",
"285 323 OFFCURVE",
"179 314 QCURVE SMOOTH",
"131 311 LINE",
"104 308 OFFCURVE",
"79 297 QCURVE",
"50 283 OFFCURVE",
"50 264 QCURVE SMOOTH",
"50 247 OFFCURVE",
"70 233 QCURVE",
"115 199 OFFCURVE",
"164 199 QCURVE SMOOTH",
"172 199 OFFCURVE",
"186 201 QCURVE",
"218 207 LINE",
"253 215 OFFCURVE",
"274 217 QCURVE SMOOTH",
"314 220 LINE SMOOTH",
"381 227 OFFCURVE",
"429 227 QCURVE SMOOTH",
"492 227 OFFCURVE",
"535 216 QCURVE",
"538 215 OFFCURVE",
"554 218 QCURVE",
"561 229 OFFCURVE",
"561 239 QCURVE SMOOTH",
"561 249 OFFCURVE",
"549 263 OFFCURVE",
"537 272 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
0 2 0 1 2 87 0 3 0 0 1 3 0 105 0 2 2 1 97 0 1 2 1 81 33 23 38 39 4 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 611;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = period;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"174 24 OFFCURVE",
"174 28 QCURVE SMOOTH",
"174 46 OFFCURVE",
"155 87 OFFCURVE",
"142 95 QCURVE",
"132 102 OFFCURVE",
"123 102 QCURVE SMOOTH",
"117 102 OFFCURVE",
"104 95 OFFCURVE",
"90 81 OFFCURVE",
"88 79 QCURVE",
"88 79 OFFCURVE",
"79 73 QCURVE SMOOTH",
"65 64 OFFCURVE",
"50 46 OFFCURVE",
"50 34 QCURVE SMOOTH",
"50 9 OFFCURVE",
"93 -33 OFFCURVE",
"116 -34 QCURVE",
"133 -34 OFFCURVE",
"166 -4 OFFCURVE",
"172 16 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
19 1 0 1 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 1 0 97 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
42 33 2 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 224;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
lastChange = "2019-03-17 10:48:41 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"174 32 OFFCURVE",
"210 160 OFFCURVE",
"217 185 QCURVE SMOOTH",
"219 192 OFFCURVE",
"223 205 OFFCURVE",
"224 210 QCURVE",
"262 356 LINE SMOOTH",
"287 454 OFFCURVE",
"299 502 QCURVE SMOOTH",
"317 563 OFFCURVE",
"343 651 QCURVE SMOOTH",
"371 746 LINE",
"376 766 OFFCURVE",
"376 777 QCURVE SMOOTH",
"376 799 OFFCURVE",
"347 822 OFFCURVE",
"316 829 QCURVE",
"305 832 OFFCURVE",
"294 832 QCURVE SMOOTH",
"285 832 OFFCURVE",
"267 830 OFFCURVE",
"256 830 QCURVE",
"250 808 OFFCURVE",
"234 738 QCURVE SMOOTH",
"187 534 LINE SMOOTH",
"173 474 OFFCURVE",
"167 444 QCURVE SMOOTH",
"157 388 OFFCURVE",
"143 337 QCURVE SMOOTH",
"110 221 LINE SMOOTH",
"85 138 OFFCURVE",
"68 71 QCURVE SMOOTH",
"62 44 OFFCURVE",
"55 -10 QCURVE SMOOTH",
"50 -50 LINE",
"97 -80 OFFCURVE",
"117 -80 QCURVE SMOOTH",
"131 -80 OFFCURVE",
"149 -53 OFFCURVE",
"159 -19 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
4 1 0 1 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 12 values pushed */
2 1 1 0 1 133 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 10 values pushed */
2 1 1 0 1 133 0 0 0 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
33 30 33 3 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 438;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
lastChange = "2019-04-02 08:41:37 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"24 323 OFFCURVE",
"24 228 QCURVE SMOOTH",
"24 180 OFFCURVE",
"38 120 QCURVE SMOOTH",
"50 70 OFFCURVE",
"114 -6 OFFCURVE",
"159 -23 QCURVE SMOOTH",
"191 -35 OFFCURVE",
"221 -35 QCURVE SMOOTH",
"278 -35 OFFCURVE",
"327 2 QCURVE SMOOTH",
"381 43 OFFCURVE",
"424 131 QCURVE SMOOTH",
"449 182 OFFCURVE",
"478 266 OFFCURVE",
"478 309 QCURVE",
"477 367 OFFCURVE",
"447 420 QCURVE SMOOTH",
"439 434 OFFCURVE",
"413 469 QCURVE",
"403 481 OFFCURVE",
"393 496 QCURVE",
"383 508 LINE",
"398 511 LINE",
"408 512 LINE",
"417 514 LINE",
"429 519 LINE SMOOTH",
"445 526 OFFCURVE",
"447 528 QCURVE",
"449 536 OFFCURVE",
"441 560 OFFCURVE",
"437 563 QCURVE",
"412 576 OFFCURVE",
"381 590 OFFCURVE",
"366 590 QCURVE SMOOTH",
"363 590 LINE",
"272 586 OFFCURVE",
"202 528 QCURVE SMOOTH",
"168 500 OFFCURVE",
"99 424 OFFCURVE",
"79 395 QCURVE"
);
},
{
closed = 1;
nodes = (
"270 454 OFFCURVE",
"308 479 QCURVE",
"332 497 OFFCURVE",
"346 497 QCURVE SMOOTH",
"352 497 OFFCURVE",
"356 495 QCURVE",
"373 485 OFFCURVE",
"375 441 QCURVE",
"376 437 OFFCURVE",
"376 428 QCURVE",
"377 422 LINE",
"377 421 LINE",
"368 203 OFFCURVE",
"247 82 QCURVE SMOOTH",
"235 70 OFFCURVE",
"200 53 OFFCURVE",
"184 53 QCURVE SMOOTH",
"177 53 OFFCURVE",
"171 55 QCURVE SMOOTH",
"156 60 OFFCURVE",
"132 106 OFFCURVE",
"129 127 QCURVE SMOOTH",
"125 153 OFFCURVE",
"126 176 QCURVE SMOOTH",
"130 314 OFFCURVE",
"225 409 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
17 1 3 0 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 0 0 3 2 0 3 105 0 2 2 1 97 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 0 0 3 2 0 3 105 0 2 1 1 2 89 0 2 2 1 97 0 1 2 1 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
63 62 50 49 32 30 51 4 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 514;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2019-11-20 00:17:39 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"260 502 OFFCURVE",
"262 492 OFFCURVE",
"262 488 QCURVE SMOOTH",
"262 436 OFFCURVE",
"260 333 QCURVE SMOOTH",
"256 182 OFFCURVE",
"258 106 QCURVE SMOOTH",
"259 58 OFFCURVE",
"262 34 QCURVE SMOOTH",
"265 8 OFFCURVE",
"301 -4 OFFCURVE",
"332 -3 QCURVE",
"335 -2 OFFCURVE",
"345 29 OFFCURVE",
"345 40 QCURVE SMOOTH",
"345 87 LINE",
"345 181 LINE SMOOTH",
"345 235 OFFCURVE",
"346 262 QCURVE SMOOTH",
"352 420 LINE SMOOTH",
"353 446 OFFCURVE",
"358 524 OFFCURVE",
"358 578 QCURVE SMOOTH",
"358 600 LINE",
"358 617 OFFCURVE",
"348 637 OFFCURVE",
"332 642 QCURVE",
"327 644 OFFCURVE",
"289 656 OFFCURVE",
"272 656 QCURVE SMOOTH",
"245 656 OFFCURVE",
"226 632 QCURVE SMOOTH",
"128 502 LINE",
"56 408 LINE SMOOTH",
"36 387 OFFCURVE",
"40 371 QCURVE SMOOTH",
"52 316 OFFCURVE",
"103 329 OFFCURVE",
"119 350 QCURVE",
"133 372 OFFCURVE",
"147 393 QCURVE SMOOTH",
"174 433 OFFCURVE",
"246 512 QCURVE",
"250 510 OFFCURVE",
"257 508 OFFCURVE",
"260 507 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
45 1 0 1 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 0 1 2 1 0 2 128 0 1 1 36 77 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
0 1 0 1 133 0 0 2 0 133 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 14 values pushed */
0 1 0 1 133 0 0 2 0 133 0 2 2 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
37 35 40 39 3 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 431;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2019-04-02 08:42:32 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"194 -31 OFFCURVE",
"275 -31 QCURVE SMOOTH",
"331 -31 OFFCURVE",
"385 -13 QCURVE SMOOTH",
"435 4 OFFCURVE",
"555 62 OFFCURVE",
"555 89 QCURVE SMOOTH",
"555 91 OFFCURVE",
"553 98 QCURVE",
"546 112 OFFCURVE",
"525 112 QCURVE SMOOTH",
"500 112 OFFCURVE",
"436 85 OFFCURVE",
"429 82 QCURVE",
"368 61 OFFCURVE",
"263 43 OFFCURVE",
"197 39 QCURVE",
"285 202 OFFCURVE",
"368 369 QCURVE SMOOTH",
"372 377 OFFCURVE",
"395 421 QCURVE SMOOTH",
"407 444 OFFCURVE",
"407 466 QCURVE SMOOTH",
"407 495 OFFCURVE",
"374 546 OFFCURVE",
"314 578 OFFCURVE",
"276 578 QCURVE SMOOTH",
"245 578 OFFCURVE",
"208 565 QCURVE SMOOTH",
"182 556 OFFCURVE",
"101 504 OFFCURVE",
"41 437 OFFCURVE",
"41 406 QCURVE SMOOTH",
"41 377 OFFCURVE",
"81 352 QCURVE SMOOTH",
"89 347 OFFCURVE",
"96 347 QCURVE SMOOTH",
"113 347 OFFCURVE",
"152 381 OFFCURVE",
"179 411 QCURVE SMOOTH",
"194 428 LINE",
"210 450 LINE SMOOTH",
"234 484 OFFCURVE",
"244 493 QCURVE",
"255 501 OFFCURVE",
"266 501 QCURVE SMOOTH",
"280 501 OFFCURVE",
"296 469 OFFCURVE",
"294 450 QCURVE",
"290 433 OFFCURVE",
"259 368 OFFCURVE",
"205 265 OFFCURVE",
"198 253 QCURVE SMOOTH",
"144 161 OFFCURVE",
"92 42 OFFCURVE",
"92 22 QCURVE SMOOTH",
"92 16 OFFCURVE",
"95 14 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
1 1 5 3 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 3 5 97 0 5 5 31 5 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 1 0 4 0 1 4 128 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 5 5 3 89 0 3 3 5 97 0 5 3 5 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
39 36 25 41 23 42 6 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 555;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"345 72 OFFCURVE",
"381 199 OFFCURVE",
"381 274 QCURVE SMOOTH",
"381 326 OFFCURVE",
"351 385 OFFCURVE",
"283 415 OFFCURVE",
"222 423 QCURVE",
"227 431 OFFCURVE",
"248 458 QCURVE",
"262 478 OFFCURVE",
"263 479 QCURVE",
"280 508 OFFCURVE",
"280 531 QCURVE SMOOTH",
"280 563 OFFCURVE",
"247 591 QCURVE",
"217 614 OFFCURVE",
"175 614 QCURVE SMOOTH",
"124 614 OFFCURVE",
"78 579 QCURVE",
"70 576 OFFCURVE",
"46 562 OFFCURVE",
"34 551 OFFCURVE",
"34 544 QCURVE SMOOTH",
"34 539 OFFCURVE",
"36 531 QCURVE",
"47 523 OFFCURVE",
"65 523 QCURVE SMOOTH",
"82 523 OFFCURVE",
"113 532 QCURVE",
"139 538 OFFCURVE",
"146 538 QCURVE SMOOTH",
"167 538 OFFCURVE",
"167 518 QCURVE SMOOTH",
"167 512 OFFCURVE",
"165 501 QCURVE",
"160 479 OFFCURVE",
"154 471 QCURVE",
"108 399 LINE",
"61 326 LINE SMOOTH",
"50 309 OFFCURVE",
"50 300 QCURVE SMOOTH",
"50 296 OFFCURVE",
"51 296 QCURVE",
"66 285 OFFCURVE",
"84 275 OFFCURVE",
"95 275 QCURVE SMOOTH",
"107 275 OFFCURVE",
"119 283 QCURVE",
"207 347 LINE",
"227 360 OFFCURVE",
"237 360 QCURVE SMOOTH",
"261 360 OFFCURVE",
"267 314 QCURVE",
"269 289 OFFCURVE",
"269 276 QCURVE SMOOTH",
"269 189 OFFCURVE",
"228 91 QCURVE SMOOTH",
"210 46 OFFCURVE",
"154 -10 OFFCURVE",
"110 -15 QCURVE",
"105 -16 OFFCURVE",
"85 -25 OFFCURVE",
"77 -28 QCURVE",
"144 -61 OFFCURVE",
"185 -61 QCURVE SMOOTH",
"217 -61 OFFCURVE",
"273 -24 OFFCURVE",
"304 18 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
60 1 1 4 4 1 0 2 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 2 0 3 2 0 126 0 0 0 132 0 3 3 5 97 0 5 5 32 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 42 values pushed */
0 4 3 1 3 4 1 128 0 1 2 3 1 2 126 0 2 0 3 2 0 126 0 0 0 132 0 5 3 3 5 89 0 5 5 3 97 0 3 5 3 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
40 35 29 35 44 33 6 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 408;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2019-04-03 05:42:31 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"415 402 OFFCURVE",
"420 421 QCURVE",
"431 476 OFFCURVE",
"434 504 QCURVE",
"437 532 OFFCURVE",
"437 559 QCURVE",
"437 590 OFFCURVE",
"433 613 QCURVE",
"430 632 OFFCURVE",
"374 647 OFFCURVE",
"340 647 QCURVE",
"310 647 OFFCURVE",
"300 644 QCURVE",
"293 641 OFFCURVE",
"260 632 OFFCURVE",
"253 623 QCURVE",
"129 479 OFFCURVE",
"51 306 QCURVE",
"32 267 OFFCURVE",
"35 240 QCURVE",
"36 230 OFFCURVE",
"36 226 QCURVE SMOOTH",
"41 201 OFFCURVE",
"97 170 OFFCURVE",
"132 170 QCURVE",
"153 170 OFFCURVE",
"166 174 QCURVE",
"218 191 OFFCURVE",
"254 198 QCURVE SMOOTH",
"287 207 LINE SMOOTH",
"287 199 OFFCURVE",
"288 180 OFFCURVE",
"287 168 QCURVE",
"285 132 LINE",
"284 106 OFFCURVE",
"281 54 QCURVE SMOOTH",
"282 -19 OFFCURVE",
"284 -96 QCURVE",
"285 -133 OFFCURVE",
"314 -126 QCURVE SMOOTH",
"325 -123 OFFCURVE",
"343 -109 OFFCURVE",
"346 -102 QCURVE SMOOTH",
"358 -76 OFFCURVE",
"361 -31 QCURVE",
"377 183 LINE SMOOTH",
"377 191 OFFCURVE",
"379 235 OFFCURVE",
"401 262 OFFCURVE",
"449 274 QCURVE",
"462 277 OFFCURVE",
"493 294 QCURVE",
"515 305 OFFCURVE",
"517 308 QCURVE SMOOTH",
"500 346 OFFCURVE",
"467 346 QCURVE",
"457 346 OFFCURVE",
"431 339 OFFCURVE",
"426 338 QCURVE SMOOTH",
"415 333 OFFCURVE",
"401 331 QCURVE SMOOTH",
"401 340 OFFCURVE",
"406 361 OFFCURVE",
"407 365 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 520 LINE",
"324 486 OFFCURVE",
"323 467 QCURVE SMOOTH",
"315 395 OFFCURVE",
"302 312 QCURVE",
"301 305 OFFCURVE",
"292 287 OFFCURVE",
"286 286 QCURVE SMOOTH",
"219 266 OFFCURVE",
"154 245 QCURVE",
"151 244 OFFCURVE",
"138 246 OFFCURVE",
"134 247 QCURVE SMOOTH",
"185 410 OFFCURVE",
"330 546 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
78 75 2 0 3 65 9 2 1 0 2 76 30 18 2 2 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 1 0 2 0 1 2 128 0 2 2 132 0 3 3 32 77 0 0 0 33 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 25 values pushed */
0 0 3 1 3 0 1 128 0 1 2 3 1 2 126 0 2 2 132 0 3 3 32 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 19 values pushed */
0 3 0 3 133 0 0 1 0 133 0 1 2 1 133 0 2 2 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
53 51 39 37 34 32 38 4 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 559;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"657 579 OFFCURVE",
"665 602 OFFCURVE",
"665 614 QCURVE SMOOTH",
"665 625 OFFCURVE",
"659 641 OFFCURVE",
"654 642 QCURVE",
"612 646 LINE SMOOTH",
"595 648 OFFCURVE",
"590 648 QCURVE SMOOTH",
"581 648 OFFCURVE",
"550 645 QCURVE SMOOTH",
"528 643 OFFCURVE",
"449 631 QCURVE SMOOTH",
"361 616 OFFCURVE",
"315 614 QCURVE SMOOTH",
"280 613 OFFCURVE",
"233 587 OFFCURVE",
"213 557 QCURVE SMOOTH",
"161 479 OFFCURVE",
"115 434 QCURVE SMOOTH",
"101 420 OFFCURVE",
"88 403 OFFCURVE",
"89 397 QCURVE",
"90 389 OFFCURVE",
"122 372 QCURVE SMOOTH",
"150 356 OFFCURVE",
"167 354 QCURVE SMOOTH",
"217 347 OFFCURVE",
"275 286 OFFCURVE",
"295 238 QCURVE",
"307 215 OFFCURVE",
"307 187 QCURVE SMOOTH",
"307 149 OFFCURVE",
"280 117 QCURVE",
"262 91 OFFCURVE",
"214 61 OFFCURVE",
"180 61 QCURVE SMOOTH",
"163 61 OFFCURVE",
"154 63 QCURVE SMOOTH",
"136 67 OFFCURVE",
"116 67 QCURVE SMOOTH",
"93 67 OFFCURVE",
"68 63 QCURVE",
"57 63 OFFCURVE",
"36 61 QCURVE",
"35 54 LINE",
"115 -13 OFFCURVE",
"220 -13 QCURVE SMOOTH",
"241 -13 OFFCURVE",
"264 -10 QCURVE SMOOTH",
"308 -5 OFFCURVE",
"367 57 OFFCURVE",
"392 108 QCURVE SMOOTH",
"417 160 OFFCURVE",
"417 204 QCURVE SMOOTH",
"417 273 OFFCURVE",
"353 324 QCURVE SMOOTH",
"340 335 OFFCURVE",
"328 342 QCURVE",
"307 356 OFFCURVE",
"277 383 QCURVE",
"254 401 OFFCURVE",
"252 402 QCURVE",
"244 407 OFFCURVE",
"290 468 OFFCURVE",
"352 529 OFFCURVE",
"363 531 QCURVE SMOOTH",
"437 546 OFFCURVE",
"556 561 QCURVE SMOOTH",
"613 568 LINE",
"634 572 OFFCURVE",
"649 576 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
48 1 1 4 25 1 0 1 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 5 5 32 77 0 4 4 32 77 3 2 2 1 1 0 97 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
41 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
0 4 5 1 5 4 1 128 0 5 5 32 77 3 2 2 1 1 0 97 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 23 values pushed */
0 5 4 5 133 0 4 1 4 133 3 2 2 1 1 0 97 0 0 0 31 0 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
62 61 57 55 35 33 31 29 28 27 24 22 6 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 649;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"293 -6 OFFCURVE",
"311 -6 QCURVE SMOOTH",
"376 -7 OFFCURVE",
"421 29 QCURVE SMOOTH",
"441 45 OFFCURVE",
"470 102 OFFCURVE",
"470 128 QCURVE SMOOTH",
"470 157 OFFCURVE",
"429 209 OFFCURVE",
"366 240 OFFCURVE",
"334 240 QCURVE SMOOTH",
"300 240 OFFCURVE",
"276 222 QCURVE SMOOTH",
"256 207 OFFCURVE",
"226 180 OFFCURVE",
"208 156 QCURVE SMOOTH",
"202 148 OFFCURVE",
"189 127 OFFCURVE",
"185 127 QCURVE SMOOTH",
"179 127 OFFCURVE",
"168 151 QCURVE SMOOTH",
"145 200 OFFCURVE",
"144 261 QCURVE SMOOTH",
"143 306 OFFCURVE",
"174 390 OFFCURVE",
"200 438 QCURVE",
"204 444 OFFCURVE",
"209 454 OFFCURVE",
"211 458 QCURVE SMOOTH",
"230 493 OFFCURVE",
"260 534 OFFCURVE",
"308 563 OFFCURVE",
"342 563 QCURVE SMOOTH",
"347 563 OFFCURVE",
"362 579 OFFCURVE",
"361 583 QCURVE SMOOTH",
"357 598 OFFCURVE",
"347 616 OFFCURVE",
"340 622 QCURVE",
"320 637 OFFCURVE",
"282 637 QCURVE SMOOTH",
"257 637 OFFCURVE",
"210 622 OFFCURVE",
"195 606 QCURVE SMOOTH",
"45 446 OFFCURVE",
"34 255 QCURVE",
"33 248 OFFCURVE",
"33 237 QCURVE SMOOTH",
"33 181 OFFCURVE",
"113 71 OFFCURVE",
"232 1 OFFCURVE",
"284 -5 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"327 169 OFFCURVE",
"335 169 QCURVE SMOOTH",
"354 169 OFFCURVE",
"369 145 QCURVE SMOOTH",
"375 135 OFFCURVE",
"375 126 QCURVE SMOOTH",
"375 105 OFFCURVE",
"323 73 OFFCURVE",
"293 73 QCURVE SMOOTH",
"269 73 OFFCURVE",
"256 82 QCURVE",
"256 104 OFFCURVE",
"273 134 OFFCURVE",
"295 151 OFFCURVE",
"318 164 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
15 1 1 0 55 1 5 2 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 2 6 5 6 2 5 128 0 3 0 6 2 3 6 105 0 1 1 0 97 0 0 0 32 77 0 5 5 4 97 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 34 values pushed */
0 2 6 5 6 2 5 128 0 3 0 6 2 3 6 105 0 5 0 4 5 4 101 0 1 1 0 97 0 0 0 32 1 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
21 38 39 38 44 38 41 7 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 520;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2019-04-02 08:44:43 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"288 547 OFFCURVE",
"337 550 QCURVE SMOOTH",
"353 551 OFFCURVE",
"374 536 OFFCURVE",
"374 520 QCURVE SMOOTH",
"374 512 OFFCURVE",
"373 508 QCURVE SMOOTH",
"368 486 OFFCURVE",
"341 427 OFFCURVE",
"338 421 QCURVE SMOOTH",
"318 380 OFFCURVE",
"311 358 QCURVE SMOOTH",
"296 311 OFFCURVE",
"257 214 OFFCURVE",
"253 203 QCURVE SMOOTH",
"217 102 OFFCURVE",
"195 47 QCURVE SMOOTH",
"189 32 OFFCURVE",
"190 17 QCURVE SMOOTH",
"192 -7 OFFCURVE",
"200 -20 QCURVE",
"208 -32 OFFCURVE",
"231 -32 QCURVE SMOOTH",
"240 -32 OFFCURVE",
"249 -29 QCURVE SMOOTH",
"271 -22 OFFCURVE",
"290 19 QCURVE SMOOTH",
"305 54 OFFCURVE",
"325 115 QCURVE SMOOTH",
"334 142 LINE SMOOTH",
"343 169 OFFCURVE",
"353 204 QCURVE SMOOTH",
"375 282 OFFCURVE",
"394 328 QCURVE SMOOTH",
"422 395 OFFCURVE",
"455 485 OFFCURVE",
"477 528 QCURVE SMOOTH",
"491 556 OFFCURVE",
"491 575 QCURVE SMOOTH",
"491 609 OFFCURVE",
"444 623 QCURVE SMOOTH",
"417 631 OFFCURVE",
"378 632 QCURVE SMOOTH",
"214 636 OFFCURVE",
"134 623 QCURVE SMOOTH",
"110 619 OFFCURVE",
"52 614 OFFCURVE",
"41 613 QCURVE",
"24 610 OFFCURVE",
"-10 606 QCURVE",
"14 562 OFFCURVE",
"56 532 OFFCURVE",
"89 532 QCURVE SMOOTH",
"99 532 OFFCURVE",
"125 534 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
4 1 3 1 49 35 2 2 0 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
0 0 3 2 3 0 2 128 0 3 3 1 97 0 1 1 32 77 0 2 2 31 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 23 values pushed */
0 0 3 2 3 0 2 128 0 2 2 132 0 3 3 1 97 0 1 1 32 3 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
53 51 32 30 40 32 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 511;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"97 390 LINE SMOOTH",
"62 324 OFFCURVE",
"34 247 OFFCURVE",
"32 198 QCURVE",
"30 184 OFFCURVE",
"30 177 QCURVE SMOOTH",
"30 132 OFFCURVE",
"87 51 OFFCURVE",
"180 2 OFFCURVE",
"231 2 QCURVE SMOOTH",
"290 2 OFFCURVE",
"380 77 OFFCURVE",
"401 139 QCURVE",
"404 150 OFFCURVE",
"423 210 OFFCURVE",
"438 278 OFFCURVE",
"438 317 QCURVE SMOOTH",
"438 352 OFFCURVE",
"411 441 OFFCURVE",
"391 461 QCURVE",
"379 476 OFFCURVE",
"352 503 OFFCURVE",
"352 506 QCURVE SMOOTH",
"352 510 OFFCURVE",
"376 528 OFFCURVE",
"390 540 QCURVE SMOOTH",
"405 553 OFFCURVE",
"429 624 OFFCURVE",
"429 649 QCURVE SMOOTH",
"429 662 OFFCURVE",
"425 666 QCURVE SMOOTH",
"404 687 OFFCURVE",
"353 733 OFFCURVE",
"324 742 QCURVE SMOOTH",
"283 755 OFFCURVE",
"253 753 QCURVE SMOOTH",
"204 750 OFFCURVE",
"123 704 OFFCURVE",
"83 657 QCURVE",
"65 624 OFFCURVE",
"47 583 OFFCURVE",
"47 560 QCURVE SMOOTH",
"47 530 OFFCURVE",
"64 502 QCURVE",
"74 482 OFFCURVE",
"109 459 OFFCURVE",
"137 450 QCURVE",
"133 444 OFFCURVE",
"114 424 OFFCURVE",
"113 420 QCURVE"
);
},
{
closed = 1;
nodes = (
"316 686 OFFCURVE",
"334 670 OFFCURVE",
"334 658 QCURVE SMOOTH",
"334 648 OFFCURVE",
"330 640 QCURVE SMOOTH",
"285 550 OFFCURVE",
"203 516 QCURVE SMOOTH",
"194 512 OFFCURVE",
"185 512 QCURVE SMOOTH",
"173 512 OFFCURVE",
"161 529 OFFCURVE",
"161 544 QCURVE SMOOTH",
"161 583 OFFCURVE",
"198 648 OFFCURVE",
"262 686 OFFCURVE",
"301 686 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"327 268 OFFCURVE",
"293 183 OFFCURVE",
"265 124 QCURVE SMOOTH",
"255 103 OFFCURVE",
"226 73 OFFCURVE",
"208 73 QCURVE SMOOTH",
"199 73 OFFCURVE",
"189 78 QCURVE",
"173 88 OFFCURVE",
"149 134 OFFCURVE",
"146 158 QCURVE SMOOTH",
"141 198 OFFCURVE",
"141 231 QCURVE SMOOTH",
"141 322 OFFCURVE",
"177 377 QCURVE SMOOTH",
"196 406 OFFCURVE",
"247 446 OFFCURVE",
"295 477 QCURVE",
"298 476 OFFCURVE",
"321 414 OFFCURVE",
"338 338 OFFCURVE",
"336 312 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
20 1 2 3 45 43 2 3 4 2 2 76 0 2 3 4 3 2 4 128 0 0 5 1 3 2 0 3 105 0 4 4 1 97 0 1 1 40 1 78 50 50 82 80 50 65 50 64 57 55 40 38 44 6 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 489;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"389 618 OFFCURVE",
"398 618 QCURVE SMOOTH",
"420 618 OFFCURVE",
"437 630 QCURVE",
"440 633 OFFCURVE",
"440 643 QCURVE SMOOTH",
"440 651 OFFCURVE",
"436 669 OFFCURVE",
"433 674 QCURVE",
"410 705 OFFCURVE",
"341 735 OFFCURVE",
"300 735 QCURVE SMOOTH",
"222 735 OFFCURVE",
"103 651 OFFCURVE",
"54 577 QCURVE SMOOTH",
"27 536 OFFCURVE",
"27 497 QCURVE SMOOTH",
"27 476 OFFCURVE",
"32 462 QCURVE",
"45 421 OFFCURVE",
"134 357 OFFCURVE",
"176 357 QCURVE SMOOTH",
"197 357 OFFCURVE",
"248 375 OFFCURVE",
"258 378 QCURVE SMOOTH",
"267 381 OFFCURVE",
"274 381 QCURVE SMOOTH",
"282 381 OFFCURVE",
"287 368 OFFCURVE",
"286 352 QCURVE SMOOTH",
"278 230 OFFCURVE",
"278 166 QCURVE SMOOTH",
"278 132 LINE SMOOTH",
"279 101 OFFCURVE",
"293 43 OFFCURVE",
"306 -7 QCURVE",
"312 -27 OFFCURVE",
"345 -48 OFFCURVE",
"368 -48 QCURVE SMOOTH",
"382 -48 OFFCURVE",
"394 -39 OFFCURVE",
"394 -28 QCURVE SMOOTH",
"394 -25 OFFCURVE",
"392 -14 QCURVE",
"372 77 OFFCURVE",
"372 171 QCURVE SMOOTH",
"372 314 OFFCURVE",
"421 485 QCURVE SMOOTH",
"427 504 OFFCURVE",
"427 511 QCURVE SMOOTH",
"427 527 OFFCURVE",
"410 537 QCURVE",
"387 552 OFFCURVE",
"361 552 QCURVE SMOOTH",
"336 552 OFFCURVE",
"326 538 QCURVE",
"256 457 OFFCURVE",
"180 433 QCURVE SMOOTH",
"166 429 OFFCURVE",
"153 429 QCURVE SMOOTH",
"136 429 OFFCURVE",
"128 435 QCURVE",
"122 441 OFFCURVE",
"116 464 OFFCURVE",
"116 475 QCURVE SMOOTH",
"116 484 OFFCURVE",
"117 488 QCURVE",
"126 532 OFFCURVE",
"195 612 OFFCURVE",
"290 659 OFFCURVE",
"334 656 QCURVE",
"341 650 OFFCURVE",
"372 624 OFFCURVE",
"386 620 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 70 values pushed */
23 8 2 1 2 1 76 0 7 0 2 0 7 2 128 0 2 1 0 2 1 126 0 4 1 5 1 4 5 128 0 3 5 3 134 0 6 0 0 7 6 0 105 0 1 4 5 1 89 0 1 1 5 97 0 5 1 5 81 40 40 35 42 45 36 41 18 8 8 30 
CALL[ ]\011/* CallFunction */";
};
width = 490;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
lastChange = "2019-03-19 07:58:05 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"98 372 OFFCURVE",
"98 361 QCURVE SMOOTH",
"98 332 OFFCURVE",
"142 263 OFFCURVE",
"167 251 QCURVE SMOOTH",
"177 246 OFFCURVE",
"190 247 QCURVE SMOOTH",
"208 248 OFFCURVE",
"230 272 OFFCURVE",
"230 293 QCURVE SMOOTH",
"230 311 OFFCURVE",
"195 361 OFFCURVE",
"146 400 OFFCURVE",
"126 402 QCURVE",
"122 399 OFFCURVE",
"102 384 OFFCURVE",
"100 376 QCURVE"
);
},
{
closed = 1;
nodes = (
"93 185 LINE",
"76 174 LINE",
"76 166 OFFCURVE",
"73 148 OFFCURVE",
"73 140 QCURVE SMOOTH",
"73 131 OFFCURVE",
"77 125 QCURVE",
"102 87 OFFCURVE",
"146 43 QCURVE SMOOTH",
"162 27 OFFCURVE",
"183 27 QCURVE SMOOTH",
"200 27 OFFCURVE",
"216 40 QCURVE",
"228 49 OFFCURVE",
"228 67 QCURVE SMOOTH",
"228 80 OFFCURVE",
"216 105 OFFCURVE",
"203 114 QCURVE",
"177 130 OFFCURVE",
"127 163 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
36 35 2 2 1 1 76 0 0 1 0 133 0 1 2 1 133 0 2 2 34 2 78 47 37 33 3 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 276;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"171 176 OFFCURVE",
"204 169 OFFCURVE",
"218 172 QCURVE SMOOTH",
"234 175 OFFCURVE",
"236 185 QCURVE",
"247 225 OFFCURVE",
"241 265 QCURVE",
"238 278 OFFCURVE",
"213 292 OFFCURVE",
"196 286 QCURVE SMOOTH",
"184 282 OFFCURVE",
"165 280 OFFCURVE",
"158 278 QCURVE",
"135 273 LINE",
"134 258 OFFCURVE",
"138 238 QCURVE SMOOTH",
"145 202 OFFCURVE",
"162 185 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"236 56 OFFCURVE",
"232 77 QCURVE SMOOTH",
"227 102 OFFCURVE",
"203 124 QCURVE SMOOTH",
"190 136 OFFCURVE",
"176 133 QCURVE SMOOTH",
"168 131 OFFCURVE",
"153 112 OFFCURVE",
"151 99 QCURVE SMOOTH",
"145 57 OFFCURVE",
"147 2 QCURVE",
"149 -11 LINE",
"144 -123 OFFCURVE",
"125 -220 QCURVE SMOOTH",
"123 -230 OFFCURVE",
"123 -244 QCURVE SMOOTH",
"123 -267 LINE",
"157 -251 OFFCURVE",
"196 -202 OFFCURVE",
"206 -168 QCURVE SMOOTH",
"222 -118 OFFCURVE",
"225 -68 QCURVE SMOOTH",
"227 -39 OFFCURVE",
"231 21 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
36 24 15 8 2 50 
CALL[ ]\011/* CallFunction */";
};
width = 325;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"409 476 OFFCURVE",
"487 549 QCURVE SMOOTH",
"503 564 OFFCURVE",
"538 590 QCURVE SMOOTH",
"563 609 LINE",
"579 624 OFFCURVE",
"579 647 QCURVE SMOOTH",
"579 660 OFFCURVE",
"567 682 OFFCURVE",
"555 687 QCURVE SMOOTH",
"522 702 OFFCURVE",
"494 702 QCURVE SMOOTH",
"444 702 OFFCURVE",
"398 648 QCURVE SMOOTH",
"386 634 OFFCURVE",
"322 566 QCURVE SMOOTH",
"284 524 LINE",
"77 293 LINE SMOOTH",
"66 280 OFFCURVE",
"66 269 QCURVE SMOOTH",
"66 254 OFFCURVE",
"78 247 QCURVE",
"86 240 OFFCURVE",
"118 217 OFFCURVE",
"152 200 OFFCURVE",
"173 201 QCURVE SMOOTH",
"211 203 OFFCURVE",
"284 188 OFFCURVE",
"341 174 QCURVE",
"428 149 OFFCURVE",
"515 149 QCURVE SMOOTH",
"548 149 OFFCURVE",
"580 153 QCURVE SMOOTH",
"599 155 OFFCURVE",
"621 167 OFFCURVE",
"624 186 QCURVE",
"620 189 OFFCURVE",
"604 201 OFFCURVE",
"597 202 QCURVE",
"535 216 OFFCURVE",
"502 217 QCURVE SMOOTH",
"440 217 OFFCURVE",
"322 248 OFFCURVE",
"231 279 QCURVE",
"247 298 LINE SMOOTH",
"293 355 OFFCURVE",
"317 381 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
2 1 0 3 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
0 2 0 1 0 2 1 128 0 0 0 1 0 1 101 0 3 3 36 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 29 values pushed */
0 3 0 3 133 0 2 0 1 0 2 1 128 0 0 2 1 0 89 0 0 0 1 97 0 1 0 1 81 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
44 35 40 36 4 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 674;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
lastChange = "2019-03-19 08:03:36 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"261 362 OFFCURVE",
"160 362 QCURVE SMOOTH",
"120 362 OFFCURVE",
"74 348 OFFCURVE",
"50 328 QCURVE",
"54 323 OFFCURVE",
"70 300 OFFCURVE",
"77 295 QCURVE SMOOTH",
"113 267 OFFCURVE",
"161 267 QCURVE SMOOTH",
"173 267 OFFCURVE",
"179 268 QCURVE",
"295 278 OFFCURVE",
"367 284 QCURVE SMOOTH",
"539 296 LINE",
"536 334 OFFCURVE",
"497 376 OFFCURVE",
"467 374 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"176 122 OFFCURVE",
"257 101 OFFCURVE",
"307 100 QCURVE SMOOTH",
"377 102 OFFCURVE",
"487 110 QCURVE SMOOTH",
"510 112 LINE SMOOTH",
"531 114 OFFCURVE",
"558 125 QCURVE SMOOTH",
"584 135 OFFCURVE",
"584 154 QCURVE SMOOTH",
"584 169 OFFCURVE",
"566 182 QCURVE",
"525 213 OFFCURVE",
"481 213 QCURVE SMOOTH",
"458 213 OFFCURVE",
"426 205 QCURVE",
"419 204 OFFCURVE",
"391 198 OFFCURVE",
"380 197 QCURVE SMOOTH",
"359 196 LINE SMOOTH",
"287 189 OFFCURVE",
"239 187 QCURVE SMOOTH",
"186 186 OFFCURVE",
"143 197 QCURVE SMOOTH",
"139 198 OFFCURVE",
"128 196 OFFCURVE",
"126 196 QCURVE",
"119 186 OFFCURVE",
"119 177 QCURVE SMOOTH",
"119 162 OFFCURVE",
"141 146 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
12 2 2 0 1 1 76 6 1 1 0 0 3 1 0 105 0 2 4 5 2 89 0 3 0 4 5 3 4 105 0 2 2 5 97 0 5 2 5 81 0 0 46 44 42 41 35 33 27 25 0 17 0 14 53 7 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 600;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"356 536 LINE",
"323 565 OFFCURVE",
"295 584 QCURVE",
"272 608 OFFCURVE",
"238 633 QCURVE SMOOTH",
"205 658 OFFCURVE",
"195 666 QCURVE",
"179 684 OFFCURVE",
"161 684 QCURVE SMOOTH",
"149 684 OFFCURVE",
"137 675 QCURVE SMOOTH",
"127 668 OFFCURVE",
"127 658 QCURVE SMOOTH",
"127 646 OFFCURVE",
"142 627 QCURVE SMOOTH",
"198 551 OFFCURVE",
"229 516 QCURVE SMOOTH",
"239 505 OFFCURVE",
"276 476 OFFCURVE",
"295 463 QCURVE",
"340 429 OFFCURVE",
"350 420 QCURVE",
"326 407 OFFCURVE",
"264 385 QCURVE SMOOTH",
"206 366 OFFCURVE",
"179 351 QCURVE SMOOTH",
"118 315 OFFCURVE",
"73 285 QCURVE SMOOTH",
"50 269 OFFCURVE",
"50 250 QCURVE SMOOTH",
"50 240 OFFCURVE",
"58 229 QCURVE SMOOTH",
"68 216 OFFCURVE",
"106 200 OFFCURVE",
"126 200 QCURVE SMOOTH",
"148 200 OFFCURVE",
"161 208 QCURVE",
"180 218 OFFCURVE",
"215 238 OFFCURVE",
"231 247 QCURVE SMOOTH",
"256 261 LINE SMOOTH",
"289 280 OFFCURVE",
"444 341 OFFCURVE",
"448 343 QCURVE",
"503 367 OFFCURVE",
"503 395 QCURVE SMOOTH",
"503 409 OFFCURVE",
"473 445 OFFCURVE",
"413 490 OFFCURVE",
"405 496 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
27 1 0 1 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 134 0 1 1 30 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 9 values pushed */
0 1 0 1 133 0 0 0 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
41 39 45 2 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 553;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"99 754 OFFCURVE",
"99 738 QCURVE SMOOTH",
"99 729 OFFCURVE",
"105 718 QCURVE",
"115 702 OFFCURVE",
"148 685 OFFCURVE",
"167 685 QCURVE SMOOTH",
"199 685 OFFCURVE",
"220 705 QCURVE",
"255 736 OFFCURVE",
"280 745 QCURVE SMOOTH",
"293 750 OFFCURVE",
"308 750 QCURVE SMOOTH",
"325 750 OFFCURVE",
"335 744 QCURVE SMOOTH",
"353 733 OFFCURVE",
"353 708 QCURVE SMOOTH",
"353 695 OFFCURVE",
"348 680 QCURVE",
"331 636 OFFCURVE",
"308 606 QCURVE SMOOTH",
"223 502 LINE",
"178 449 LINE SMOOTH",
"144 407 OFFCURVE",
"74 323 QCURVE",
"64 310 OFFCURVE",
"64 300 QCURVE SMOOTH",
"64 290 OFFCURVE",
"72 283 QCURVE",
"79 276 OFFCURVE",
"98 268 OFFCURVE",
"105 270 QCURVE SMOOTH",
"145 280 OFFCURVE",
"172 298 QCURVE SMOOTH",
"211 323 OFFCURVE",
"277 388 OFFCURVE",
"323 440 QCURVE",
"324 441 OFFCURVE",
"357 477 QCURVE SMOOTH",
"433 559 OFFCURVE",
"464 642 QCURVE SMOOTH",
"471 660 OFFCURVE",
"471 680 QCURVE SMOOTH",
"471 704 OFFCURVE",
"460 723 QCURVE SMOOTH",
"403 827 OFFCURVE",
"280 841 QCURVE",
"180 837 OFFCURVE",
"113 768 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"193 -3 OFFCURVE",
"246 -31 QCURVE",
"280 20 LINE",
"186 85 LINE",
"166 68 OFFCURVE",
"148 47 OFFCURVE",
"148 39 QCURVE SMOOTH",
"148 31 OFFCURVE",
"164 15 OFFCURVE",
"183 3 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
56 55 54 3 2 73 0 1 0 2 0 1 2 128 0 0 1 2 0 89 0 0 0 2 97 0 2 0 2 81 42 40 36 34 16 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 522;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"604 481 OFFCURVE",
"587 499 QCURVE SMOOTH",
"498 595 OFFCURVE",
"386 591 QCURVE",
"363 589 LINE",
"343 588 OFFCURVE",
"318 584 OFFCURVE",
"307 579 QCURVE SMOOTH",
"231 544 OFFCURVE",
"176 503 QCURVE SMOOTH",
"105 450 OFFCURVE",
"66 364 QCURVE SMOOTH",
"50 329 OFFCURVE",
"50 294 QCURVE SMOOTH",
"50 250 OFFCURVE",
"75 195 QCURVE SMOOTH",
"153 25 OFFCURVE",
"335 1 QCURVE",
"348 0 LINE",
"357 0 OFFCURVE",
"363 3 QCURVE",
"371 8 OFFCURVE",
"386 26 OFFCURVE",
"389 29 QCURVE",
"383 31 OFFCURVE",
"366 38 OFFCURVE",
"360 39 QCURVE",
"277 42 OFFCURVE",
"223 93 QCURVE SMOOTH",
"208 108 OFFCURVE",
"181 147 OFFCURVE",
"154 197 OFFCURVE",
"149 205 QCURVE",
"128 243 OFFCURVE",
"128 282 QCURVE SMOOTH",
"128 309 OFFCURVE",
"148 363 OFFCURVE",
"167 394 QCURVE SMOOTH",
"213 468 OFFCURVE",
"303 527 QCURVE SMOOTH",
"347 556 OFFCURVE",
"391 556 QCURVE SMOOTH",
"425 556 OFFCURVE",
"459 538 QCURVE SMOOTH",
"517 508 OFFCURVE",
"577 410 OFFCURVE",
"586 343 QCURVE SMOOTH",
"588 327 OFFCURVE",
"588 320 QCURVE SMOOTH",
"588 254 OFFCURVE",
"529 214 QCURVE",
"517 207 OFFCURVE",
"511 207 QCURVE SMOOTH",
"499 207 OFFCURVE",
"491 222 QCURVE SMOOTH",
"487 229 OFFCURVE",
"481 242 OFFCURVE",
"478 248 QCURVE SMOOTH",
"469 266 OFFCURVE",
"439 286 OFFCURVE",
"423 286 QCURVE SMOOTH",
"392 286 OFFCURVE",
"371 258 QCURVE",
"356 240 OFFCURVE",
"323 223 QCURVE",
"316 220 OFFCURVE",
"311 220 QCURVE SMOOTH",
"294 220 OFFCURVE",
"294 247 QCURVE SMOOTH",
"294 268 OFFCURVE",
"333 344 OFFCURVE",
"349 351 QCURVE SMOOTH",
"358 355 OFFCURVE",
"370 349 QCURVE",
"375 346 OFFCURVE",
"386 333 OFFCURVE",
"388 330 QCURVE",
"398 318 OFFCURVE",
"423 318 QCURVE SMOOTH",
"443 318 OFFCURVE",
"450 327 QCURVE SMOOTH",
"459 338 OFFCURVE",
"459 347 QCURVE SMOOTH",
"459 360 OFFCURVE",
"442 377 QCURVE",
"406 410 OFFCURVE",
"364 410 QCURVE SMOOTH",
"347 410 OFFCURVE",
"328 404 QCURVE SMOOTH",
"295 394 OFFCURVE",
"250 351 OFFCURVE",
"231 319 QCURVE SMOOTH",
"215 291 OFFCURVE",
"215 264 QCURVE SMOOTH",
"215 236 OFFCURVE",
"249 188 OFFCURVE",
"279 175 QCURVE SMOOTH",
"308 162 OFFCURVE",
"334 162 QCURVE SMOOTH",
"364 162 OFFCURVE",
"395 179 QCURVE SMOOTH",
"411 188 OFFCURVE",
"423 188 QCURVE SMOOTH",
"428 188 OFFCURVE",
"430 186 QCURVE",
"465 154 OFFCURVE",
"515 154 QCURVE SMOOTH",
"529 154 OFFCURVE",
"557 158 QCURVE SMOOTH",
"580 161 OFFCURVE",
"631 194 OFFCURVE",
"667 239 OFFCURVE",
"668 259 QCURVE SMOOTH",
"669 280 LINE SMOOTH",
"671 308 OFFCURVE",
"671 322 QCURVE SMOOTH",
"671 388 OFFCURVE",
"641 429 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
68 1 4 3 3 1 5 6 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 53 values pushed */
12 1 11 0 8 3 11 8 105 0 5 7 0 5 89 0 6 0 1 0 6 1 105 0 7 2 1 0 9 7 0 105 0 4 4 3 97 0 3 3 33 77 0 9 9 10 97 0 10 10 40 10 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 54 values pushed */
12 1 11 0 8 3 11 8 105 0 6 0 1 2 6 1 105 0 5 0 2 0 5 2 105 0 7 0 0 9 7 0 105 0 4 4 3 97 0 3 3 33 77 0 9 9 10 97 0 10 10 40 10 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 51 values pushed */
12 1 11 0 8 3 11 8 105 0 6 0 1 2 6 1 105 0 5 0 2 0 5 2 105 0 7 0 0 9 7 0 105 0 9 0 10 9 10 101 0 4 4 3 97 0 3 3 33 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 57 values pushed */
0 11 12 8 12 11 114 0 12 0 8 3 12 8 105 0 6 0 1 2 6 1 105 0 5 0 2 0 5 2 105 0 7 0 0 9 7 0 105 0 9 0 10 9 10 101 0 4 4 3 97 0 3 3 33 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 63 values pushed */
0 11 12 8 12 11 114 0 12 0 8 3 12 8 105 0 3 0 4 6 3 4 105 0 6 0 1 2 6 1 105 0 5 0 2 0 5 2 105 0 7 0 0 9 7 0 105 0 9 10 10 9 89 0 9 9 10 97 0 10 9 10 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 20 values pushed */
114 113 112 111 98 97 90 89 42 22 37 26 38 42 34 19 41 13 8 31 
CALL[ ]\011/* CallFunction */";
};
width = 721;
}
);
note = at;
unicode = 0040;
},
{
glyphname = A;
lastChange = "2019-10-02 10:41:12 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"571 602 OFFCURVE",
"551 643 QCURVE SMOOTH",
"537 671 OFFCURVE",
"486 702 OFFCURVE",
"456 702 QCURVE SMOOTH",
"432 702 OFFCURVE",
"409 691 QCURVE SMOOTH",
"301 645 OFFCURVE",
"238 523 QCURVE SMOOTH",
"216 477 OFFCURVE",
"102 245 QCURVE SMOOTH",
"33 105 LINE SMOOTH",
"27 93 OFFCURVE",
"27 82 QCURVE SMOOTH",
"27 66 OFFCURVE",
"42 49 QCURVE SMOOTH",
"52 37 OFFCURVE",
"81 22 OFFCURVE",
"96 22 QCURVE SMOOTH",
"127 22 OFFCURVE",
"146 56 QCURVE SMOOTH",
"176 107 OFFCURVE",
"192 137 QCURVE SMOOTH",
"209 170 OFFCURVE",
"246 178 QCURVE SMOOTH",
"281 185 OFFCURVE",
"322 197 QCURVE SMOOTH",
"370 211 LINE SMOOTH",
"388 216 OFFCURVE",
"435 232 OFFCURVE",
"466 241 QCURVE SMOOTH",
"475 244 OFFCURVE",
"482 244 QCURVE SMOOTH",
"501 244 OFFCURVE",
"507 217 QCURVE SMOOTH",
"524 152 OFFCURVE",
"532 113 QCURVE SMOOTH",
"534 98 OFFCURVE",
"534 80 QCURVE SMOOTH",
"534 69 OFFCURVE",
"534 63 QCURVE",
"533 59 OFFCURVE",
"533 51 QCURVE SMOOTH",
"533 27 OFFCURVE",
"559 -6 OFFCURVE",
"584 -12 QCURVE",
"593 -14 OFFCURVE",
"595 -14 QCURVE SMOOTH",
"612 -14 OFFCURVE",
"634 5 OFFCURVE",
"635 21 QCURVE SMOOTH",
"637 45 OFFCURVE",
"637 59 QCURVE SMOOTH",
"637 84 OFFCURVE",
"632 100 QCURVE SMOOTH",
"594 214 OFFCURVE",
"594 359 QCURVE",
"592 411 LINE SMOOTH",
"586 493 OFFCURVE",
"580 536 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"274 322 LINE SMOOTH",
"293 367 OFFCURVE",
"300 380 QCURVE SMOOTH",
"343 459 OFFCURVE",
"390 533 QCURVE SMOOTH",
"417 579 OFFCURVE",
"470 585 QCURVE",
"481 529 OFFCURVE",
"488 418 OFFCURVE",
"490 322 QCURVE",
"394 307 OFFCURVE",
"257 283 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
71 64 61 2 4 1 3 18 16 2 2 1 8 1 0 2 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
0 1 3 2 3 1 2 128 0 3 3 36 77 0 2 2 34 77 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 3 1 3 133 0 1 2 1 133 0 2 2 34 77 0 0 0 31 0 78 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
44 45 30 26 4 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 720;
}
);
note = A;
rightKerningGroup = A;
unicode = 0041;
},
{
glyphname = B;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"481 484 OFFCURVE",
"488 500 QCURVE",
"498 520 LINE",
"509 545 OFFCURVE",
"509 570 QCURVE SMOOTH",
"509 600 OFFCURVE",
"480 652 OFFCURVE",
"454 668 QCURVE SMOOTH",
"404 700 OFFCURVE",
"330 700 QCURVE SMOOTH",
"314 700 OFFCURVE",
"284 698 QCURVE SMOOTH",
"219 692 OFFCURVE",
"124 626 OFFCURVE",
"100 568 QCURVE SMOOTH",
"69 491 OFFCURVE",
"58 403 QCURVE SMOOTH",
"50 343 OFFCURVE",
"50 267 QCURVE SMOOTH",
"50 227 OFFCURVE",
"52 167 OFFCURVE",
"53 147 QCURVE SMOOTH",
"54 131 OFFCURVE",
"56 83 OFFCURVE",
"56 51 QCURVE SMOOTH",
"56 9 OFFCURVE",
"92 -24 QCURVE",
"105 -37 OFFCURVE",
"121 -37 QCURVE SMOOTH",
"139 -37 OFFCURVE",
"151 -19 QCURVE",
"154 -15 OFFCURVE",
"159 2 OFFCURVE",
"161 8 QCURVE",
"183 -8 OFFCURVE",
"199 -21 QCURVE SMOOTH",
"240 -55 OFFCURVE",
"288 -55 QCURVE SMOOTH",
"321 -55 OFFCURVE",
"355 -38 QCURVE SMOOTH",
"493 31 OFFCURVE",
"555 146 QCURVE SMOOTH",
"580 193 OFFCURVE",
"580 241 QCURVE SMOOTH",
"580 290 OFFCURVE",
"527 371 OFFCURVE",
"474 391 QCURVE SMOOTH",
"464 395 OFFCURVE",
"439 410 QCURVE",
"466 455 OFFCURVE",
"471 465 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"343 431 OFFCURVE",
"246 379 QCURVE SMOOTH",
"227 368 OFFCURVE",
"191 342 QCURVE SMOOTH",
"168 326 LINE",
"177 305 OFFCURVE",
"203 279 OFFCURVE",
"222 268 QCURVE SMOOTH",
"238 259 OFFCURVE",
"253 259 QCURVE SMOOTH",
"277 259 OFFCURVE",
"301 280 QCURVE SMOOTH",
"348 324 OFFCURVE",
"393 337 QCURVE SMOOTH",
"406 341 OFFCURVE",
"421 341 QCURVE SMOOTH",
"446 341 OFFCURVE",
"475 313 OFFCURVE",
"475 286 QCURVE SMOOTH",
"475 274 OFFCURVE",
"472 259 QCURVE SMOOTH",
"464 221 OFFCURVE",
"433 173 QCURVE SMOOTH",
"392 114 OFFCURVE",
"307 40 OFFCURVE",
"247 28 QCURVE",
"242 34 OFFCURVE",
"224 57 OFFCURVE",
"215 62 QCURVE SMOOTH",
"205 68 OFFCURVE",
"186 70 QCURVE",
"172 72 OFFCURVE",
"166 74 QCURVE",
"162 107 LINE SMOOTH",
"152 191 OFFCURVE",
"151 218 QCURVE SMOOTH",
"149 252 OFFCURVE",
"147 267 QCURVE",
"143 317 OFFCURVE",
"143 343 QCURVE SMOOTH",
"143 391 OFFCURVE",
"155 430 QCURVE SMOOTH",
"171 480 OFFCURVE",
"204 548 OFFCURVE",
"261 605 OFFCURVE",
"304 619 QCURVE SMOOTH",
"324 626 OFFCURVE",
"347 626 QCURVE SMOOTH",
"374 626 OFFCURVE",
"404 613 QCURVE",
"401 591 LINE SMOOTH",
"397 561 OFFCURVE",
"392 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
53 1 2 4 3 98 1 5 4 77 16 2 1 5 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 4 3 5 3 4 5 128 0 5 1 3 5 1 126 0 0 1 0 134 0 3 3 2 97 0 2 2 36 77 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
0 4 3 5 3 4 5 128 0 5 1 3 5 1 126 0 0 1 0 134 0 2 0 3 4 2 3 105 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 42 values pushed */
0 4 3 5 3 4 5 128 0 5 1 3 5 1 126 0 1 0 3 1 0 126 0 0 0 132 0 2 3 3 2 89 0 2 2 3 97 0 3 2 3 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 13 values pushed */
94 92 88 86 56 54 41 38 39 43 6 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 630;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2019-04-02 09:00:40 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"80 287 LINE SMOOTH",
"81 215 OFFCURVE",
"151 82 OFFCURVE",
"276 0 OFFCURVE",
"357 0 QCURVE SMOOTH",
"401 0 OFFCURVE",
"445 12 QCURVE SMOOTH",
"545 40 OFFCURVE",
"637 121 QCURVE SMOOTH",
"654 135 OFFCURVE",
"688 175 OFFCURVE",
"724 226 OFFCURVE",
"728 233 QCURVE SMOOTH",
"739 247 OFFCURVE",
"739 263 QCURVE SMOOTH",
"739 286 OFFCURVE",
"718 301 QCURVE SMOOTH",
"699 314 OFFCURVE",
"686 314 QCURVE SMOOTH",
"678 314 OFFCURVE",
"659 303 OFFCURVE",
"646 290 QCURVE SMOOTH",
"626 269 LINE SMOOTH",
"588 231 OFFCURVE",
"573 219 QCURVE SMOOTH",
"509 168 OFFCURVE",
"403 107 OFFCURVE",
"340 99 QCURVE SMOOTH",
"322 96 OFFCURVE",
"307 96 QCURVE SMOOTH",
"264 96 OFFCURVE",
"213 139 OFFCURVE",
"203 185 QCURVE SMOOTH",
"194 226 OFFCURVE",
"194 270 QCURVE SMOOTH",
"194 393 OFFCURVE",
"279 482 QCURVE SMOOTH",
"329 535 OFFCURVE",
"380 535 QCURVE SMOOTH",
"407 535 OFFCURVE",
"436 519 QCURVE",
"442 515 OFFCURVE",
"445 515 QCURVE",
"451 514 OFFCURVE",
"462 514 QCURVE SMOOTH",
"476 514 OFFCURVE",
"493 529 OFFCURVE",
"493 544 QCURVE SMOOTH",
"493 548 OFFCURVE",
"491 560 QCURVE",
"480 600 OFFCURVE",
"398 663 OFFCURVE",
"355 663 QCURVE SMOOTH",
"313 663 OFFCURVE",
"209 610 OFFCURVE",
"125 528 OFFCURVE",
"110 487 QCURVE SMOOTH",
"95 443 OFFCURVE",
"79 369 OFFCURVE",
"79 330 QCURVE SMOOTH",
"79 314 OFFCURVE",
"80 307 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
61 1 3 4 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 2 2 0 97 0 0 0 36 77 0 3 3 5 97 0 5 5 40 5 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3 3 5 97 0 5 5 40 5 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 1 2 4 2 1 4 128 0 4 3 2 4 3 126 0 0 0 2 1 0 2 105 0 3 5 5 3 89 0 3 3 5 97 0 5 3 5 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
44 41 39 36 38 39 6 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 759;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
lastChange = "2019-11-20 01:38:06 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"152 615 LINE",
"145 531 OFFCURVE",
"115 372 OFFCURVE",
"85 242 QCURVE SMOOTH",
"80 220 LINE SMOOTH",
"70 175 OFFCURVE",
"58 83 QCURVE SMOOTH",
"51 31 LINE",
"50 22 LINE",
"50 8 OFFCURVE",
"66 -13 OFFCURVE",
"81 -23 QCURVE",
"122 -48 OFFCURVE",
"166 -48 QCURVE SMOOTH",
"203 -48 OFFCURVE",
"237 -31 QCURVE SMOOTH",
"329 12 OFFCURVE",
"405 79 QCURVE SMOOTH",
"530 187 OFFCURVE",
"648 374 QCURVE SMOOTH",
"679 424 OFFCURVE",
"679 471 QCURVE SMOOTH",
"679 526 OFFCURVE",
"638 579 QCURVE SMOOTH",
"610 613 OFFCURVE",
"569 638 QCURVE SMOOTH",
"510 676 OFFCURVE",
"374 718 OFFCURVE",
"285 734 QCURVE SMOOTH",
"254 740 OFFCURVE",
"224 740 QCURVE SMOOTH",
"193 740 OFFCURVE",
"166 733 QCURVE SMOOTH",
"140 727 OFFCURVE",
"108 705 OFFCURVE",
"104 678 QCURVE",
"113 671 OFFCURVE",
"131 655 QCURVE SMOOTH",
"157 632 OFFCURVE",
"156 633 QCURVE"
);
},
{
closed = 1;
nodes = (
"403 628 OFFCURVE",
"503 583 QCURVE SMOOTH",
"530 570 OFFCURVE",
"561 520 OFFCURVE",
"561 489 QCURVE SMOOTH",
"561 471 OFFCURVE",
"557 458 QCURVE SMOOTH",
"542 404 OFFCURVE",
"483 306 OFFCURVE",
"440 251 QCURVE SMOOTH",
"334 120 OFFCURVE",
"184 47 QCURVE",
"171 42 LINE",
"170 42 OFFCURVE",
"161 46 QCURVE",
"161 52 OFFCURVE",
"162 79 OFFCURVE",
"165 90 QCURVE",
"183 174 OFFCURVE",
"207 272 QCURVE SMOOTH",
"243 416 LINE SMOOTH",
"265 501 OFFCURVE",
"278 559 QCURVE SMOOTH",
"280 569 OFFCURVE",
"280 573 QCURVE SMOOTH",
"280 590 OFFCURVE",
"258 620 OFFCURVE",
"234 640 QCURVE",
"256 643 LINE SMOOTH",
"276 646 OFFCURVE",
"288 645 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
45 42 39 30 3 5 1 0 1 76 0 0 1 0 133 0 1 1 118 47 39 2 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 719;
}
);
leftKerningGroup = D;
note = D;
rightKerningGroup = D;
unicode = 0044;
},
{
glyphname = E;
lastChange = "2019-10-02 10:39:33 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"264 376 LINE",
"289 455 OFFCURVE",
"315 535 QCURVE SMOOTH",
"325 566 OFFCURVE",
"362 566 QCURVE SMOOTH",
"367 566 OFFCURVE",
"387 561 OFFCURVE",
"391 561 QCURVE",
"446 565 OFFCURVE",
"471 566 QCURVE SMOOTH",
"579 570 OFFCURVE",
"633 579 QCURVE SMOOTH",
"668 585 OFFCURVE",
"736 600 QCURVE",
"742 602 OFFCURVE",
"756 613 OFFCURVE",
"756 617 QCURVE SMOOTH",
"756 625 OFFCURVE",
"749 642 OFFCURVE",
"743 645 QCURVE SMOOTH",
"709 662 OFFCURVE",
"687 664 QCURVE SMOOTH",
"645 666 OFFCURVE",
"560 666 QCURVE SMOOTH",
"476 666 LINE",
"433 666 LINE SMOOTH",
"395 666 OFFCURVE",
"340 682 OFFCURVE",
"316 706 QCURVE SMOOTH",
"312 710 OFFCURVE",
"299 715 OFFCURVE",
"293 715 QCURVE",
"273 717 OFFCURVE",
"263 717 QCURVE SMOOTH",
"248 717 OFFCURVE",
"227 705 OFFCURVE",
"220 688 QCURVE",
"218 681 OFFCURVE",
"192 670 OFFCURVE",
"188 668 QCURVE",
"181 665 OFFCURVE",
"165 661 QCURVE",
"143 654 LINE",
"147 646 OFFCURVE",
"156 619 OFFCURVE",
"163 614 QCURVE",
"182 599 OFFCURVE",
"182 579 QCURVE SMOOTH",
"182 566 OFFCURVE",
"173 546 QCURVE",
"170 540 OFFCURVE",
"165 519 OFFCURVE",
"163 512 QCURVE",
"112 365 LINE",
"-1 358 LINE",
"3 330 OFFCURVE",
"32 302 OFFCURVE",
"59 287 QCURVE",
"92 271 OFFCURVE",
"92 237 QCURVE SMOOTH",
"92 233 OFFCURVE",
"92 194 OFFCURVE",
"97 177 QCURVE SMOOTH",
"133 54 OFFCURVE",
"262 4 QCURVE SMOOTH",
"335 -25 OFFCURVE",
"426 -25 QCURVE SMOOTH",
"468 -25 OFFCURVE",
"501 -21 QCURVE SMOOTH",
"533 -17 OFFCURVE",
"573 0 OFFCURVE",
"584 24 QCURVE",
"569 53 OFFCURVE",
"536 76 OFFCURVE",
"511 76 QCURVE",
"496 75 LINE SMOOTH",
"404 69 OFFCURVE",
"345 67 QCURVE SMOOTH",
"287 65 OFFCURVE",
"220 132 OFFCURVE",
"220 180 QCURVE SMOOTH",
"220 213 OFFCURVE",
"236 248 QCURVE",
"306 258 LINE SMOOTH",
"386 269 OFFCURVE",
"426 275 QCURVE SMOOTH",
"471 282 OFFCURVE",
"511 317 QCURVE",
"524 330 OFFCURVE",
"524 342 QCURVE SMOOTH",
"524 352 OFFCURVE",
"515 366 QCURVE SMOOTH",
"498 392 OFFCURVE",
"469 392 QCURVE SMOOTH",
"455 392 OFFCURVE",
"434 384 QCURVE SMOOTH",
"359 354 OFFCURVE",
"290 354 QCURVE SMOOTH",
"274 354 OFFCURVE",
"266 355 QCURVE",
"265 359 OFFCURVE",
"263 368 OFFCURVE",
"263 372 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
59 1 8 7 94 1 1 8 30 1 4 2 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 42 values pushed */
5 1 0 1 2 1 0 2 128 0 6 6 36 77 9 1 8 8 7 95 0 7 7 30 77 0 1 1 33 77 3 1 2 2 4 98 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
0 6 7 6 133 5 1 0 1 2 1 0 2 128 0 7 9 1 8 1 7 8 105 0 1 1 33 77 3 1 2 2 4 98 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 46 values pushed */
0 6 7 6 133 5 1 0 1 3 1 0 3 128 0 3 2 1 3 2 126 0 7 9 1 8 1 7 8 105 0 1 1 33 77 0 2 2 4 98 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 52 values pushed */
0 6 7 6 133 0 5 1 0 1 5 0 128 0 0 3 1 0 3 126 0 3 2 1 3 2 126 0 7 9 1 8 1 7 8 105 0 1 1 33 77 0 2 2 4 98 0 4 4 31 4 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 17 values pushed */
98 96 93 92 81 75 69 67 27 38 33 46 34 35 10 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 782;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
lastChange = "2019-03-19 07:52:09 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"280 490 LINE",
"305 522 OFFCURVE",
"339 547 QCURVE",
"403 597 OFFCURVE",
"477 637 OFFCURVE",
"507 628 QCURVE SMOOTH",
"529 628 OFFCURVE",
"546 616 QCURVE",
"550 614 OFFCURVE",
"565 610 OFFCURVE",
"570 608 QCURVE",
"579 605 OFFCURVE",
"587 605 QCURVE SMOOTH",
"610 605 OFFCURVE",
"623 626 QCURVE",
"628 636 OFFCURVE",
"628 642 QCURVE SMOOTH",
"628 656 OFFCURVE",
"609 675 QCURVE SMOOTH",
"562 725 OFFCURVE",
"496 725 QCURVE SMOOTH",
"474 725 OFFCURVE",
"457 721 QCURVE",
"372 705 OFFCURVE",
"287 646 QCURVE SMOOTH",
"201 587 OFFCURVE",
"96 445 OFFCURVE",
"83 352 QCURVE SMOOTH",
"75 293 OFFCURVE",
"65 204 OFFCURVE",
"62 175 QCURVE SMOOTH",
"59 141 OFFCURVE",
"51 71 QCURVE",
"50 66 OFFCURVE",
"50 57 QCURVE SMOOTH",
"50 32 OFFCURVE",
"75 -5 OFFCURVE",
"100 -20 QCURVE SMOOTH",
"122 -33 OFFCURVE",
"139 -33 QCURVE SMOOTH",
"170 -33 OFFCURVE",
"176 17 QCURVE SMOOTH",
"178 31 OFFCURVE",
"178 58 QCURVE SMOOTH",
"178 98 LINE SMOOTH",
"178 130 OFFCURVE",
"183 152 OFFCURVE",
"204 161 OFFCURVE",
"236 168 QCURVE SMOOTH",
"241 169 OFFCURVE",
"250 174 OFFCURVE",
"255 175 QCURVE",
"449 228 LINE",
"542 248 LINE",
"561 254 OFFCURVE",
"579 264 OFFCURVE",
"579 276 QCURVE SMOOTH",
"579 294 OFFCURVE",
"550 319 QCURVE SMOOTH",
"543 325 OFFCURVE",
"526 325 QCURVE",
"514 324 OFFCURVE",
"490 324 QCURVE SMOOTH",
"483 324 OFFCURVE",
"439 322 OFFCURVE",
"420 319 QCURVE SMOOTH",
"377 312 OFFCURVE",
"345 305 OFFCURVE",
"324 300 QCURVE SMOOTH",
"267 288 LINE",
"260 287 OFFCURVE",
"214 286 OFFCURVE",
"204 286 QCURVE",
"210 329 OFFCURVE",
"227 391 OFFCURVE",
"256 445 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
58 1 6 4 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 5 6 1 6 5 1 128 2 1 1 0 6 1 0 126 0 0 3 6 0 3 126 0 6 6 4 97 0 4 4 36 77 0 3 3 31 3 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 5 6 1 6 5 1 128 2 1 1 0 6 1 0 126 0 0 3 6 0 3 126 0 4 0 6 5 4 6 105 0 3 3 31 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 43 values pushed */
0 5 6 1 6 5 1 128 2 1 1 0 6 1 0 126 0 0 3 6 0 3 126 0 3 3 132 0 4 6 6 4 89 0 4 4 6 97 0 6 4 6 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
70 68 62 61 55 53 36 34 17 54 34 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 600;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"468 676 OFFCURVE",
"427 676 QCURVE SMOOTH",
"330 676 OFFCURVE",
"156 607 OFFCURVE",
"117 522 QCURVE",
"78 417 OFFCURVE",
"50 318 OFFCURVE",
"50 261 QCURVE SMOOTH",
"50 249 OFFCURVE",
"52 219 QCURVE SMOOTH",
"55 175 OFFCURVE",
"92 106 OFFCURVE",
"127 76 QCURVE SMOOTH",
"198 17 OFFCURVE",
"285 17 QCURVE SMOOTH",
"304 17 OFFCURVE",
"313 18 QCURVE SMOOTH",
"351 21 OFFCURVE",
"419 51 OFFCURVE",
"464 78 QCURVE SMOOTH",
"521 111 OFFCURVE",
"601 183 OFFCURVE",
"624 232 QCURVE",
"635 252 OFFCURVE",
"640 267 QCURVE SMOOTH",
"650 294 OFFCURVE",
"650 319 QCURVE SMOOTH",
"650 387 OFFCURVE",
"560 402 QCURVE SMOOTH",
"495 413 OFFCURVE",
"446 410 QCURVE SMOOTH",
"386 407 OFFCURVE",
"271 393 QCURVE SMOOTH",
"236 389 LINE",
"233 389 OFFCURVE",
"225 381 OFFCURVE",
"222 379 QCURVE",
"235 334 OFFCURVE",
"282 295 OFFCURVE",
"323 295 QCURVE",
"361 297 OFFCURVE",
"380 299 QCURVE",
"409 301 LINE SMOOTH",
"475 305 OFFCURVE",
"509 308 QCURVE",
"511 298 OFFCURVE",
"511 293 QCURVE SMOOTH",
"511 280 OFFCURVE",
"500 263 OFFCURVE",
"489 253 QCURVE",
"463 232 LINE",
"457 228 OFFCURVE",
"397 179 OFFCURVE",
"367 160 QCURVE",
"314 129 OFFCURVE",
"261 120 QCURVE",
"252 118 OFFCURVE",
"236 118 QCURVE SMOOTH",
"173 118 OFFCURVE",
"161 194 QCURVE SMOOTH",
"152 253 OFFCURVE",
"152 291 QCURVE SMOOTH",
"152 365 OFFCURVE",
"179 420 QCURVE",
"188 495 OFFCURVE",
"325 563 OFFCURVE",
"448 575 OFFCURVE",
"535 576 QCURVE",
"556 577 OFFCURVE",
"585 594 OFFCURVE",
"598 613 QCURVE",
"561 663 OFFCURVE",
"506 670 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
1 1 0 6 35 27 2 2 4 25 1 1 2 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 15 values pushed */
1 1 0 6 35 27 2 2 4 25 1 1 3 3 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 32 values pushed */
0 0 0 6 97 0 6 6 30 77 3 1 2 2 4 97 0 4 4 33 77 0 1 1 5 97 0 5 5 34 5 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 6 0 0 4 6 0 105 3 1 2 2 4 97 0 4 4 33 77 0 1 1 5 97 0 5 5 34 5 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 3 2 1 2 3 1 128 0 6 0 0 4 6 0 105 0 2 2 4 97 0 4 4 33 77 0 1 1 5 97 0 5 5 34 5 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 35 values pushed */
0 3 2 1 2 3 1 128 0 6 0 0 4 6 0 105 0 4 0 2 3 4 2 105 0 1 1 5 97 0 5 5 34 5 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
43 46 39 33 45 40 35 7 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 700;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
lastChange = "2019-06-23 23:20:31 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"445 323 LINE",
"427 224 OFFCURVE",
"416 160 QCURVE SMOOTH",
"414 149 OFFCURVE",
"414 128 QCURVE SMOOTH",
"414 79 OFFCURVE",
"438 26 QCURVE",
"445 -12 OFFCURVE",
"478 -9 QCURVE",
"491 -9 OFFCURVE",
"503 6 OFFCURVE",
"504 31 OFFCURVE",
"504 35 QCURVE",
"508 86 OFFCURVE",
"529 180 OFFCURVE",
"553 258 QCURVE SMOOTH",
"565 297 LINE SMOOTH",
"575 330 OFFCURVE",
"589 348 OFFCURVE",
"611 348 QCURVE SMOOTH",
"627 348 OFFCURVE",
"637 347 QCURVE SMOOTH",
"664 344 OFFCURVE",
"704 356 OFFCURVE",
"716 375 QCURVE",
"712 406 OFFCURVE",
"678 430 OFFCURVE",
"647 439 QCURVE",
"643 440 OFFCURVE",
"621 447 OFFCURVE",
"613 452 QCURVE",
"630 497 OFFCURVE",
"630 526 QCURVE SMOOTH",
"630 556 OFFCURVE",
"599 603 OFFCURVE",
"578 622 QCURVE SMOOTH",
"556 642 OFFCURVE",
"527 604 QCURVE",
"519 570 LINE",
"485 465 LINE",
"358 476 LINE",
"305 480 LINE",
"315 533 LINE",
"321 555 LINE",
"330 595 LINE",
"332 607 OFFCURVE",
"332 613 QCURVE SMOOTH",
"332 653 OFFCURVE",
"295 703 OFFCURVE",
"251 702 QCURVE",
"242 683 OFFCURVE",
"240 676 QCURVE SMOOTH",
"229 640 LINE SMOOTH",
"206 564 OFFCURVE",
"187 498 QCURVE SMOOTH",
"180 473 OFFCURVE",
"161 445 OFFCURVE",
"140 440 QCURVE",
"134 439 OFFCURVE",
"119 429 OFFCURVE",
"115 427 QCURVE",
"71 403 OFFCURVE",
"71 375 QCURVE SMOOTH",
"71 351 OFFCURVE",
"105 322 QCURVE SMOOTH",
"128 302 OFFCURVE",
"128 280 QCURVE SMOOTH",
"128 272 OFFCURVE",
"125 263 QCURVE",
"122 255 OFFCURVE",
"118 232 OFFCURVE",
"116 226 QCURVE",
"115 211 OFFCURVE",
"110 196 QCURVE",
"107 184 OFFCURVE",
"107 175 QCURVE SMOOTH",
"107 154 OFFCURVE",
"126 121 OFFCURVE",
"146 94 QCURVE",
"155 83 OFFCURVE",
"150 83 QCURVE SMOOTH",
"160 83 OFFCURVE",
"179 92 OFFCURVE",
"185 99 QCURVE",
"195 112 OFFCURVE",
"200 130 QCURVE SMOOTH",
"211 166 LINE SMOOTH",
"221 257 OFFCURVE",
"248 299 QCURVE SMOOTH",
"280 349 OFFCURVE",
"302 353 QCURVE",
"342 359 OFFCURVE",
"416 364 QCURVE",
"427 364 OFFCURVE",
"451 366 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
96 71 65 54 52 47 6 0 3 22 1 1 4 83 1 5 1 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 0 3 4 3 0 4 128 0 4 1 3 4 1 126 0 1 5 3 1 5 126 0 2 2 36 77 0 3 3 32 77 0 5 5 31 5 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
0 2 3 2 133 0 0 3 4 3 0 4 128 0 4 1 3 4 1 126 0 1 5 3 1 5 126 0 3 3 32 77 0 5 5 31 5 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 13 values pushed */
87 86 77 75 59 57 45 44 42 32 6 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 740;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
lastChange = "2019-10-02 10:49:46 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"195 36 OFFCURVE",
"238 52 QCURVE SMOOTH",
"303 76 OFFCURVE",
"393 101 OFFCURVE",
"440 107 QCURVE SMOOTH",
"462 109 OFFCURVE",
"522 128 QCURVE SMOOTH",
"541 134 LINE SMOOTH",
"544 135 OFFCURVE",
"569 141 OFFCURVE",
"594 153 OFFCURVE",
"604 166 QCURVE",
"595 194 OFFCURVE",
"551 212 OFFCURVE",
"518 212 QCURVE SMOOTH",
"491 213 OFFCURVE",
"437 206 QCURVE SMOOTH",
"413 203 OFFCURVE",
"345 194 QCURVE",
"357 253 LINE SMOOTH",
"374 334 OFFCURVE",
"383 382 QCURVE SMOOTH",
"393 437 OFFCURVE",
"406 531 QCURVE SMOOTH",
"411 567 LINE",
"482 559 LINE",
"504 558 LINE SMOOTH",
"530 557 OFFCURVE",
"543 556 QCURVE SMOOTH",
"560 555 OFFCURVE",
"568 557 QCURVE",
"575 557 OFFCURVE",
"592 573 OFFCURVE",
"597 577 QCURVE",
"593 582 OFFCURVE",
"580 599 OFFCURVE",
"574 604 QCURVE",
"571 607 OFFCURVE",
"558 609 OFFCURVE",
"556 609 QCURVE",
"493 627 LINE SMOOTH",
"472 633 OFFCURVE",
"409 650 OFFCURVE",
"367 663 QCURVE SMOOTH",
"322 677 OFFCURVE",
"276 676 QCURVE SMOOTH",
"175 675 OFFCURVE",
"86 609 QCURVE SMOOTH",
"63 592 OFFCURVE",
"52 576 QCURVE SMOOTH",
"44 565 OFFCURVE",
"44 553 QCURVE SMOOTH",
"44 544 OFFCURVE",
"55 528 OFFCURVE",
"64 524 QCURVE",
"67 523 OFFCURVE",
"100 508 OFFCURVE",
"115 508 QCURVE SMOOTH",
"129 508 OFFCURVE",
"142 515 QCURVE SMOOTH",
"179 535 OFFCURVE",
"208 547 QCURVE",
"232 559 LINE",
"237 555 OFFCURVE",
"255 540 OFFCURVE",
"262 537 QCURVE",
"283 529 OFFCURVE",
"283 508 QCURVE SMOOTH",
"283 502 OFFCURVE",
"282 499 QCURVE",
"278 468 LINE SMOOTH",
"265 367 OFFCURVE",
"244 248 OFFCURVE",
"226 187 QCURVE",
"220 163 OFFCURVE",
"195 155 QCURVE SMOOTH",
"137 137 OFFCURVE",
"82 115 QCURVE SMOOTH",
"77 113 OFFCURVE",
"49 101 OFFCURVE",
"21 80 OFFCURVE",
"15 58 QCURVE",
"59 16 OFFCURVE",
"107 16 QCURVE SMOOTH",
"125 16 OFFCURVE",
"146 22 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
51 22 2 3 2 73 66 3 3 0 5 2 76 17 1 1 1 75 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
4 1 3 2 1 2 3 1 128 0 1 5 2 1 5 126 0 5 0 2 5 0 126 0 2 2 30 77 0 0 0 34 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 27 values pushed */
0 2 3 2 133 4 1 3 1 3 133 0 1 5 1 133 0 5 0 5 133 0 0 0 34 0 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
71 69 59 58 57 53 40 38 28 26 32 6 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 630;
}
);
leftKerningGroup = I;
note = I;
rightKerningGroup = I;
unicode = 0049;
},
{
glyphname = J;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"151 9 OFFCURVE",
"215 9 QCURVE SMOOTH",
"261 9 OFFCURVE",
"313 20 QCURVE SMOOTH",
"380 33 OFFCURVE",
"467 113 OFFCURVE",
"493 178 QCURVE SMOOTH",
"516 237 OFFCURVE",
"530 360 OFFCURVE",
"532 449 QCURVE SMOOTH",
"533 477 LINE",
"533 512 LINE SMOOTH",
"533 569 OFFCURVE",
"532 597 QCURVE",
"532 654 LINE",
"499 683 OFFCURVE",
"458 683 QCURVE SMOOTH",
"438 683 OFFCURVE",
"408 676 QCURVE",
"398 673 OFFCURVE",
"377 671 QCURVE SMOOTH",
"354 669 OFFCURVE",
"338 664 QCURVE",
"271 639 OFFCURVE",
"196 603 QCURVE SMOOTH",
"186 598 OFFCURVE",
"172 580 OFFCURVE",
"172 570 QCURVE SMOOTH",
"172 563 OFFCURVE",
"175 557 QCURVE",
"179 548 OFFCURVE",
"202 533 OFFCURVE",
"213 530 QCURVE SMOOTH",
"226 526 OFFCURVE",
"242 526 QCURVE SMOOTH",
"268 526 OFFCURVE",
"291 539 QCURVE SMOOTH",
"325 559 OFFCURVE",
"368 577 OFFCURVE",
"396 578 QCURVE",
"408 491 OFFCURVE",
"408 426 QCURVE SMOOTH",
"408 284 OFFCURVE",
"351 178 QCURVE SMOOTH",
"329 137 OFFCURVE",
"240 89 OFFCURVE",
"189 89 QCURVE SMOOTH",
"157 89 OFFCURVE",
"128 99 QCURVE",
"123 101 OFFCURVE",
"92 111 OFFCURVE",
"79 111 QCURVE SMOOTH",
"52 111 OFFCURVE",
"33 87 QCURVE",
"56 52 OFFCURVE",
"95 34 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
40 1 2 4 1 1 5 1 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 2 4 3 4 2 3 128 0 3 0 4 3 0 126 0 0 1 4 0 1 126 0 4 4 30 77 0 1 1 5 97 0 5 5 40 5 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 4 2 4 133 0 2 3 2 133 0 3 0 3 133 0 0 1 0 133 0 1 1 5 97 0 5 5 40 5 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
54 52 39 37 35 22 35 34 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 584;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"221 487 OFFCURVE",
"225 499 QCURVE SMOOTH",
"241 543 OFFCURVE",
"248 565 QCURVE SMOOTH",
"282 662 LINE SMOOTH",
"288 679 OFFCURVE",
"288 688 QCURVE SMOOTH",
"288 697 OFFCURVE",
"277 709 OFFCURVE",
"262 716 QCURVE SMOOTH",
"231 731 OFFCURVE",
"216 731 QCURVE SMOOTH",
"206 731 OFFCURVE",
"191 719 OFFCURVE",
"184 706 QCURVE SMOOTH",
"180 698 OFFCURVE",
"138 617 OFFCURVE",
"126 580 QCURVE SMOOTH",
"100 495 OFFCURVE",
"80 394 QCURVE SMOOTH",
"65 323 OFFCURVE",
"50 228 OFFCURVE",
"50 181 QCURVE SMOOTH",
"50 150 OFFCURVE",
"55 108 QCURVE",
"59 57 LINE",
"60 22 OFFCURVE",
"69 -8 OFFCURVE",
"96 -26 OFFCURVE",
"132 -39 QCURVE",
"148 -29 OFFCURVE",
"157 2 OFFCURVE",
"157 25 QCURVE",
"156 124 LINE",
"156 157 OFFCURVE",
"157 173 QCURVE SMOOTH",
"158 187 OFFCURVE",
"168 216 OFFCURVE",
"177 224 QCURVE",
"205 251 OFFCURVE",
"260 295 QCURVE SMOOTH",
"289 319 LINE",
"313 285 OFFCURVE",
"315 281 QCURVE",
"345 241 OFFCURVE",
"365 209 QCURVE SMOOTH",
"404 145 OFFCURVE",
"512 38 OFFCURVE",
"581 -13 QCURVE",
"592 -22 OFFCURVE",
"604 -22 QCURVE SMOOTH",
"617 -22 OFFCURVE",
"634 -8 QCURVE",
"617 11 LINE SMOOTH",
"559 72 OFFCURVE",
"464 208 OFFCURVE",
"398 314 QCURVE SMOOTH",
"380 342 LINE SMOOTH",
"363 370 OFFCURVE",
"363 382 QCURVE SMOOTH",
"363 391 OFFCURVE",
"376 408 OFFCURVE",
"390 420 QCURVE SMOOTH",
"413 441 OFFCURVE",
"461 479 QCURVE SMOOTH",
"489 502 LINE",
"599 595 LINE",
"615 611 OFFCURVE",
"615 624 QCURVE SMOOTH",
"615 633 OFFCURVE",
"609 642 QCURVE SMOOTH",
"602 653 OFFCURVE",
"569 666 OFFCURVE",
"551 666 QCURVE SMOOTH",
"529 666 OFFCURVE",
"518 658 QCURVE SMOOTH",
"299 503 LINE SMOOTH",
"257 473 OFFCURVE",
"220 445 QCURVE",
"218 446 OFFCURVE",
"214 448 OFFCURVE",
"212 450 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
55 45 39 3 1 0 1 76 51 1 1 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
0 2 0 2 133 0 0 0 30 77 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
0 2 0 2 133 0 0 1 0 133 0 1 1 31 1 78 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
70 68 31 29 38 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 684;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
lastChange = "2019-06-23 23:31:00 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"225 51 OFFCURVE",
"216 51 QCURVE SMOOTH",
"173 51 OFFCURVE",
"173 100 QCURVE SMOOTH",
"173 126 OFFCURVE",
"179 150 QCURVE SMOOTH",
"223 341 OFFCURVE",
"304 547 QCURVE SMOOTH",
"326 601 OFFCURVE",
"334 633 QCURVE SMOOTH",
"338 648 OFFCURVE",
"338 662 QCURVE SMOOTH",
"338 717 OFFCURVE",
"276 722 QCURVE",
"271 722 OFFCURVE",
"262 724 OFFCURVE",
"257 724 QCURVE",
"233 726 OFFCURVE",
"208 708 OFFCURVE",
"201 685 QCURVE SMOOTH",
"175 599 OFFCURVE",
"163 556 QCURVE SMOOTH",
"108 374 OFFCURVE",
"87 298 QCURVE SMOOTH",
"67 229 OFFCURVE",
"51 130 QCURVE",
"50 125 OFFCURVE",
"50 114 QCURVE SMOOTH",
"50 89 OFFCURVE",
"75 46 OFFCURVE",
"98 25 QCURVE SMOOTH",
"159 -32 OFFCURVE",
"255 -32 QCURVE SMOOTH",
"282 -32 OFFCURVE",
"335 -21 OFFCURVE",
"369 -11 QCURVE SMOOTH",
"396 -4 LINE SMOOTH",
"400 -3 OFFCURVE",
"407 7 OFFCURVE",
"410 9 QCURVE",
"434 27 OFFCURVE",
"450 43 OFFCURVE",
"450 51 QCURVE SMOOTH",
"450 58 OFFCURVE",
"432 78 OFFCURVE",
"419 91 QCURVE",
"342 75 LINE SMOOTH",
"257 57 OFFCURVE",
"230 52 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
2 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 1 0 97 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
47 45 46 2 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 490;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"335 627 OFFCURVE",
"328 627 QCURVE SMOOTH",
"288 627 OFFCURVE",
"264 592 QCURVE SMOOTH",
"232 545 OFFCURVE",
"169 462 QCURVE SMOOTH",
"138 421 LINE SMOOTH",
"55 310 OFFCURVE",
"13 186 QCURVE SMOOTH",
"7 170 OFFCURVE",
"7 154 QCURVE SMOOTH",
"7 124 OFFCURVE",
"34 100 QCURVE",
"69 66 OFFCURVE",
"88 66 QCURVE SMOOTH",
"100 66 OFFCURVE",
"118 95 OFFCURVE",
"128 129 QCURVE SMOOTH",
"180 291 OFFCURVE",
"326 485 QCURVE",
"339 459 LINE SMOOTH",
"343 451 OFFCURVE",
"372 389 OFFCURVE",
"377 371 QCURVE SMOOTH",
"405 275 OFFCURVE",
"424 186 QCURVE SMOOTH",
"436 128 OFFCURVE",
"490 95 QCURVE SMOOTH",
"509 84 OFFCURVE",
"521 84 QCURVE SMOOTH",
"534 84 OFFCURVE",
"553 108 OFFCURVE",
"563 133 QCURVE",
"574 165 OFFCURVE",
"644 283 OFFCURVE",
"717 392 OFFCURVE",
"726 400 QCURVE",
"724 321 LINE",
"723 266 LINE SMOOTH",
"721 190 OFFCURVE",
"721 153 QCURVE SMOOTH",
"721 117 OFFCURVE",
"722 100 QCURVE SMOOTH",
"724 67 OFFCURVE",
"758 30 OFFCURVE",
"790 23 QCURVE SMOOTH",
"802 20 OFFCURVE",
"808 20 QCURVE SMOOTH",
"816 20 OFFCURVE",
"822 30 OFFCURVE",
"822 56 OFFCURVE",
"823 66 QCURVE",
"825 98 LINE",
"825 133 OFFCURVE",
"829 161 QCURVE SMOOTH",
"843 283 OFFCURVE",
"875 527 QCURVE SMOOTH",
"877 545 OFFCURVE",
"882 572 OFFCURVE",
"884 581 QCURVE SMOOTH",
"885 586 OFFCURVE",
"885 596 QCURVE SMOOTH",
"885 607 OFFCURVE",
"883 611 QCURVE",
"874 632 OFFCURVE",
"815 672 OFFCURVE",
"791 672 QCURVE SMOOTH",
"784 672 OFFCURVE",
"781 671 QCURVE",
"763 667 OFFCURVE",
"756 656 QCURVE SMOOTH",
"700 574 OFFCURVE",
"652 501 QCURVE SMOOTH",
"640 484 OFFCURVE",
"609 425 QCURVE SMOOTH",
"582 373 OFFCURVE",
"546 312 OFFCURVE",
"525 289 QCURVE",
"493 356 LINE SMOOTH",
"438 474 OFFCURVE",
"362 623 OFFCURVE",
"351 625 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
61 44 19 3 4 2 4 1 76 29 1 3 1 75 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 2 4 3 4 2 3 128 0 3 1 4 3 1 126 0 0 0 30 77 0 4 4 32 77 0 1 1 34 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 0 4 0 133 0 2 4 3 4 2 3 128 0 3 1 4 3 1 126 0 4 4 32 77 0 1 1 34 1 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
79 78 67 65 52 50 34 32 30 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 935;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2019-06-23 23:30:34 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"151 483 OFFCURVE",
"144 456 OFFCURVE",
"143 448 QCURVE",
"116 286 OFFCURVE",
"103 194 QCURVE",
"100 178 OFFCURVE",
"98 146 QCURVE SMOOTH",
"95 94 OFFCURVE",
"86 70 QCURVE SMOOTH",
"81 56 OFFCURVE",
"81 38 QCURVE SMOOTH",
"81 18 OFFCURVE",
"88 -8 QCURVE SMOOTH",
"92 -23 OFFCURVE",
"135 -46 OFFCURVE",
"150 -42 QCURVE SMOOTH",
"179 -34 OFFCURVE",
"218 10 OFFCURVE",
"219 40 QCURVE",
"222 81 OFFCURVE",
"224 142 OFFCURVE",
"225 162 QCURVE SMOOTH",
"231 283 LINE SMOOTH",
"234 324 OFFCURVE",
"249 396 QCURVE SMOOTH",
"258 439 LINE",
"313 369 OFFCURVE",
"340 333 QCURVE SMOOTH",
"360 306 LINE SMOOTH",
"405 245 OFFCURVE",
"435 209 QCURVE SMOOTH",
"464 174 OFFCURVE",
"504 176 QCURVE SMOOTH",
"544 178 OFFCURVE",
"590 217 OFFCURVE",
"598 257 QCURVE SMOOTH",
"603 283 OFFCURVE",
"606 296 QCURVE",
"626 391 OFFCURVE",
"658 516 OFFCURVE",
"682 577 QCURVE",
"692 595 OFFCURVE",
"701 631 QCURVE SMOOTH",
"707 656 OFFCURVE",
"688 671 QCURVE",
"640 678 LINE",
"597 619 OFFCURVE",
"544 488 OFFCURVE",
"512 383 QCURVE SMOOTH",
"495 328 LINE",
"470 364 OFFCURVE",
"444 397 QCURVE",
"328 558 LINE",
"324 563 OFFCURVE",
"320 580 OFFCURVE",
"318 586 QCURVE SMOOTH",
"295 623 OFFCURVE",
"280 623 QCURVE SMOOTH",
"277 623 OFFCURVE",
"263 621 QCURVE",
"202 616 LINE",
"175 588 OFFCURVE",
"146 529 OFFCURVE",
"150 493 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
19 1 0 74 57 45 38 14 4 0 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
0 0 0 32 0 78 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 4 values pushed */
0 0 0 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 4 values pushed */
36 1 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 715;
}
);
note = N;
rightKerningGroup = N;
unicode = 004E;
},
{
glyphname = O;
lastChange = "2019-06-19 01:03:32 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"120 494 LINE",
"166 506 OFFCURVE",
"188 513 QCURVE SMOOTH",
"302 546 LINE SMOOTH",
"309 548 OFFCURVE",
"322 552 OFFCURVE",
"328 554 QCURVE SMOOTH",
"385 573 OFFCURVE",
"392 575 QCURVE SMOOTH",
"413 581 OFFCURVE",
"433 581 QCURVE SMOOTH",
"489 581 OFFCURVE",
"524 533 QCURVE SMOOTH",
"545 503 OFFCURVE",
"567 455 OFFCURVE",
"567 430 QCURVE SMOOTH",
"567 400 OFFCURVE",
"548 368 QCURVE SMOOTH",
"520 322 OFFCURVE",
"446 242 OFFCURVE",
"396 199 QCURVE SMOOTH",
"369 175 OFFCURVE",
"302 151 OFFCURVE",
"255 142 QCURVE SMOOTH",
"250 141 OFFCURVE",
"242 141 QCURVE SMOOTH",
"226 141 OFFCURVE",
"205 157 OFFCURVE",
"203 172 QCURVE",
"194 224 OFFCURVE",
"194 261 QCURVE SMOOTH",
"194 278 OFFCURVE",
"195 287 QCURVE SMOOTH",
"198 311 OFFCURVE",
"198 325 QCURVE SMOOTH",
"198 345 OFFCURVE",
"179 367 OFFCURVE",
"148 384 QCURVE",
"126 395 LINE",
"103 406 LINE",
"99 403 OFFCURVE",
"86 393 OFFCURVE",
"84 388 QCURVE",
"50 327 OFFCURVE",
"50 266 QCURVE SMOOTH",
"50 186 OFFCURVE",
"158 61 OFFCURVE",
"245 42 QCURVE SMOOTH",
"271 36 OFFCURVE",
"297 36 QCURVE SMOOTH",
"384 36 OFFCURVE",
"479 99 QCURVE SMOOTH",
"535 136 OFFCURVE",
"625 240 OFFCURVE",
"667 309 QCURVE SMOOTH",
"699 361 OFFCURVE",
"699 411 QCURVE SMOOTH",
"699 475 OFFCURVE",
"649 528 QCURVE",
"645 533 OFFCURVE",
"622 553 QCURVE",
"607 565 OFFCURVE",
"594 578 QCURVE SMOOTH",
"557 615 OFFCURVE",
"443 656 OFFCURVE",
"382 656 QCURVE SMOOTH",
"296 656 OFFCURVE",
"231 617 QCURVE SMOOTH",
"149 568 OFFCURVE",
"110 503 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
69 1 2 3 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
0 2 3 1 3 2 1 128 0 3 3 0 97 0 0 0 30 77 0 1 1 34 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
24 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
0 2 3 1 3 2 1 128 0 3 3 0 97 0 0 0 32 77 0 1 1 34 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 2 3 1 3 2 1 128 0 0 0 3 2 0 3 105 0 1 1 34 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 2 3 1 3 2 1 128 0 1 1 132 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
59 57 43 42 46 34 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 729;
}
);
leftKerningGroup = O;
note = O;
rightKerningGroup = O;
unicode = 004F;
},
{
glyphname = P;
lastChange = "2019-10-02 11:16:57 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"498 328 OFFCURVE",
"589 433 QCURVE SMOOTH",
"608 455 OFFCURVE",
"616 472 QCURVE",
"631 501 OFFCURVE",
"631 525 QCURVE SMOOTH",
"631 562 OFFCURVE",
"592 594 QCURVE SMOOTH",
"587 598 OFFCURVE",
"553 627 OFFCURVE",
"536 634 QCURVE SMOOTH",
"395 692 OFFCURVE",
"258 692 QCURVE SMOOTH",
"223 692 OFFCURVE",
"178 687 QCURVE",
"147 682 OFFCURVE",
"89 652 OFFCURVE",
"68 628 QCURVE SMOOTH",
"40 595 OFFCURVE",
"38 563 QCURVE SMOOTH",
"37 544 OFFCURVE",
"50 518 QCURVE",
"102 509 LINE",
"96 479 OFFCURVE",
"82 421 QCURVE SMOOTH",
"78 405 OFFCURVE",
"55 301 OFFCURVE",
"49 258 QCURVE SMOOTH",
"40 199 OFFCURVE",
"34 81 QCURVE SMOOTH",
"32 41 LINE SMOOTH",
"31 18 OFFCURVE",
"46 0 OFFCURVE",
"65 0 QCURVE",
"78 1 LINE SMOOTH",
"95 2 OFFCURVE",
"113 21 OFFCURVE",
"117 37 QCURVE",
"126 82 LINE SMOOTH",
"129 97 OFFCURVE",
"137 142 OFFCURVE",
"144 172 QCURVE SMOOTH",
"228 561 LINE SMOOTH",
"237 601 OFFCURVE",
"272 598 QCURVE SMOOTH",
"380 589 OFFCURVE",
"467 582 QCURVE",
"474 581 OFFCURVE",
"495 572 OFFCURVE",
"498 571 QCURVE",
"516 562 LINE",
"502 538 LINE",
"487 510 OFFCURVE",
"476 501 QCURVE",
"419 449 OFFCURVE",
"342 389 QCURVE SMOOTH",
"319 371 OFFCURVE",
"271 340 QCURVE SMOOTH",
"243 322 LINE",
"256 296 OFFCURVE",
"295 266 OFFCURVE",
"317 266 QCURVE SMOOTH",
"329 266 OFFCURVE",
"348 273 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
40 12 4 3 0 1 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 25 values pushed */
0 0 1 2 1 0 2 128 0 1 1 4 97 0 4 4 36 77 3 1 2 2 40 2 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 0 1 2 1 0 2 128 0 4 0 1 0 4 1 105 3 1 2 2 40 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 29 values pushed */
0 0 1 2 1 0 2 128 3 1 2 2 132 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
51 49 17 25 31 32 5 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 610;
}
);
leftKerningGroup = P;
note = P;
rightKerningGroup = P;
unicode = 0050;
},
{
glyphname = Q;
lastChange = "2019-10-02 11:15:58 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"419 164 OFFCURVE",
"465 243 QCURVE SMOOTH",
"506 313 OFFCURVE",
"507 379 QCURVE",
"507 431 OFFCURVE",
"468 522 OFFCURVE",
"432 569 QCURVE SMOOTH",
"406 603 OFFCURVE",
"334 648 OFFCURVE",
"286 665 QCURVE",
"279 668 OFFCURVE",
"270 668 QCURVE SMOOTH",
"256 668 OFFCURVE",
"239 663 QCURVE",
"195 654 OFFCURVE",
"128 599 OFFCURVE",
"97 556 QCURVE SMOOTH",
"77 528 OFFCURVE",
"53 480 OFFCURVE",
"53 455 QCURVE SMOOTH",
"53 439 OFFCURVE",
"57 427 QCURVE",
"62 410 OFFCURVE",
"62 386 QCURVE SMOOTH",
"62 367 OFFCURVE",
"61 358 QCURVE",
"60 329 LINE SMOOTH",
"55 178 OFFCURVE",
"181 110 QCURVE SMOOTH",
"194 103 OFFCURVE",
"231 81 QCURVE",
"194 74 OFFCURVE",
"190 73 QCURVE",
"148 66 OFFCURVE",
"123 58 QCURVE SMOOTH",
"95 49 OFFCURVE",
"54 25 OFFCURVE",
"41 5 QCURVE",
"60 -29 OFFCURVE",
"104 -59 OFFCURVE",
"135 -59 QCURVE SMOOTH",
"151 -59 OFFCURVE",
"167 -56 QCURVE SMOOTH",
"188 -52 OFFCURVE",
"228 -42 QCURVE SMOOTH",
"282 -29 OFFCURVE",
"313 -23 QCURVE",
"377 -13 OFFCURVE",
"444 -4 OFFCURVE",
"481 -4 QCURVE SMOOTH",
"525 -4 OFFCURVE",
"568 -13 QCURVE",
"582 -15 OFFCURVE",
"591 -15 QCURVE SMOOTH",
"612 -15 OFFCURVE",
"637 -10 QCURVE",
"644 -9 OFFCURVE",
"659 8 OFFCURVE",
"660 16 QCURVE",
"660 22 OFFCURVE",
"645 39 OFFCURVE",
"638 41 QCURVE SMOOTH",
"563 62 OFFCURVE",
"450 88 OFFCURVE",
"392 88 QCURVE SMOOTH",
"380 87 OFFCURVE",
"344 90 QCURVE SMOOTH",
"302 93 LINE",
"302 93 OFFCURVE",
"320 108 QCURVE SMOOTH",
"339 123 OFFCURVE",
"347 128 QCURVE"
);
},
{
closed = 1;
nodes = (
"154 342 LINE",
"154 374 LINE",
"151 431 OFFCURVE",
"205 518 OFFCURVE",
"256 559 QCURVE SMOOTH",
"277 576 OFFCURVE",
"299 576 QCURVE SMOOTH",
"331 576 OFFCURVE",
"354 536 QCURVE SMOOTH",
"383 486 OFFCURVE",
"382 437 QCURVE SMOOTH",
"381 395 OFFCURVE",
"361 351 QCURVE SMOOTH",
"325 272 OFFCURVE",
"254 218 QCURVE SMOOTH",
"229 199 OFFCURVE",
"208 199 QCURVE SMOOTH",
"189 199 OFFCURVE",
"162 229 OFFCURVE",
"158 256 QCURVE SMOOTH",
"154 281 OFFCURVE",
"154 313 QCURVE",
"152 342 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
45 1 5 6 40 33 2 2 0 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 41 values pushed */
0 6 4 5 4 6 5 128 0 5 0 4 5 0 126 0 3 1 3 134 0 4 4 30 77 0 0 0 2 97 0 2 2 31 77 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 4 6 4 133 0 6 5 6 133 0 5 0 5 133 0 3 1 3 134 0 0 0 2 97 0 2 2 31 77 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 34 values pushed */
0 4 6 4 133 0 6 5 6 133 0 5 0 5 133 0 3 1 3 134 0 0 0 2 1 0 2 105 0 1 1 31 1 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 13 values pushed */
89 87 79 77 60 58 39 34 41 52 7 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 677;
}
);
leftKerningGroup = O;
note = Q;
rightKerningGroup = O;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2019-06-23 23:20:57 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"627 104 OFFCURVE",
"617 124 OFFCURVE",
"614 129 QCURVE",
"607 128 OFFCURVE",
"594 128 QCURVE SMOOTH",
"551 128 OFFCURVE",
"513 151 QCURVE SMOOTH",
"474 177 OFFCURVE",
"391 222 QCURVE SMOOTH",
"369 234 LINE",
"367 236 OFFCURVE",
"364 241 OFFCURVE",
"363 241 QCURVE",
"428 325 LINE SMOOTH",
"507 428 OFFCURVE",
"550 484 QCURVE SMOOTH",
"586 531 OFFCURVE",
"586 577 QCURVE SMOOTH",
"586 610 OFFCURVE",
"565 645 QCURVE SMOOTH",
"542 684 OFFCURVE",
"473 725 OFFCURVE",
"433 725 QCURVE SMOOTH",
"394 725 OFFCURVE",
"356 706 QCURVE SMOOTH",
"238 647 OFFCURVE",
"181 538 QCURVE SMOOTH",
"80 343 OFFCURVE",
"52 162 QCURVE SMOOTH",
"44 103 OFFCURVE",
"44 27 QCURVE SMOOTH",
"44 2 OFFCURVE",
"84 -32 OFFCURVE",
"111 -32 QCURVE SMOOTH",
"137 -32 OFFCURVE",
"154 -8 OFFCURVE",
"154 28 QCURVE",
"153 44 LINE",
"171 192 LINE",
"185 190 OFFCURVE",
"215 188 QCURVE",
"282 181 OFFCURVE",
"300 178 QCURVE SMOOTH",
"340 171 OFFCURVE",
"375 152 QCURVE SMOOTH",
"402 137 OFFCURVE",
"443 110 QCURVE SMOOTH",
"497 74 OFFCURVE",
"517 65 QCURVE SMOOTH",
"543 53 OFFCURVE",
"588 43 QCURVE",
"592 42 OFFCURVE",
"598 42 QCURVE SMOOTH",
"614 42 OFFCURVE",
"633 61 OFFCURVE",
"633 77 QCURVE SMOOTH",
"633 86 OFFCURVE",
"630 96 QCURVE"
);
},
{
closed = 1;
nodes = (
"241 273 OFFCURVE",
"218 255 OFFCURVE",
"198 257 QCURVE",
"199 317 OFFCURVE",
"268 483 OFFCURVE",
"388 619 OFFCURVE",
"461 641 QCURVE",
"462 636 OFFCURVE",
"466 612 OFFCURVE",
"466 604 QCURVE SMOOTH",
"466 597 OFFCURVE",
"465 594 QCURVE SMOOTH",
"462 585 OFFCURVE",
"447 543 OFFCURVE",
"429 502 OFFCURVE",
"416 484 QCURVE SMOOTH",
"384 440 OFFCURVE",
"301 340 OFFCURVE",
"260 294 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
73 44 2 1 3 19 1 0 4 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 1 3 4 3 1 4 128 0 3 3 36 77 0 4 4 0 97 0 0 0 34 77 0 2 2 31 2 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
0 3 1 3 133 0 1 4 1 133 0 4 0 0 2 4 0 105 0 2 2 31 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 3 1 3 133 0 1 4 1 133 0 2 0 2 134 0 4 0 0 4 89 0 4 4 0 97 0 0 4 0 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
53 51 41 37 28 19 5 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 689;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"445 717 OFFCURVE",
"423 719 QCURVE SMOOTH",
"399 721 OFFCURVE",
"386 721 QCURVE SMOOTH",
"292 721 OFFCURVE",
"202 670 QCURVE SMOOTH",
"155 644 OFFCURVE",
"108 562 OFFCURVE",
"108 516 QCURVE SMOOTH",
"108 482 OFFCURVE",
"133 419 OFFCURVE",
"155 395 QCURVE SMOOTH",
"194 353 OFFCURVE",
"242 310 QCURVE SMOOTH",
"293 262 OFFCURVE",
"375 161 OFFCURVE",
"368 141 QCURVE",
"356 111 OFFCURVE",
"249 70 OFFCURVE",
"189 70 QCURVE SMOOTH",
"135 70 OFFCURVE",
"96 88 QCURVE",
"94 94 OFFCURVE",
"94 97 QCURVE SMOOTH",
"94 102 OFFCURVE",
"97 118 OFFCURVE",
"92 131 OFFCURVE",
"78 133 QCURVE",
"50 99 OFFCURVE",
"50 66 QCURVE SMOOTH",
"50 27 OFFCURVE",
"88 -5 QCURVE SMOOTH",
"108 -21 OFFCURVE",
"156 -38 OFFCURVE",
"178 -37 QCURVE",
"196 -39 OFFCURVE",
"205 -39 QCURVE SMOOTH",
"219 -39 OFFCURVE",
"241 -37 OFFCURVE",
"249 -36 QCURVE",
"312 -31 OFFCURVE",
"412 8 OFFCURVE",
"450 50 QCURVE SMOOTH",
"483 86 OFFCURVE",
"483 129 QCURVE SMOOTH",
"483 146 OFFCURVE",
"475 167 QCURVE SMOOTH",
"455 215 OFFCURVE",
"398 289 OFFCURVE",
"349 342 QCURVE SMOOTH",
"326 366 LINE",
"260 445 OFFCURVE",
"231 475 QCURVE",
"201 500 OFFCURVE",
"201 527 QCURVE SMOOTH",
"201 543 OFFCURVE",
"212 555 QCURVE",
"227 575 OFFCURVE",
"248 588 QCURVE SMOOTH",
"293 614 OFFCURVE",
"377 639 OFFCURVE",
"423 639 QCURVE SMOOTH",
"444 639 OFFCURVE",
"455 638 QCURVE",
"480 666 OFFCURVE",
"480 684 QCURVE SMOOTH",
"480 702 OFFCURVE",
"455 712 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
39 1 3 0 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 0 0 4 97 0 4 4 36 77 0 3 3 1 97 2 1 1 1 31 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
24 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 20 values pushed */
0 4 0 0 3 4 0 105 0 3 3 1 97 2 1 1 1 31 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 25 values pushed */
0 4 0 0 3 4 0 105 0 3 1 1 3 89 0 3 3 1 97 2 1 1 3 1 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
64 62 48 46 33 32 31 29 36 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 533;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
lastChange = "2019-06-23 23:19:35 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"290 133 OFFCURVE",
"268 46 QCURVE",
"266 36 OFFCURVE",
"266 33 QCURVE SMOOTH",
"266 18 OFFCURVE",
"287 1 OFFCURVE",
"306 1 QCURVE",
"332 0 OFFCURVE",
"351 4 OFFCURVE",
"361 21 OFFCURVE",
"369 47 QCURVE SMOOTH",
"381 88 OFFCURVE",
"382 117 QCURVE",
"386 170 OFFCURVE",
"402 309 QCURVE SMOOTH",
"418 463 OFFCURVE",
"423 526 QCURVE SMOOTH",
"425 553 OFFCURVE",
"430 570 OFFCURVE",
"448 577 OFFCURVE",
"472 579 QCURVE SMOOTH",
"511 582 OFFCURVE",
"589 587 QCURVE",
"609 589 OFFCURVE",
"648 591 QCURVE",
"686 595 OFFCURVE",
"776 605 QCURVE SMOOTH",
"812 609 OFFCURVE",
"812 634 QCURVE SMOOTH",
"812 644 OFFCURVE",
"800 653 OFFCURVE",
"781 653 OFFCURVE",
"777 653 QCURVE",
"707 658 LINE SMOOTH",
"691 659 OFFCURVE",
"506 673 OFFCURVE",
"421 673 QCURVE SMOOTH",
"242 674 OFFCURVE",
"103 623 QCURVE SMOOTH",
"74 612 OFFCURVE",
"41 590 OFFCURVE",
"35 568 QCURVE",
"48 539 OFFCURVE",
"93 509 OFFCURVE",
"120 509 QCURVE SMOOTH",
"138 509 OFFCURVE",
"159 517 QCURVE SMOOTH",
"247 551 OFFCURVE",
"325 563 QCURVE",
"317 483 LINE SMOOTH",
"314 455 OFFCURVE",
"308 386 OFFCURVE",
"305 345 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 14 values pushed */
35 10 3 3 0 4 52 48 39 3 6 0 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 14 values pushed */
35 10 3 3 0 5 52 48 39 3 6 0 2 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 33 values pushed */
5 1 4 2 0 2 4 0 128 0 0 6 2 0 6 126 0 1 1 30 77 3 1 2 2 32 77 0 6 6 31 6 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 33 values pushed */
0 1 2 1 133 5 1 4 2 0 2 4 0 128 0 0 6 2 0 6 126 3 1 2 2 32 77 0 6 6 31 6 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 1 2 1 133 5 1 4 3 0 3 4 0 128 0 0 6 3 0 6 126 0 2 2 32 77 0 3 3 32 77 0 6 6 31 6 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 1 2 1 133 0 2 3 2 133 5 1 4 3 0 3 4 0 128 0 0 6 3 0 6 126 0 3 3 32 77 0 6 6 31 6 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 43 values pushed */
0 1 2 1 133 0 2 3 2 133 0 4 3 5 3 4 5 128 0 5 0 3 5 0 126 0 0 6 3 0 6 126 0 3 3 32 77 0 6 6 31 6 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
46 17 22 33 17 38 38 7 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 761;
}
);
leftKerningGroup = T;
note = T;
rightKerningGroup = T;
unicode = 0054;
},
{
glyphname = U;
lastChange = "2019-10-02 10:55:38 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"666 351 OFFCURVE",
"693 511 QCURVE",
"697 569 OFFCURVE",
"629 648 OFFCURVE",
"570 654 QCURVE",
"570 654 LINE",
"568 652 LINE",
"563 638 OFFCURVE",
"559 623 QCURVE SMOOTH",
"521 495 OFFCURVE",
"387 281 OFFCURVE",
"283 177 QCURVE SMOOTH",
"263 157 OFFCURVE",
"236 157 QCURVE SMOOTH",
"211 157 OFFCURVE",
"169 193 OFFCURVE",
"167 216 QCURVE",
"165 230 OFFCURVE",
"165 259 QCURVE SMOOTH",
"165 370 OFFCURVE",
"227 502 QCURVE SMOOTH",
"248 546 OFFCURVE",
"248 573 QCURVE SMOOTH",
"248 596 OFFCURVE",
"219 632 OFFCURVE",
"186 651 QCURVE SMOOTH",
"171 660 OFFCURVE",
"160 660 QCURVE SMOOTH",
"157 660 OFFCURVE",
"153 658 QCURVE",
"143 655 OFFCURVE",
"138 635 QCURVE SMOOTH",
"126 593 OFFCURVE",
"119 572 QCURVE",
"98 498 OFFCURVE",
"74 405 OFFCURVE",
"66 357 QCURVE SMOOTH",
"60 320 OFFCURVE",
"60 285 QCURVE SMOOTH",
"60 163 OFFCURVE",
"139 77 QCURVE SMOOTH",
"155 59 OFFCURVE",
"201 41 OFFCURVE",
"226 41 QCURVE SMOOTH",
"255 41 OFFCURVE",
"275 51 QCURVE SMOOTH",
"325 76 OFFCURVE",
"398 137 OFFCURVE",
"442 183 QCURVE SMOOTH",
"460 202 OFFCURVE",
"499 256 QCURVE",
"511 269 OFFCURVE",
"542 302 OFFCURVE",
"551 310 QCURVE",
"562 318 LINE",
"544 102 LINE",
"632 88 LINE",
"633 90 OFFCURVE",
"640 150 QCURVE SMOOTH",
"652 255 OFFCURVE",
"656 280 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
58 5 2 2 3 4 1 0 2 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
0 1 1 30 77 0 3 3 32 77 0 2 2 0 97 0 0 0 34 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 1 3 1 133 0 2 0 0 2 0 101 0 3 3 32 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 26 values pushed */
0 1 3 1 133 0 3 2 3 133 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
54 44 31 47 4 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 753;
}
);
leftKerningGroup = U;
note = U;
rightKerningGroup = U;
unicode = 0055;
},
{
glyphname = V;
lastChange = "2019-10-02 09:51:12 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"62 390 OFFCURVE",
"64 375 OFFCURVE",
"65 371 QCURVE",
"69 358 OFFCURVE",
"81 316 QCURVE",
"84 307 OFFCURVE",
"110 214 OFFCURVE",
"127 175 QCURVE SMOOTH",
"177 60 OFFCURVE",
"308 8 QCURVE SMOOTH",
"323 2 OFFCURVE",
"334 3 QCURVE SMOOTH",
"359 5 OFFCURVE",
"379 29 QCURVE",
"401 60 OFFCURVE",
"435 128 OFFCURVE",
"453 174 QCURVE SMOOTH",
"471 220 LINE SMOOTH",
"507 312 OFFCURVE",
"560 431 OFFCURVE",
"599 486 QCURVE SMOOTH",
"604 493 OFFCURVE",
"632 535 OFFCURVE",
"669 576 OFFCURVE",
"696 589 QCURVE SMOOTH",
"706 594 OFFCURVE",
"722 610 QCURVE SMOOTH",
"736 624 OFFCURVE",
"736 641 QCURVE SMOOTH",
"736 654 OFFCURVE",
"721 675 OFFCURVE",
"708 681 QCURVE SMOOTH",
"687 691 OFFCURVE",
"665 690 QCURVE SMOOTH",
"645 689 OFFCURVE",
"624 681 QCURVE SMOOTH",
"559 656 OFFCURVE",
"517 581 QCURVE SMOOTH",
"462 496 OFFCURVE",
"403 370 QCURVE SMOOTH",
"345 245 LINE SMOOTH",
"320 185 OFFCURVE",
"305 156 QCURVE SMOOTH",
"302 150 OFFCURVE",
"288 131 QCURVE SMOOTH",
"275 114 LINE",
"250 131 OFFCURVE",
"222 178 OFFCURVE",
"213 209 QCURVE SMOOTH",
"177 338 OFFCURVE",
"151 460 QCURVE SMOOTH",
"140 512 OFFCURVE",
"87 554 OFFCURVE",
"30 552 QCURVE",
"31 539 OFFCURVE",
"30 518 OFFCURVE",
"30 511 QCURVE SMOOTH",
"30 491 LINE SMOOTH",
"30 461 OFFCURVE",
"42 414 OFFCURVE",
"59 393 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
14 1 2 0 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 0 1 2 1 0 2 128 0 1 1 36 77 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
0 1 0 1 133 0 0 2 0 133 0 2 2 40 2 78 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
49 47 27 25 22 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 640;
}
);
leftKerningGroup = V;
note = V;
unicode = 0056;
},
{
glyphname = W;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"192 459 LINE SMOOTH",
"178 523 OFFCURVE",
"170 555 QCURVE SMOOTH",
"153 629 OFFCURVE",
"83 649 QCURVE",
"65 636 OFFCURVE",
"50 618 OFFCURVE",
"50 607 QCURVE SMOOTH",
"50 595 OFFCURVE",
"59 569 QCURVE SMOOTH",
"69 540 LINE SMOOTH",
"71 534 OFFCURVE",
"87 488 OFFCURVE",
"90 468 QCURVE SMOOTH",
"101 399 OFFCURVE",
"146 223 OFFCURVE",
"169 148 QCURVE SMOOTH",
"181 108 OFFCURVE",
"217 72 OFFCURVE",
"247 72 QCURVE SMOOTH",
"261 72 OFFCURVE",
"277 75 QCURVE",
"287 93 OFFCURVE",
"314 163 QCURVE SMOOTH",
"342 238 OFFCURVE",
"359 267 QCURVE SMOOTH",
"364 276 OFFCURVE",
"382 314 QCURVE SMOOTH",
"404 358 OFFCURVE",
"437 418 OFFCURVE",
"458 442 QCURVE",
"462 402 OFFCURVE",
"466 348 QCURVE SMOOTH",
"467 326 LINE",
"473 258 OFFCURVE",
"533 133 OFFCURVE",
"584 105 QCURVE SMOOTH",
"615 88 OFFCURVE",
"628 88 QCURVE SMOOTH",
"640 88 OFFCURVE",
"657 109 OFFCURVE",
"668 136 QCURVE SMOOTH",
"686 180 OFFCURVE",
"713 278 QCURVE SMOOTH",
"733 346 OFFCURVE",
"742 373 QCURVE SMOOTH",
"764 437 OFFCURVE",
"799 513 OFFCURVE",
"832 545 QCURVE SMOOTH",
"854 567 OFFCURVE",
"854 588 QCURVE SMOOTH",
"854 603 OFFCURVE",
"843 622 QCURVE SMOOTH",
"838 631 OFFCURVE",
"832 646 OFFCURVE",
"826 652 OFFCURVE",
"818 652 QCURVE SMOOTH",
"808 652 OFFCURVE",
"800 650 QCURVE",
"758 642 OFFCURVE",
"709 586 OFFCURVE",
"693 540 QCURVE SMOOTH",
"663 450 LINE SMOOTH",
"646 396 OFFCURVE",
"632 359 QCURVE",
"625 337 OFFCURVE",
"601 300 OFFCURVE",
"580 282 QCURVE",
"575 340 LINE SMOOTH",
"568 403 OFFCURVE",
"567 443 QCURVE SMOOTH",
"566 470 OFFCURVE",
"556 505 OFFCURVE",
"544 532 QCURVE",
"537 546 OFFCURVE",
"534 554 QCURVE",
"524 578 OFFCURVE",
"485 604 OFFCURVE",
"463 604 QCURVE SMOOTH",
"447 604 OFFCURVE",
"416 589 OFFCURVE",
"404 575 QCURVE SMOOTH",
"364 528 OFFCURVE",
"316 454 OFFCURVE",
"292 402 QCURVE SMOOTH",
"237 292 LINE",
"224 330 LINE SMOOTH",
"213 363 OFFCURVE",
"213 363 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
83 1 0 1 57 55 54 20 2 5 2 0 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 25 values pushed */
0 0 1 2 1 0 2 128 0 2 3 1 2 3 126 0 3 3 132 0 1 1 30 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 25 values pushed */
0 0 1 2 1 0 2 128 0 2 3 1 2 3 126 0 3 3 132 0 1 1 32 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 19 values pushed */
0 1 0 1 133 0 0 2 0 133 0 2 3 2 133 0 3 3 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
69 67 50 48 31 30 40 4 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 868;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"165 70 OFFCURVE",
"259 138 QCURVE SMOOTH",
"272 147 OFFCURVE",
"292 159 OFFCURVE",
"298 159 QCURVE SMOOTH",
"306 159 OFFCURVE",
"326 147 OFFCURVE",
"340 138 QCURVE",
"396 99 OFFCURVE",
"506 49 OFFCURVE",
"565 41 QCURVE SMOOTH",
"582 39 OFFCURVE",
"604 50 OFFCURVE",
"604 61 QCURVE SMOOTH",
"604 66 OFFCURVE",
"601 72 QCURVE",
"596 84 OFFCURVE",
"580 94 QCURVE",
"457 165 LINE SMOOTH",
"445 172 OFFCURVE",
"399 201 QCURVE SMOOTH",
"370 219 LINE",
"374 226 OFFCURVE",
"378 236 OFFCURVE",
"380 239 QCURVE",
"613 495 LINE SMOOTH",
"624 507 OFFCURVE",
"636 538 OFFCURVE",
"636 553 QCURVE SMOOTH",
"636 582 OFFCURVE",
"617 600 QCURVE SMOOTH",
"593 622 OFFCURVE",
"554 644 OFFCURVE",
"529 641 QCURVE",
"489 573 OFFCURVE",
"390 454 OFFCURVE",
"307 364 QCURVE SMOOTH",
"276 331 LINE",
"263 355 LINE SMOOTH",
"252 374 OFFCURVE",
"248 383 QCURVE",
"243 399 OFFCURVE",
"235 433 QCURVE SMOOTH",
"227 463 LINE SMOOTH",
"215 506 OFFCURVE",
"153 563 OFFCURVE",
"115 566 QCURVE",
"104 522 OFFCURVE",
"104 496 QCURVE SMOOTH",
"104 459 OFFCURVE",
"120 424 QCURVE SMOOTH",
"172 314 OFFCURVE",
"202 253 QCURVE",
"11 88 LINE",
"29 35 LINE",
"33 35 OFFCURVE",
"49 35 OFFCURVE",
"55 37 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
35 19 10 4 4 0 74 3 1 0 73 0 0 0 118 53 51 1 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 662;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"139 304 OFFCURVE",
"320 228 QCURVE",
"306 185 OFFCURVE",
"301 172 QCURVE SMOOTH",
"235 10 OFFCURVE",
"203 -71 QCURVE",
"202 -75 OFFCURVE",
"211 -94 OFFCURVE",
"213 -101 QCURVE",
"265 -54 OFFCURVE",
"340 51 OFFCURVE",
"390 133 QCURVE SMOOTH",
"404 155 LINE SMOOTH",
"430 198 OFFCURVE",
"461 272 QCURVE SMOOTH",
"488 332 LINE",
"492 340 OFFCURVE",
"514 382 QCURVE SMOOTH",
"519 392 OFFCURVE",
"532 416 OFFCURVE",
"539 431 QCURVE SMOOTH",
"578 512 OFFCURVE",
"595 561 QCURVE SMOOTH",
"602 581 OFFCURVE",
"602 603 QCURVE SMOOTH",
"602 636 OFFCURVE",
"567 687 OFFCURVE",
"534 700 QCURVE",
"526 688 OFFCURVE",
"521 682 QCURVE",
"500 653 OFFCURVE",
"492 634 QCURVE SMOOTH",
"473 591 OFFCURVE",
"399 411 QCURVE SMOOTH",
"372 345 LINE SMOOTH",
"365 329 OFFCURVE",
"350 299 QCURVE",
"319 298 OFFCURVE",
"282 325 OFFCURVE",
"258 353 QCURVE SMOOTH",
"225 391 OFFCURVE",
"190 485 OFFCURVE",
"177 546 QCURVE SMOOTH",
"171 576 OFFCURVE",
"141 610 OFFCURVE",
"111 635 QCURVE",
"94 648 LINE",
"89 651 OFFCURVE",
"82 651 QCURVE",
"63 650 LINE",
"57 624 OFFCURVE",
"50 582 OFFCURVE",
"50 569 QCURVE SMOOTH",
"50 551 OFFCURVE",
"61 515 OFFCURVE",
"77 473 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
27 1 0 74 53 1 1 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 134 0 0 0 32 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 9 values pushed */
0 0 1 0 133 0 1 1 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
27 21 2 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 610;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"272 300 OFFCURVE",
"114 78 QCURVE SMOOTH",
"97 53 OFFCURVE",
"97 33 QCURVE SMOOTH",
"97 0 OFFCURVE",
"140 -19 QCURVE SMOOTH",
"161 -29 OFFCURVE",
"187 -29 QCURVE SMOOTH",
"202 -29 OFFCURVE",
"234 -23 QCURVE SMOOTH",
"267 -16 LINE SMOOTH",
"369 6 OFFCURVE",
"417 13 QCURVE SMOOTH",
"452 18 OFFCURVE",
"515 24 QCURVE SMOOTH",
"581 30 OFFCURVE",
"613 34 QCURVE SMOOTH",
"663 41 OFFCURVE",
"761 63 QCURVE",
"795 72 OFFCURVE",
"795 104 QCURVE SMOOTH",
"795 112 OFFCURVE",
"794 116 QCURVE",
"250 83 LINE",
"260 103 LINE SMOOTH",
"273 130 OFFCURVE",
"278 138 QCURVE",
"312 187 LINE SMOOTH",
"335 222 OFFCURVE",
"386 295 OFFCURVE",
"409 323 QCURVE SMOOTH",
"532 478 OFFCURVE",
"641 587 QCURVE SMOOTH",
"664 610 OFFCURVE",
"664 626 QCURVE SMOOTH",
"664 636 OFFCURVE",
"649 655 OFFCURVE",
"633 667 QCURVE SMOOTH",
"603 691 OFFCURVE",
"532 714 OFFCURVE",
"488 718 QCURVE SMOOTH",
"448 721 OFFCURVE",
"408 721 QCURVE SMOOTH",
"343 721 OFFCURVE",
"220 708 OFFCURVE",
"113 694 QCURVE SMOOTH",
"50 685 LINE",
"50 681 OFFCURVE",
"51 664 OFFCURVE",
"54 662 QCURVE",
"82 637 OFFCURVE",
"134 610 OFFCURVE",
"164 610 QCURVE",
"176 611 LINE SMOOTH",
"236 617 OFFCURVE",
"297 626 QCURVE SMOOTH",
"304 627 OFFCURVE",
"382 639 OFFCURVE",
"418 639 QCURVE SMOOTH",
"460 639 OFFCURVE",
"492 630 QCURVE",
"458 577 LINE SMOOTH",
"396 481 OFFCURVE",
"349 412 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 10 values pushed */
2 1 1 0 42 1 3 1 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 12 values pushed */
2 1 1 0 42 40 39 3 4 1 2 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 1 0 3 0 1 3 128 0 3 4 0 3 4 126 0 0 0 2 97 0 2 2 36 77 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 1 0 3 0 1 3 128 0 3 4 0 3 4 126 0 2 0 0 1 2 0 105 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 0 4 0 1 4 128 0 2 0 0 1 2 0 105 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 1 0 4 0 1 4 128 0 4 4 132 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
56 54 40 39 40 21 35 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 806;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
lastChange = "2019-07-27 08:28:11 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"241 -71 OFFCURVE",
"348 -55 QCURVE SMOOTH",
"368 -52 OFFCURVE",
"380 -44 QCURVE SMOOTH",
"386 -40 OFFCURVE",
"397 -26 OFFCURVE",
"396 -21 QCURVE",
"395 -14 OFFCURVE",
"382 0 OFFCURVE",
"375 3 QCURVE SMOOTH",
"358 9 LINE",
"324 22 OFFCURVE",
"305 22 QCURVE SMOOTH",
"285 21 OFFCURVE",
"265 9 QCURVE SMOOTH",
"260 6 OFFCURVE",
"242 3 OFFCURVE",
"238 2 QCURVE",
"233 1 OFFCURVE",
"225 1 QCURVE SMOOTH",
"195 1 OFFCURVE",
"195 32 QCURVE SMOOTH",
"195 38 OFFCURVE",
"195 41 QCURVE",
"203 123 OFFCURVE",
"205 166 QCURVE SMOOTH",
"215 377 OFFCURVE",
"219 482 QCURVE SMOOTH",
"220 511 OFFCURVE",
"220 526 QCURVE SMOOTH",
"220 544 OFFCURVE",
"217 559 QCURVE SMOOTH",
"215 571 OFFCURVE",
"215 579 QCURVE SMOOTH",
"215 619 OFFCURVE",
"260 634 QCURVE",
"281 639 OFFCURVE",
"323 649 QCURVE",
"332 651 OFFCURVE",
"372 660 OFFCURVE",
"387 665 QCURVE",
"397 667 OFFCURVE",
"416 691 OFFCURVE",
"422 696 QCURVE",
"408 704 LINE",
"388 720 OFFCURVE",
"377 719 QCURVE SMOOTH",
"311 713 OFFCURVE",
"229 688 OFFCURVE",
"189 675 QCURVE SMOOTH",
"119 652 OFFCURVE",
"119 577 QCURVE SMOOTH",
"119 563 OFFCURVE",
"122 546 QCURVE",
"122 542 OFFCURVE",
"122 534 QCURVE SMOOTH",
"122 522 LINE",
"111 333 OFFCURVE",
"95 86 QCURVE SMOOTH",
"93 56 OFFCURVE",
"89 1 QCURVE",
"89 -44 OFFCURVE",
"116 -80 OFFCURVE",
"154 -80 QCURVE SMOOTH",
"170 -79 OFFCURVE",
"190 -77 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
58 1 0 1 1 76 43 21 6 3 2 74 0 2 1 2 133 0 1 0 1 133 0 0 0 118 53 51 46 44 32 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"326 -34 OFFCURVE",
"330 -34 QCURVE SMOOTH",
"345 -34 OFFCURVE",
"359 17 OFFCURVE",
"359 51 QCURVE SMOOTH",
"359 87 OFFCURVE",
"354 102 QCURVE",
"340 138 OFFCURVE",
"263 344 OFFCURVE",
"243 403 QCURVE SMOOTH",
"230 439 OFFCURVE",
"215 493 QCURVE SMOOTH",
"201 538 LINE SMOOTH",
"174 623 OFFCURVE",
"152 690 QCURVE SMOOTH",
"139 726 OFFCURVE",
"108 722 QCURVE SMOOTH",
"87 720 OFFCURVE",
"50 672 OFFCURVE",
"50 650 QCURVE SMOOTH",
"50 644 OFFCURVE",
"51 641 QCURVE",
"115 353 LINE SMOOTH",
"120 331 OFFCURVE",
"199 148 OFFCURVE",
"289 -15 OFFCURVE",
"318 -30 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
6 1 0 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
0 0 0 31 0 78 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 4 values pushed */
0 0 0 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
24 23 1 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 409;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
lastChange = "2019-07-27 08:28:30 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"308 703 OFFCURVE",
"261 703 QCURVE SMOOTH",
"227 703 OFFCURVE",
"169 683 OFFCURVE",
"149 664 QCURVE",
"143 658 OFFCURVE",
"134 640 OFFCURVE",
"136 632 QCURVE",
"138 626 OFFCURVE",
"156 614 OFFCURVE",
"164 613 QCURVE",
"181 610 OFFCURVE",
"195 610 QCURVE SMOOTH",
"213 610 OFFCURVE",
"226 613 QCURVE",
"235 616 OFFCURVE",
"247 616 QCURVE SMOOTH",
"266 616 OFFCURVE",
"285 595 OFFCURVE",
"283 576 QCURVE SMOOTH",
"276 510 LINE SMOOTH",
"265 405 OFFCURVE",
"262 355 QCURVE SMOOTH",
"254 233 OFFCURVE",
"254 50 QCURVE SMOOTH",
"254 31 OFFCURVE",
"223 3 OFFCURVE",
"202 -2 QCURVE",
"197 -4 OFFCURVE",
"154 -12 QCURVE",
"135 -15 OFFCURVE",
"114 -19 QCURVE SMOOTH",
"108 -20 OFFCURVE",
"91 -33 OFFCURVE",
"86 -35 QCURVE",
"89 -40 OFFCURVE",
"98 -57 OFFCURVE",
"104 -61 QCURVE",
"109 -63 OFFCURVE",
"130 -72 OFFCURVE",
"151 -80 OFFCURVE",
"162 -79 QCURVE SMOOTH",
"220 -74 OFFCURVE",
"290 -52 QCURVE SMOOTH",
"322 -42 OFFCURVE",
"347 -26 OFFCURVE",
"354 4 OFFCURVE",
"355 40 QCURVE SMOOTH",
"361 274 OFFCURVE",
"370 485 QCURVE SMOOTH",
"375 532 OFFCURVE",
"386 611 QCURVE SMOOTH",
"393 661 LINE",
"373 671 LINE SMOOTH",
"352 681 OFFCURVE",
"348 683 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
2 1 0 2 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 17 values pushed */
0 2 0 0 2 89 0 2 2 0 97 1 1 0 2 0 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 1 0 1 134 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
54 52 43 41 39 37 3 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = underscore;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"590 -89 OFFCURVE",
"598 -73 QCURVE",
"600 -70 OFFCURVE",
"600 -64 QCURVE SMOOTH",
"600 -53 OFFCURVE",
"584 -29 OFFCURVE",
"574 -25 QCURVE SMOOTH",
"546 -13 OFFCURVE",
"519 -12 QCURVE",
"480 -12 LINE",
"401 -12 LINE SMOOTH",
"369 -12 OFFCURVE",
"352 -11 QCURVE SMOOTH",
"312 -9 OFFCURVE",
"253 -3 OFFCURVE",
"234 -2 QCURVE",
"172 4 OFFCURVE",
"145 6 QCURVE",
"138 7 OFFCURVE",
"117 9 OFFCURVE",
"104 9 QCURVE",
"84 8 OFFCURVE",
"56 -11 OFFCURVE",
"52 -25 QCURVE SMOOTH",
"50 -33 OFFCURVE",
"50 -38 QCURVE SMOOTH",
"50 -52 OFFCURVE",
"68 -78 OFFCURVE",
"84 -86 QCURVE",
"112 -103 OFFCURVE",
"149 -103 QCURVE SMOOTH",
"212 -102 LINE SMOOTH",
"263 -102 OFFCURVE",
"289 -103 QCURVE SMOOTH",
"530 -109 LINE",
"536 -108 OFFCURVE",
"557 -107 OFFCURVE",
"563 -103 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 7 values pushed */
33 11 2 0 2 1 76 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 7 values pushed */
33 11 2 0 3 1 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
0 1 2 2 1 112 3 1 2 0 0 2 89 3 1 2 2 0 96 0 0 2 0 80 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 1 2 3 1 112 0 2 3 3 2 112 0 3 0 0 3 87 0 3 3 0 96 0 0 3 0 80 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
97 20 40 112 4 8 26 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 651;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = grave;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"235 671 OFFCURVE",
"115 776 QCURVE",
"105 786 OFFCURVE",
"69 799 OFFCURVE",
"63 795 QCURVE",
"47 783 OFFCURVE",
"52 791 OFFCURVE",
"50 775 QCURVE",
"49 758 OFFCURVE",
"64 717 OFFCURVE",
"77 701 QCURVE SMOOTH",
"109 662 OFFCURVE",
"202 560 QCURVE SMOOTH",
"235 524 LINE SMOOTH",
"257 501 OFFCURVE",
"285 501 QCURVE",
"306 502 OFFCURVE",
"324 513 QCURVE SMOOTH",
"332 518 OFFCURVE",
"317 499 OFFCURVE",
"324 510 QCURVE",
"336 531 LINE",
"325 559 LINE",
"319 577 OFFCURVE",
"310 596 OFFCURVE",
"303 603 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 13 values pushed */
17 3 2 0 74 0 0 0 118 40 1 8 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 416;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
lastChange = "2019-06-19 01:46:10 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"362 48 OFFCURVE",
"371 37 QCURVE",
"380 27 OFFCURVE",
"395 16 OFFCURVE",
"404 16 QCURVE SMOOTH",
"411 16 OFFCURVE",
"419 21 QCURVE",
"428 26 OFFCURVE",
"428 58 QCURVE SMOOTH",
"428 174 OFFCURVE",
"420 249 QCURVE SMOOTH",
"413 316 OFFCURVE",
"390 354 QCURVE SMOOTH",
"367 392 OFFCURVE",
"268 443 OFFCURVE",
"210 443 QCURVE SMOOTH",
"164 442 OFFCURVE",
"121 426 QCURVE SMOOTH",
"100 418 OFFCURVE",
"100 388 QCURVE SMOOTH",
"100 371 OFFCURVE",
"104 369 QCURVE",
"119 358 OFFCURVE",
"153 358 QCURVE SMOOTH",
"164 358 OFFCURVE",
"192 360 QCURVE SMOOTH",
"220 362 OFFCURVE",
"234 362 QCURVE SMOOTH",
"272 362 OFFCURVE",
"297 339 OFFCURVE",
"297 325 QCURVE SMOOTH",
"297 318 OFFCURVE",
"252 310 OFFCURVE",
"240 310 QCURVE",
"185 305 OFFCURVE",
"122 267 OFFCURVE",
"84 221 QCURVE SMOOTH",
"45 173 OFFCURVE",
"44 125 QCURVE SMOOTH",
"43 93 OFFCURVE",
"63 65 QCURVE SMOOTH",
"82 39 OFFCURVE",
"173 2 OFFCURVE",
"215 2 QCURVE SMOOTH",
"224 2 OFFCURVE",
"238 4 QCURVE",
"270 10 OFFCURVE",
"282 17 QCURVE SMOOTH",
"295 25 OFFCURVE",
"307 37 QCURVE",
"315 46 OFFCURVE",
"328 55 OFFCURVE",
"337 55 QCURVE SMOOTH",
"346 55 OFFCURVE",
"355 51 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"192 61 OFFCURVE",
"184 61 QCURVE SMOOTH",
"174 61 OFFCURVE",
"167 66 QCURVE SMOOTH",
"154 75 OFFCURVE",
"152 102 QCURVE",
"152 122 OFFCURVE",
"173 169 OFFCURVE",
"192 192 QCURVE SMOOTH",
"211 214 OFFCURVE",
"255 240 OFFCURVE",
"274 241 QCURVE",
"283 242 OFFCURVE",
"305 228 OFFCURVE",
"310 220 QCURVE",
"315 210 OFFCURVE",
"320 184 OFFCURVE",
"321 181 QCURVE",
"322 172 OFFCURVE",
"319 143 OFFCURVE",
"317 140 QCURVE SMOOTH",
"315 137 OFFCURVE",
"299 115 OFFCURVE",
"289 108 QCURVE SMOOTH",
"244 77 OFFCURVE",
"197 63 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
34 1 3 5 74 1 8 7 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 47 values pushed */
0 2 3 7 3 2 7 128 0 7 8 3 7 112 0 0 8 6 8 0 6 128 0 5 4 1 3 2 5 3 105 0 6 6 34 77 0 8 8 1 97 0 1 1 40 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 48 values pushed */
0 2 3 7 3 2 7 128 0 7 8 3 7 8 126 0 0 8 6 8 0 6 128 0 5 4 1 3 2 5 3 105 0 6 6 34 77 0 8 8 1 97 0 1 1 40 1 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
78 77 69 68 41 38 34 36 25 39 32 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 484;
}
);
leftKerningGroup = a;
note = a;
rightKerningGroup = a;
unicode = 0061;
},
{
glyphname = b;
lastChange = "2019-06-19 01:35:21 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"162 462 LINE SMOOTH",
"171 550 OFFCURVE",
"171 609 QCURVE SMOOTH",
"171 622 OFFCURVE",
"149 648 OFFCURVE",
"119 664 OFFCURVE",
"107 661 QCURVE SMOOTH",
"79 655 OFFCURVE",
"50 636 OFFCURVE",
"50 611 QCURVE SMOOTH",
"50 310 OFFCURVE",
"51 159 QCURVE SMOOTH",
"51 129 OFFCURVE",
"101 80 OFFCURVE",
"131 80 QCURVE SMOOTH",
"168 79 OFFCURVE",
"172 115 QCURVE SMOOTH",
"184 208 OFFCURVE",
"250 280 QCURVE",
"259 291 OFFCURVE",
"289 310 OFFCURVE",
"295 307 QCURVE",
"316 295 OFFCURVE",
"332 258 QCURVE SMOOTH",
"335 251 OFFCURVE",
"335 241 QCURVE SMOOTH",
"335 231 OFFCURVE",
"333 217 OFFCURVE",
"332 213 QCURVE",
"328 184 OFFCURVE",
"270 106 OFFCURVE",
"193 47 OFFCURVE",
"162 44 QCURVE SMOOTH",
"153 43 OFFCURVE",
"130 32 OFFCURVE",
"123 29 QCURVE",
"126 17 OFFCURVE",
"126 7 QCURVE",
"170 -1 OFFCURVE",
"189 -1 QCURVE SMOOTH",
"201 -1 OFFCURVE",
"207 0 QCURVE SMOOTH",
"327 18 OFFCURVE",
"393 107 QCURVE SMOOTH",
"439 168 OFFCURVE",
"439 223 QCURVE SMOOTH",
"439 293 OFFCURVE",
"368 345 QCURVE SMOOTH",
"321 380 OFFCURVE",
"279 380 QCURVE SMOOTH",
"239 380 OFFCURVE",
"195 349 QCURVE",
"186 342 OFFCURVE",
"177 332 QCURVE SMOOTH",
"161 314 OFFCURVE",
"149 309 QCURVE",
"150 332 OFFCURVE",
"154 370 QCURVE",
"159 403 OFFCURVE",
"159 422 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
3 1 2 0 21 1 1 2 2 76 59 1 0 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
24 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 2 0 1 0 2 1 128 0 0 0 33 77 0 1 1 40 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
41 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
0 0 2 0 133 0 2 1 2 133 0 1 1 40 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 14 values pushed */
0 0 2 0 133 0 2 1 2 133 0 1 1 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
45 43 55 40 3 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 489;
}
);
leftKerningGroup = b;
note = b;
rightKerningGroup = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2019-06-19 01:35:45 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"400 109 OFFCURVE",
"400 131 QCURVE SMOOTH",
"400 136 OFFCURVE",
"399 153 OFFCURVE",
"400 162 QCURVE",
"391 161 OFFCURVE",
"358 158 OFFCURVE",
"348 153 QCURVE",
"329 141 LINE SMOOTH",
"296 120 OFFCURVE",
"246 97 OFFCURVE",
"218 97 QCURVE SMOOTH",
"173 97 OFFCURVE",
"134 135 OFFCURVE",
"134 181 QCURVE SMOOTH",
"134 251 OFFCURVE",
"216 332 OFFCURVE",
"284 324 QCURVE SMOOTH",
"294 323 OFFCURVE",
"318 342 OFFCURVE",
"318 350 QCURVE SMOOTH",
"318 356 OFFCURVE",
"310 375 OFFCURVE",
"306 378 QCURVE SMOOTH",
"284 395 OFFCURVE",
"226 415 OFFCURVE",
"196 415 QCURVE SMOOTH",
"138 415 OFFCURVE",
"103 381 QCURVE SMOOTH",
"95 374 OFFCURVE",
"81 356 QCURVE SMOOTH",
"62 333 LINE",
"44 313 OFFCURVE",
"24 251 OFFCURVE",
"24 217 QCURVE SMOOTH",
"24 178 OFFCURVE",
"37 150 QCURVE SMOOTH",
"95 29 OFFCURVE",
"221 30 QCURVE",
"241 31 LINE",
"255 29 OFFCURVE",
"263 29 QCURVE SMOOTH",
"301 29 OFFCURVE",
"363 68 OFFCURVE",
"393 102 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
39 1 3 2 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 17 values pushed */
0 2 2 33 77 0 3 3 0 98 1 1 0 0 34 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 17 values pushed */
0 2 3 2 133 0 3 3 0 98 1 1 0 0 34 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 22 values pushed */
0 2 3 2 133 0 3 0 0 3 89 0 3 3 0 98 1 1 0 3 0 82 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
45 42 34 17 4 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 440;
}
);
leftKerningGroup = o;
note = c;
rightKerningGroup = o;
unicode = 0063;
},
{
glyphname = d;
lastChange = "2019-11-20 00:24:48 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"427 185 OFFCURVE",
"411 321 QCURVE SMOOTH",
"393 473 LINE SMOOTH",
"380 572 OFFCURVE",
"365 634 QCURVE SMOOTH",
"361 651 OFFCURVE",
"315 678 OFFCURVE",
"294 678 QCURVE SMOOTH",
"286 678 OFFCURVE",
"280 675 QCURVE SMOOTH",
"265 668 OFFCURVE",
"253 647 OFFCURVE",
"253 633 QCURVE SMOOTH",
"253 626 OFFCURVE",
"257 604 OFFCURVE",
"258 599 QCURVE SMOOTH",
"269 545 OFFCURVE",
"283 430 QCURVE SMOOTH",
"284 422 LINE",
"284 400 OFFCURVE",
"261 400 QCURVE SMOOTH",
"255 400 OFFCURVE",
"252 401 QCURVE",
"245 402 OFFCURVE",
"232 402 QCURVE SMOOTH",
"192 402 OFFCURVE",
"126 363 OFFCURVE",
"102 330 QCURVE SMOOTH",
"81 301 OFFCURVE",
"56 211 OFFCURVE",
"56 167 QCURVE SMOOTH",
"56 106 OFFCURVE",
"76 75 QCURVE SMOOTH",
"95 45 OFFCURVE",
"164 10 OFFCURVE",
"201 10 QCURVE SMOOTH",
"234 10 OFFCURVE",
"292 40 OFFCURVE",
"313 70 QCURVE SMOOTH",
"322 83 OFFCURVE",
"330 83 QCURVE SMOOTH",
"338 83 OFFCURVE",
"350 69 QCURVE",
"366 48 OFFCURVE",
"392 29 OFFCURVE",
"407 29 QCURVE SMOOTH",
"427 29 OFFCURVE",
"461 48 QCURVE",
"458 56 OFFCURVE",
"453 68 OFFCURVE",
"451 73 QCURVE",
"438 100 OFFCURVE",
"436 117 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"178 267 OFFCURVE",
"204 307 OFFCURVE",
"227 334 QCURVE",
"232 341 OFFCURVE",
"270 354 OFFCURVE",
"278 352 QCURVE",
"283 351 OFFCURVE",
"292 328 OFFCURVE",
"291 319 QCURVE",
"289 256 OFFCURVE",
"274 174 OFFCURVE",
"251 141 QCURVE",
"240 122 LINE SMOOTH",
"227 100 OFFCURVE",
"208 77 OFFCURVE",
"192 68 QCURVE",
"152 95 OFFCURVE",
"152 152 QCURVE SMOOTH",
"151 193 OFFCURVE",
"169 242 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
33 1 3 5 63 1 1 3 56 4 2 0 1 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 1 3 0 3 1 0 128 0 5 5 30 77 4 1 3 3 33 77 0 0 0 34 77 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 5 3 5 133 0 1 3 0 3 1 0 128 4 1 3 3 33 77 0 0 0 34 77 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 32 values pushed */
0 5 3 5 133 0 1 3 0 3 1 0 128 0 0 2 3 0 2 126 4 1 3 3 33 77 0 2 2 40 2 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
43 34 41 35 35 37 6 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 505;
}
);
leftKerningGroup = d;
note = d;
unicode = 0064;
},
{
glyphname = e;
lastChange = "2019-11-20 00:09:25 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"241 161 OFFCURVE",
"290 188 OFFCURVE",
"342 222 OFFCURVE",
"361 244 QCURVE SMOOTH",
"400 291 OFFCURVE",
"400 324 QCURVE SMOOTH",
"400 376 OFFCURVE",
"304 406 QCURVE SMOOTH",
"273 416 OFFCURVE",
"240 416 QCURVE SMOOTH",
"194 416 OFFCURVE",
"140 393 QCURVE SMOOTH",
"81 367 OFFCURVE",
"28 309 OFFCURVE",
"28 262 QCURVE SMOOTH",
"28 232 OFFCURVE",
"36 201 QCURVE SMOOTH",
"48 148 OFFCURVE",
"123 61 OFFCURVE",
"229 11 OFFCURVE",
"286 11 QCURVE SMOOTH",
"341 11 OFFCURVE",
"424 41 OFFCURVE",
"450 81 QCURVE",
"458 92 OFFCURVE",
"458 112 QCURVE SMOOTH",
"458 131 OFFCURVE",
"450 144 QCURVE",
"442 155 OFFCURVE",
"431 155 QCURVE SMOOTH",
"414 155 OFFCURVE",
"395 136 QCURVE SMOOTH",
"368 110 OFFCURVE",
"331 91 QCURVE",
"306 77 OFFCURVE",
"274 77 QCURVE SMOOTH",
"237 77 OFFCURVE",
"177 118 OFFCURVE",
"169 151 QCURVE",
"176 152 OFFCURVE",
"196 150 OFFCURVE",
"203 150 QCURVE SMOOTH",
"222 150 OFFCURVE",
"232 156 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"275 337 OFFCURVE",
"275 327 QCURVE SMOOTH",
"275 311 OFFCURVE",
"269 305 QCURVE",
"233 273 OFFCURVE",
"162 220 QCURVE",
"160 218 OFFCURVE",
"141 230 OFFCURVE",
"140 234 QCURVE",
"139 242 LINE",
"139 267 OFFCURVE",
"176 321 OFFCURVE",
"232 356 OFFCURVE",
"259 354 QCURVE",
"260 353 OFFCURVE",
"273 346 OFFCURVE",
"274 341 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
50 1 2 4 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 2 4 0 4 2 0 128 0 0 0 4 97 0 4 4 33 77 0 1 1 3 97 0 3 3 40 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 27 values pushed */
0 2 4 0 4 2 0 128 0 4 0 0 1 4 0 105 0 1 1 3 97 0 3 3 40 3 78 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
41 39 36 37 16 5 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 468;
}
);
leftKerningGroup = e;
note = e;
unicode = 0065;
},
{
glyphname = f;
lastChange = "2019-08-24 05:38:41 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"201 339 OFFCURVE",
"204 363 QCURVE",
"206 387 OFFCURVE",
"206 400 QCURVE",
"208 422 OFFCURVE",
"220 452 OFFCURVE",
"254 445 QCURVE SMOOTH",
"306 450 OFFCURVE",
"296 507 QCURVE SMOOTH",
"294 527 OFFCURVE",
"240 562 OFFCURVE",
"219 564 QCURVE SMOOTH",
"210 565 OFFCURVE",
"194 565 QCURVE SMOOTH",
"157 565 OFFCURVE",
"115 538 OFFCURVE",
"111 509 QCURVE SMOOTH",
"106 475 OFFCURVE",
"102 387 OFFCURVE",
"101 345 QCURVE SMOOTH",
"99 281 LINE SMOOTH",
"98 249 OFFCURVE",
"73 219 OFFCURVE",
"37 214 QCURVE SMOOTH",
"31 213 OFFCURVE",
"18 200 OFFCURVE",
"18 195 QCURVE SMOOTH",
"18 189 OFFCURVE",
"28 176 OFFCURVE",
"34 171 QCURVE",
"41 165 OFFCURVE",
"59 165 QCURVE SMOOTH",
"114 165 OFFCURVE",
"116 107 QCURVE",
"148 -59 LINE",
"170 -151 OFFCURVE",
"179 -197 QCURVE SMOOTH",
"184 -221 OFFCURVE",
"206 -243 OFFCURVE",
"228 -243 QCURVE SMOOTH",
"254 -243 OFFCURVE",
"272 -224 OFFCURVE",
"272 -205 QCURVE SMOOTH",
"272 -179 OFFCURVE",
"262 -131 QCURVE SMOOTH",
"244 -43 LINE SMOOTH",
"239 -16 OFFCURVE",
"223 65 OFFCURVE",
"211 119 QCURVE",
"209 133 OFFCURVE",
"209 138 QCURVE SMOOTH",
"209 173 OFFCURVE",
"245 180 QCURVE SMOOTH",
"268 184 OFFCURVE",
"277 185 QCURVE",
"323 193 OFFCURVE",
"346 198 QCURVE",
"353 199 OFFCURVE",
"369 212 OFFCURVE",
"373 215 QCURVE",
"371 218 OFFCURVE",
"361 235 OFFCURVE",
"356 237 QCURVE",
"343 262 OFFCURVE",
"286 262 QCURVE SMOOTH",
"263 262 LINE",
"235 256 OFFCURVE",
"222 256 QCURVE SMOOTH",
"208 256 OFFCURVE",
"201 278 OFFCURVE",
"201 314 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
68 4 2 0 3 38 19 2 1 0 2 76 0 2 3 2 133 0 3 0 3 133 0 0 1 0 133 0 1 1 118 66 64 59 57 31 29 33 4 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 370;
}
);
note = f;
rightKerningGroup = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2019-06-23 23:26:56 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"376 258 OFFCURVE",
"387 262 OFFCURVE",
"407 267 OFFCURVE",
"416 272 QCURVE",
"429 283 OFFCURVE",
"441 301 OFFCURVE",
"448 314 QCURVE",
"462 336 OFFCURVE",
"465 340 QCURVE",
"468 345 OFFCURVE",
"468 354 QCURVE SMOOTH",
"468 359 OFFCURVE",
"466 367 QCURVE",
"459 387 OFFCURVE",
"429 408 OFFCURVE",
"410 408 QCURVE SMOOTH",
"384 408 OFFCURVE",
"361 389 QCURVE",
"345 374 OFFCURVE",
"314 360 OFFCURVE",
"295 360 QCURVE SMOOTH",
"281 360 OFFCURVE",
"266 364 QCURVE SMOOTH",
"245 370 LINE",
"242 371 OFFCURVE",
"206 381 OFFCURVE",
"189 381 QCURVE SMOOTH",
"166 381 OFFCURVE",
"145 370 QCURVE SMOOTH",
"56 324 OFFCURVE",
"38 214 QCURVE SMOOTH",
"35 196 OFFCURVE",
"35 176 QCURVE SMOOTH",
"35 104 OFFCURVE",
"89 72 QCURVE SMOOTH",
"104 63 OFFCURVE",
"145 35 OFFCURVE",
"143 29 QCURVE",
"131 -12 OFFCURVE",
"131 -22 QCURVE SMOOTH",
"131 -32 OFFCURVE",
"145 -46 OFFCURVE",
"163 -55 QCURVE SMOOTH",
"199 -73 OFFCURVE",
"250 -91 OFFCURVE",
"278 -96 QCURVE SMOOTH",
"304 -101 OFFCURVE",
"329 -125 OFFCURVE",
"329 -151 QCURVE SMOOTH",
"329 -169 OFFCURVE",
"312 -210 OFFCURVE",
"299 -226 QCURVE",
"261 -276 OFFCURVE",
"158 -283 QCURVE SMOOTH",
"130 -285 OFFCURVE",
"96 -249 OFFCURVE",
"82 -218 QCURVE",
"80 -211 OFFCURVE",
"75 -209 QCURVE",
"73 -208 OFFCURVE",
"62 -203 OFFCURVE",
"59 -203 QCURVE SMOOTH",
"56 -203 OFFCURVE",
"55 -204 QCURVE",
"51 -205 OFFCURVE",
"45 -216 OFFCURVE",
"44 -221 QCURVE",
"43 -243 OFFCURVE",
"68 -301 OFFCURVE",
"110 -348 OFFCURVE",
"131 -355 QCURVE SMOOTH",
"176 -370 OFFCURVE",
"219 -369 QCURVE SMOOTH",
"277 -368 OFFCURVE",
"379 -319 OFFCURVE",
"413 -269 QCURVE SMOOTH",
"445 -222 OFFCURVE",
"445 -174 QCURVE SMOOTH",
"445 -135 OFFCURVE",
"399 -70 OFFCURVE",
"354 -49 QCURVE SMOOTH",
"339 -42 OFFCURVE",
"307 -24 QCURVE SMOOTH",
"272 -5 LINE",
"318 39 OFFCURVE",
"359 106 OFFCURVE",
"373 180 OFFCURVE",
"376 252 QCURVE"
);
},
{
closed = 1;
nodes = (
"196 302 OFFCURVE",
"242 320 QCURVE",
"266 308 OFFCURVE",
"282 264 OFFCURVE",
"282 237 QCURVE SMOOTH",
"282 193 OFFCURVE",
"240 119 OFFCURVE",
"202 104 QCURVE",
"168 121 OFFCURVE",
"135 168 OFFCURVE",
"135 194 QCURVE SMOOTH",
"135 231 OFFCURVE",
"166 267 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
98 92 49 25 20 3 6 1 3 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
0 3 2 1 2 3 1 128 0 1 0 0 1 0 101 0 4 4 33 77 0 2 2 33 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 2 4 3 4 2 3 128 0 3 1 4 3 1 126 0 1 0 0 1 0 101 0 4 4 33 4 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
72 70 67 65 61 59 34 32 45 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 480;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
lastChange = "2019-11-20 00:24:14 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"158 554 LINE SMOOTH",
"158 581 OFFCURVE",
"141 616 OFFCURVE",
"121 629 QCURVE SMOOTH",
"110 636 OFFCURVE",
"94 636 QCURVE SMOOTH",
"75 636 OFFCURVE",
"45 616 OFFCURVE",
"45 602 QCURVE SMOOTH",
"45 567 LINE",
"45 500 LINE SMOOTH",
"45 419 OFFCURVE",
"56 357 QCURVE SMOOTH",
"79 233 OFFCURVE",
"79 44 QCURVE SMOOTH",
"79 25 OFFCURVE",
"98 5 OFFCURVE",
"132 -4 OFFCURVE",
"138 -6 QCURVE",
"148 -8 OFFCURVE",
"151 -8 QCURVE SMOOTH",
"179 -8 OFFCURVE",
"190 27 QCURVE SMOOTH",
"221 125 OFFCURVE",
"245 157 QCURVE",
"252 169 OFFCURVE",
"271 183 OFFCURVE",
"279 183 QCURVE SMOOTH",
"290 183 OFFCURVE",
"308 165 OFFCURVE",
"314 148 QCURVE",
"320 133 OFFCURVE",
"322 98 QCURVE SMOOTH",
"324 64 OFFCURVE",
"324 46 QCURVE",
"326 -6 LINE SMOOTH",
"327 -28 OFFCURVE",
"377 -73 OFFCURVE",
"400 -73 QCURVE SMOOTH",
"406 -73 OFFCURVE",
"409 -72 QCURVE",
"417 -70 OFFCURVE",
"433 -52 OFFCURVE",
"433 -45 QCURVE SMOOTH",
"434 33 LINE SMOOTH",
"435 97 OFFCURVE",
"422 135 QCURVE SMOOTH",
"404 186 OFFCURVE",
"321 257 OFFCURVE",
"262 257 QCURVE SMOOTH",
"227 257 OFFCURVE",
"185 242 QCURVE",
"168 312 OFFCURVE",
"159 437 OFFCURVE",
"158 534 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
2 1 2 0 10 1 1 3 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
0 1 3 1 134 0 0 0 2 3 0 2 105 0 4 4 32 77 0 3 3 31 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 26 values pushed */
0 3 2 1 2 3 1 128 0 1 1 132 0 0 0 2 3 0 2 105 0 4 4 32 4 78 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
46 22 25 26 35 5 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 479;
}
);
leftKerningGroup = b;
note = h;
rightKerningGroup = b;
unicode = 0068;
},
{
glyphname = i;
lastChange = "2019-12-27 09:54:01 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"154 474 OFFCURVE",
"144 499 OFFCURVE",
"138 500 QCURVE",
"97 519 OFFCURVE",
"55 519 QCURVE SMOOTH",
"46 519 OFFCURVE",
"37 510 OFFCURVE",
"37 504 QCURVE SMOOTH",
"37 488 OFFCURVE",
"45 482 QCURVE",
"61 468 OFFCURVE",
"86 455 QCURVE SMOOTH",
"114 440 LINE",
"125 446 OFFCURVE",
"150 460 OFFCURVE",
"152 466 QCURVE"
);
},
{
closed = 1;
nodes = (
"58 261 LINE",
"84 49 LINE",
"88 27 OFFCURVE",
"123 -1 OFFCURVE",
"148 -1 QCURVE SMOOTH",
"177 -1 OFFCURVE",
"198 28 OFFCURVE",
"195 55 QCURVE SMOOTH",
"181 226 LINE",
"181 231 OFFCURVE",
"179 265 OFFCURVE",
"176 279 QCURVE SMOOTH",
"171 307 OFFCURVE",
"128 342 OFFCURVE",
"100 342 QCURVE SMOOTH",
"76 342 OFFCURVE",
"59 326 OFFCURVE",
"59 312 QCURVE SMOOTH",
"59 305 OFFCURVE",
"57 293 OFFCURVE",
"54 280 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
7 2 2 1 0 16 1 2 1 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
41 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
0 0 1 0 133 0 1 1 2 97 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 0 1 0 133 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
40 42 41 3 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 230;
}
);
leftKerningGroup = i;
note = i;
rightKerningGroup = i;
unicode = 0069;
},
{
glyphname = j;
lastChange = "2019-06-19 01:37:54 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"239 500 OFFCURVE",
"231 521 OFFCURVE",
"225 526 QCURVE",
"195 548 OFFCURVE",
"175 548 QCURVE SMOOTH",
"169 548 OFFCURVE",
"155 540 OFFCURVE",
"139 526 OFFCURVE",
"133 522 QCURVE",
"138 517 OFFCURVE",
"153 496 OFFCURVE",
"160 491 QCURVE SMOOTH",
"168 485 OFFCURVE",
"198 475 OFFCURVE",
"206 472 QCURVE",
"211 475 OFFCURVE",
"233 487 OFFCURVE",
"236 494 QCURVE"
);
},
{
closed = 1;
nodes = (
"191 -348 OFFCURVE",
"171 -365 OFFCURVE",
"160 -365 QCURVE SMOOTH",
"141 -365 OFFCURVE",
"123 -340 QCURVE SMOOTH",
"106 -319 OFFCURVE",
"78 -263 QCURVE SMOOTH",
"69 -245 LINE",
"65 -238 OFFCURVE",
"56 -215 OFFCURVE",
"43 -199 OFFCURVE",
"31 -199 QCURVE SMOOTH",
"0 -199 OFFCURVE",
"0 -233 QCURVE SMOOTH",
"0 -240 OFFCURVE",
"2 -255 OFFCURVE",
"2 -262 QCURVE",
"8 -360 OFFCURVE",
"105 -410 QCURVE SMOOTH",
"153 -435 OFFCURVE",
"194 -435 QCURVE SMOOTH",
"232 -435 OFFCURVE",
"261 -414 QCURVE SMOOTH",
"314 -376 OFFCURVE",
"314 -308 QCURVE SMOOTH",
"314 -287 OFFCURVE",
"310 -270 QCURVE SMOOTH",
"305 -240 OFFCURVE",
"293 -180 QCURVE SMOOTH",
"291 -170 OFFCURVE",
"274 -77 OFFCURVE",
"262 -37 QCURVE SMOOTH",
"241 33 OFFCURVE",
"228 176 OFFCURVE",
"224 278 QCURVE SMOOTH",
"222 329 LINE SMOOTH",
"221 351 OFFCURVE",
"193 379 OFFCURVE",
"168 380 QCURVE",
"142 382 OFFCURVE",
"113 368 OFFCURVE",
"113 343 QCURVE SMOOTH",
"113 320 OFFCURVE",
"112 309 QCURVE",
"111 274 LINE SMOOTH",
"110 254 OFFCURVE",
"114 234 QCURVE SMOOTH",
"137 129 OFFCURVE",
"177 -79 QCURVE SMOOTH",
"183 -110 LINE SMOOTH",
"204 -219 OFFCURVE",
"215 -260 QCURVE",
"211 -280 LINE SMOOTH",
"205 -312 OFFCURVE",
"197 -332 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
8 1 0 1 28 1 4 2 55 1 5 4 3 76 0 1 0 1 133 0 0 2 0 133 0 2 4 2 133 0 4 5 4 133 0 5 3 3 5 89 0 5 5 3 97 0 3 5 3 81 70 68 61 59 52 50 34 33 40 33 6 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 370;
}
);
note = j;
rightKerningGroup = j;
unicode = 006A;
},
{
glyphname = k;
lastChange = "2019-03-18 09:30:12 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"167 509 OFFCURVE",
"171 544 QCURVE SMOOTH",
"181 646 LINE SMOOTH",
"183 676 OFFCURVE",
"149 704 OFFCURVE",
"112 704 QCURVE SMOOTH",
"58 704 OFFCURVE",
"57 651 QCURVE SMOOTH",
"47 325 LINE SMOOTH",
"44 205 OFFCURVE",
"44 84 QCURVE SMOOTH",
"44 42 OFFCURVE",
"55 -2 QCURVE SMOOTH",
"57 -9 OFFCURVE",
"76 -23 OFFCURVE",
"84 -24 QCURVE",
"108 -28 OFFCURVE",
"135 6 OFFCURVE",
"137 39 QCURVE SMOOTH",
"139 91 OFFCURVE",
"145 203 QCURVE",
"146 207 OFFCURVE",
"143 228 OFFCURVE",
"143 237 QCURVE SMOOTH",
"143 247 OFFCURVE",
"145 252 QCURVE",
"145 252 OFFCURVE",
"166 231 QCURVE SMOOTH",
"184 214 LINE SMOOTH",
"185 213 OFFCURVE",
"225 176 QCURVE SMOOTH",
"291 114 OFFCURVE",
"327 89 QCURVE SMOOTH",
"349 74 OFFCURVE",
"401 64 QCURVE",
"411 63 OFFCURVE",
"426 59 QCURVE",
"431 58 OFFCURVE",
"445 68 OFFCURVE",
"446 73 QCURVE",
"447 77 OFFCURVE",
"441 92 OFFCURVE",
"436 94 QCURVE",
"392 116 OFFCURVE",
"325 183 OFFCURVE",
"282 238 QCURVE SMOOTH",
"260 266 OFFCURVE",
"248 280 QCURVE SMOOTH",
"234 297 OFFCURVE",
"234 311 QCURVE SMOOTH",
"234 326 OFFCURVE",
"249 342 QCURVE",
"288 388 OFFCURVE",
"303 411 QCURVE",
"307 416 OFFCURVE",
"307 426 QCURVE SMOOTH",
"307 439 OFFCURVE",
"301 449 QCURVE SMOOTH",
"290 466 OFFCURVE",
"268 466 QCURVE SMOOTH",
"241 466 OFFCURVE",
"215 442 QCURVE",
"203 432 OFFCURVE",
"187 414 QCURVE",
"158 386 LINE",
"156 388 OFFCURVE",
"156 396 QCURVE SMOOTH",
"156 407 OFFCURVE",
"161 444 OFFCURVE",
"161 449 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
66 1 0 1 1 76 45 4 2 3 0 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 134 0 1 1 36 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 9 values pushed */
0 1 0 1 133 0 0 0 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
64 62 40 2 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 475;
}
);
note = k;
unicode = 006B;
},
{
glyphname = l;
lastChange = "2019-03-18 09:24:11 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"155 50 LINE",
"154 53 OFFCURVE",
"150 77 OFFCURVE",
"151 87 QCURVE",
"154 172 OFFCURVE",
"162 342 QCURVE SMOOTH",
"168 462 LINE SMOOTH",
"173 568 OFFCURVE",
"176 621 QCURVE SMOOTH",
"178 656 OFFCURVE",
"133 699 OFFCURVE",
"100 699 QCURVE SMOOTH",
"50 699 OFFCURVE",
"50 662 QCURVE SMOOTH",
"50 655 OFFCURVE",
"51 650 QCURVE",
"58 621 OFFCURVE",
"58 586 QCURVE SMOOTH",
"59 410 LINE SMOOTH",
"61 292 OFFCURVE",
"61 58 QCURVE SMOOTH",
"61 29 OFFCURVE",
"87 -2 QCURVE SMOOTH",
"99 -16 OFFCURVE",
"130 -28 OFFCURVE",
"173 -28 OFFCURVE",
"182 -28 QCURVE",
"207 -30 OFFCURVE",
"244 -14 OFFCURVE",
"248 6 QCURVE SMOOTH",
"249 11 OFFCURVE",
"249 21 QCURVE SMOOTH",
"249 44 OFFCURVE",
"235 84 QCURVE",
"229 99 OFFCURVE",
"217 99 QCURVE SMOOTH",
"205 99 OFFCURVE",
"194 84 QCURVE",
"185 70 OFFCURVE",
"165 46 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
25 1 0 2 39 35 2 1 0 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 0 2 1 2 0 1 128 0 2 2 36 77 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
0 2 0 2 133 0 0 1 0 133 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 14 values pushed */
0 2 0 2 133 0 0 1 0 133 0 1 1 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
44 40 34 3 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 270;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
lastChange = "2019-06-23 23:14:52 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"554 226 OFFCURVE",
"556 173 OFFCURVE",
"557 156 QCURVE SMOOTH",
"563 50 LINE",
"563 44 OFFCURVE",
"575 28 OFFCURVE",
"582 25 QCURVE",
"599 16 OFFCURVE",
"614 16 QCURVE SMOOTH",
"633 16 OFFCURVE",
"657 43 OFFCURVE",
"658 67 QCURVE SMOOTH",
"659 119 OFFCURVE",
"653 223 QCURVE SMOOTH",
"648 292 OFFCURVE",
"636 343 QCURVE SMOOTH",
"629 373 OFFCURVE",
"574 416 OFFCURVE",
"547 415 QCURVE SMOOTH",
"461 410 OFFCURVE",
"405 358 QCURVE",
"390 342 OFFCURVE",
"383 342 QCURVE SMOOTH",
"378 342 OFFCURVE",
"364 353 OFFCURVE",
"360 356 QCURVE SMOOTH",
"305 395 OFFCURVE",
"266 395 QCURVE SMOOTH",
"230 395 OFFCURVE",
"197 359 QCURVE SMOOTH",
"183 344 OFFCURVE",
"167 331 OFFCURVE",
"161 331 QCURVE SMOOTH",
"154 331 OFFCURVE",
"142 346 OFFCURVE",
"133 363 QCURVE",
"116 379 OFFCURVE",
"94 379 QCURVE SMOOTH",
"77 379 OFFCURVE",
"53 357 OFFCURVE",
"52 338 QCURVE SMOOTH",
"50 301 OFFCURVE",
"50 226 QCURVE SMOOTH",
"50 143 OFFCURVE",
"53 59 QCURVE",
"53 49 OFFCURVE",
"74 24 OFFCURVE",
"84 23 QCURVE",
"95 21 OFFCURVE",
"126 34 OFFCURVE",
"131 43 QCURVE",
"148 71 OFFCURVE",
"148 104 QCURVE",
"147 138 LINE",
"147 190 OFFCURVE",
"189 256 OFFCURVE",
"235 282 QCURVE",
"246 293 OFFCURVE",
"267 293 QCURVE SMOOTH",
"280 293 OFFCURVE",
"298 281 OFFCURVE",
"299 270 QCURVE SMOOTH",
"301 244 OFFCURVE",
"303 233 QCURVE",
"313 129 OFFCURVE",
"313 77 QCURVE SMOOTH",
"313 57 OFFCURVE",
"331 36 OFFCURVE",
"363 26 OFFCURVE",
"370 24 QCURVE",
"378 21 OFFCURVE",
"383 21 QCURVE SMOOTH",
"397 21 OFFCURVE",
"413 45 OFFCURVE",
"415 61 QCURVE SMOOTH",
"416 68 OFFCURVE",
"416 82 QCURVE",
"415 113 LINE SMOOTH",
"413 145 OFFCURVE",
"414 160 QCURVE",
"415 167 OFFCURVE",
"410 192 OFFCURVE",
"410 198 QCURVE SMOOTH",
"410 206 OFFCURVE",
"413 213 QCURVE",
"414 216 OFFCURVE",
"427 244 OFFCURVE",
"433 252 QCURVE SMOOTH",
"451 276 OFFCURVE",
"465 293 OFFCURVE",
"495 311 OFFCURVE",
"519 317 QCURVE",
"549 299 OFFCURVE",
"551 261 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
1 1 1 3 93 79 2 0 1 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
24 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
0 3 5 1 5 3 1 128 0 6 6 33 77 0 2 2 33 77 0 1 1 4 97 0 4 4 33 77 0 5 5 0 97 7 1 0 0 34 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 43 values pushed */
0 2 4 5 4 2 5 128 0 3 5 1 5 3 1 128 0 6 6 33 77 0 1 1 4 97 0 4 4 33 77 0 5 5 0 97 7 1 0 0 34 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 43 values pushed */
0 6 4 6 133 0 2 4 5 4 2 5 128 0 3 5 1 5 3 1 128 0 1 1 4 97 0 4 4 33 77 0 5 5 0 97 7 1 0 0 34 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 47 values pushed */
0 6 4 6 133 0 2 4 5 4 2 5 128 0 3 5 1 5 3 1 128 0 1 1 4 97 0 4 4 33 77 0 5 5 0 97 0 0 0 34 77 0 7 7 34 7 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 19 values pushed */
85 83 75 73 71 69 66 64 61 59 56 54 35 33 21 20 8 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 708;
}
);
leftKerningGroup = m;
note = m;
rightKerningGroup = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2019-06-19 01:46:01 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"210 379 LINE",
"205 403 OFFCURVE",
"167 429 OFFCURVE",
"138 429 QCURVE SMOOTH",
"115 429 OFFCURVE",
"93 414 OFFCURVE",
"87 392 OFFCURVE",
"84 369 QCURVE SMOOTH",
"81 339 OFFCURVE",
"74 293 OFFCURVE",
"72 277 QCURVE",
"66 242 OFFCURVE",
"59 185 QCURVE SMOOTH",
"49 106 OFFCURVE",
"50 48 QCURVE SMOOTH",
"51 3 OFFCURVE",
"114 -5 QCURVE SMOOTH",
"130 -7 OFFCURVE",
"147 6 OFFCURVE",
"153 36 OFFCURVE",
"154 40 QCURVE",
"169 129 OFFCURVE",
"182 193 QCURVE",
"182 195 OFFCURVE",
"188 225 OFFCURVE",
"195 230 QCURVE SMOOTH",
"217 246 OFFCURVE",
"240 256 OFFCURVE",
"274 265 QCURVE",
"296 270 OFFCURVE",
"312 270 QCURVE SMOOTH",
"329 270 OFFCURVE",
"350 255 OFFCURVE",
"353 237 QCURVE SMOOTH",
"359 193 OFFCURVE",
"361 133 QCURVE SMOOTH",
"362 112 LINE",
"362 88 OFFCURVE",
"365 66 OFFCURVE",
"384 49 OFFCURVE",
"407 49 QCURVE SMOOTH",
"429 49 OFFCURVE",
"461 78 OFFCURVE",
"464 102 QCURVE SMOOTH",
"468 138 OFFCURVE",
"468 157 QCURVE SMOOTH",
"468 231 OFFCURVE",
"437 292 QCURVE SMOOTH",
"399 364 OFFCURVE",
"324 364 QCURVE SMOOTH",
"276 364 OFFCURVE",
"207 349 QCURVE",
"206 352 OFFCURVE",
"210 371 OFFCURVE",
"210 377 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
0 3 0 3 133 0 1 2 1 134 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 51 49 40 39 35 4 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 517;
}
);
leftKerningGroup = n;
note = n;
rightKerningGroup = n;
unicode = 006E;
},
{
glyphname = o;
lastChange = "2019-06-23 23:13:32 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"318 97 OFFCURVE",
"356 156 QCURVE SMOOTH",
"389 208 OFFCURVE",
"389 253 QCURVE SMOOTH",
"389 299 OFFCURVE",
"357 331 QCURVE SMOOTH",
"297 390 OFFCURVE",
"209 390 QCURVE SMOOTH",
"181 390 OFFCURVE",
"152 384 QCURVE SMOOTH",
"107 375 OFFCURVE",
"53 345 OFFCURVE",
"44 308 QCURVE SMOOTH",
"40 291 OFFCURVE",
"34 255 QCURVE",
"29 231 LINE",
"25 177 OFFCURVE",
"73 93 OFFCURVE",
"154 48 OFFCURVE",
"198 48 QCURVE SMOOTH",
"238 48 OFFCURVE",
"269 67 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"187 345 OFFCURVE",
"206 345 QCURVE SMOOTH",
"214 345 OFFCURVE",
"217 344 QCURVE",
"248 335 OFFCURVE",
"283 285 OFFCURVE",
"283 254 QCURVE SMOOTH",
"283 218 OFFCURVE",
"260 192 QCURVE",
"229 154 OFFCURVE",
"215 142 QCURVE SMOOTH",
"206 134 OFFCURVE",
"183 122 OFFCURVE",
"177 125 QCURVE SMOOTH",
"163 132 OFFCURVE",
"152 163 QCURVE",
"149 173 OFFCURVE",
"148 202 OFFCURVE",
"148 209 QCURVE",
"141 212 LINE",
"151 242 LINE SMOOTH",
"169 300 OFFCURVE",
"185 339 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
25 24 2 0 2 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
0 0 2 0 134 0 2 2 1 97 0 1 1 33 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 0 2 0 134 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
43 42 42 32 3 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 417;
}
);
leftKerningGroup = o;
note = o;
rightKerningGroup = o;
unicode = 006F;
},
{
glyphname = p;
lastChange = "2019-06-19 01:18:36 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"327 122 OFFCURVE",
"372 194 OFFCURVE",
"379 236 QCURVE SMOOTH",
"382 253 OFFCURVE",
"382 270 QCURVE SMOOTH",
"382 316 OFFCURVE",
"354 343 QCURVE SMOOTH",
"293 402 OFFCURVE",
"245 402 QCURVE SMOOTH",
"202 402 OFFCURVE",
"166 357 QCURVE SMOOTH",
"146 332 OFFCURVE",
"116 309 OFFCURVE",
"91 307 QCURVE",
"75 305 OFFCURVE",
"56 287 OFFCURVE",
"56 271 QCURVE SMOOTH",
"56 267 OFFCURVE",
"58 255 QCURVE",
"67 214 OFFCURVE",
"65 154 QCURVE SMOOTH",
"58 -64 LINE SMOOTH",
"52 -206 OFFCURVE",
"50 -281 QCURVE SMOOTH",
"49 -303 OFFCURVE",
"92 -343 OFFCURVE",
"115 -343 QCURVE SMOOTH",
"118 -343 OFFCURVE",
"126 -341 QCURVE SMOOTH",
"137 -338 OFFCURVE",
"159 -317 OFFCURVE",
"160 -308 QCURVE SMOOTH",
"161 -301 OFFCURVE",
"161 -286 QCURVE SMOOTH",
"161 -272 OFFCURVE",
"159 -242 QCURVE SMOOTH",
"157 -212 OFFCURVE",
"157 -198 QCURVE SMOOTH",
"157 -124 OFFCURVE",
"162 -24 QCURVE SMOOTH",
"165 67 LINE",
"197 48 OFFCURVE",
"226 48 QCURVE SMOOTH",
"261 48 OFFCURVE",
"291 80 QCURVE"
);
},
{
closed = 1;
nodes = (
"205 267 OFFCURVE",
"227 303 OFFCURVE",
"230 307 QCURVE",
"238 320 OFFCURVE",
"256 320 QCURVE SMOOTH",
"270 320 OFFCURVE",
"277 307 QCURVE",
"282 295 OFFCURVE",
"282 283 QCURVE SMOOTH",
"282 255 OFFCURVE",
"253 182 OFFCURVE",
"209 124 OFFCURVE",
"189 118 QCURVE",
"177 124 LINE",
"176 129 OFFCURVE",
"176 140 QCURVE SMOOTH",
"176 187 OFFCURVE",
"198 247 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
49 3 2 0 3 1 76 0 0 3 1 3 0 1 128 0 3 3 2 97 0 2 2 33 77 0 1 1 35 1 78 58 56 36 34 46 32 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 432;
}
);
leftKerningGroup = a;
note = p;
rightKerningGroup = p;
unicode = 0070;
},
{
glyphname = q;
lastChange = "2019-06-19 01:32:34 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"179 244 LINE SMOOTH",
"196 260 OFFCURVE",
"236 294 OFFCURVE",
"252 302 QCURVE SMOOTH",
"298 327 OFFCURVE",
"329 327 QCURVE SMOOTH",
"358 327 OFFCURVE",
"381 311 QCURVE",
"409 295 OFFCURVE",
"433 295 QCURVE SMOOTH",
"441 295 OFFCURVE",
"458 302 OFFCURVE",
"464 307 QCURVE",
"468 311 OFFCURVE",
"468 322 QCURVE SMOOTH",
"468 333 OFFCURVE",
"465 334 QCURVE",
"459 339 OFFCURVE",
"430 362 OFFCURVE",
"398 383 OFFCURVE",
"381 388 QCURVE",
"349 399 OFFCURVE",
"309 399 QCURVE SMOOTH",
"277 399 OFFCURVE",
"244 393 QCURVE",
"208 388 OFFCURVE",
"125 341 OFFCURVE",
"61 268 OFFCURVE",
"52 228 QCURVE SMOOTH",
"50 218 OFFCURVE",
"50 211 QCURVE SMOOTH",
"50 174 OFFCURVE",
"97 96 OFFCURVE",
"128 87 QCURVE",
"179 70 OFFCURVE",
"220 70 QCURVE SMOOTH",
"262 70 OFFCURVE",
"290 89 QCURVE",
"295 92 OFFCURVE",
"299 49 QCURVE SMOOTH",
"301 18 OFFCURVE",
"278 -16 OFFCURVE",
"246 -23 QCURVE SMOOTH",
"139 -50 OFFCURVE",
"83 -111 QCURVE",
"99 -133 OFFCURVE",
"147 -159 OFFCURVE",
"170 -159 QCURVE SMOOTH",
"190 -159 OFFCURVE",
"203 -149 QCURVE SMOOTH",
"214 -141 OFFCURVE",
"233 -131 QCURVE SMOOTH",
"247 -123 OFFCURVE",
"254 -118 QCURVE",
"269 -109 OFFCURVE",
"277 -109 QCURVE SMOOTH",
"294 -109 OFFCURVE",
"296 -143 QCURVE SMOOTH",
"297 -158 OFFCURVE",
"296 -180 OFFCURVE",
"296 -187 QCURVE SMOOTH",
"296 -203 OFFCURVE",
"298 -231 QCURVE SMOOTH",
"301 -274 OFFCURVE",
"350 -274 QCURVE",
"372 -273 OFFCURVE",
"389 -252 OFFCURVE",
"390 -230 QCURVE SMOOTH",
"394 -176 LINE",
"399 -134 OFFCURVE",
"399 -101 QCURVE SMOOTH",
"399 -76 OFFCURVE",
"423 -55 OFFCURVE",
"448 -53 QCURVE SMOOTH",
"473 -51 OFFCURVE",
"533 -43 OFFCURVE",
"545 -42 QCURVE SMOOTH",
"571 -39 LINE",
"571 -8 OFFCURVE",
"558 17 OFFCURVE",
"540 17 QCURVE SMOOTH",
"532 17 OFFCURVE",
"518 14 QCURVE SMOOTH",
"486 8 OFFCURVE",
"436 8 QCURVE SMOOTH",
"419 8 OFFCURVE",
"408 27 OFFCURVE",
"409 46 QCURVE SMOOTH",
"417 178 OFFCURVE",
"417 242 QCURVE SMOOTH",
"417 270 OFFCURVE",
"385 302 OFFCURVE",
"360 302 QCURVE SMOOTH",
"331 302 OFFCURVE",
"304 277 OFFCURVE",
"291 251 QCURVE SMOOTH",
"278 226 OFFCURVE",
"270 218 QCURVE",
"253 198 OFFCURVE",
"254 199 QCURVE",
"231 171 OFFCURVE",
"195 141 OFFCURVE",
"171 141 QCURVE SMOOTH",
"166 141 OFFCURVE",
"156 143 QCURVE",
"139 172 OFFCURVE",
"139 188 QCURVE SMOOTH",
"139 208 OFFCURVE",
"161 228 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 110 values pushed */
93 1 1 10 77 1 0 9 68 1 3 7 30 1 5 2 63 1 6 5 45 40 2 4 6 6 76 0 1 10 9 10 1 9 128 0 9 0 10 9 0 126 0 3 7 2 7 3 2 128 0 2 5 7 2 5 126 0 5 6 7 5 6 126 0 6 4 7 6 4 126 0 4 4 132 0 0 0 7 3 0 7 105 0 10 10 8 97 0 8 8 33 10 78 103 101 99 97 43 42 39 23 46 34 38 40 36 11 8 31 
CALL[ ]\011/* CallFunction */";
};
width = 573;
}
);
note = q;
rightKerningGroup = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2019-06-23 23:16:02 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"181 445 OFFCURVE",
"146 473 OFFCURVE",
"121 473 QCURVE SMOOTH",
"87 473 OFFCURVE",
"61 450 OFFCURVE",
"61 421 QCURVE SMOOTH",
"61 209 OFFCURVE",
"60 103 QCURVE SMOOTH",
"60 74 OFFCURVE",
"104 26 OFFCURVE",
"132 26 QCURVE SMOOTH",
"157 26 OFFCURVE",
"185 45 OFFCURVE",
"188 73 QCURVE SMOOTH",
"200 178 OFFCURVE",
"278 277 QCURVE SMOOTH",
"311 319 OFFCURVE",
"402 371 OFFCURVE",
"462 391 QCURVE",
"467 393 OFFCURVE",
"479 408 OFFCURVE",
"479 415 OFFCURVE",
"462 426 OFFCURVE",
"455 426 QCURVE SMOOTH",
"384 427 OFFCURVE",
"266 409 OFFCURVE",
"219 364 QCURVE SMOOTH",
"214 359 OFFCURVE",
"196 328 OFFCURVE",
"176 279 OFFCURVE",
"171 275 QCURVE",
"183 393 LINE SMOOTH",
"185 414 OFFCURVE",
"182 424 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
35 2 2 1 0 1 76 0 0 2 1 2 0 1 128 0 2 2 1 97 0 1 1 34 1 78 38 45 25 3 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 470;
}
);
leftKerningGroup = r;
note = r;
rightKerningGroup = r;
unicode = 0072;
},
{
glyphname = s;
lastChange = "2019-06-19 03:25:17 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"236 -22 OFFCURVE",
"277 78 QCURVE SMOOTH",
"289 107 OFFCURVE",
"289 133 QCURVE SMOOTH",
"289 181 OFFCURVE",
"253 226 QCURVE SMOOTH",
"205 284 OFFCURVE",
"178 329 QCURVE SMOOTH",
"166 350 OFFCURVE",
"166 370 QCURVE SMOOTH",
"166 396 OFFCURVE",
"203 433 OFFCURVE",
"235 436 QCURVE SMOOTH",
"249 437 OFFCURVE",
"276 437 QCURVE SMOOTH",
"304 437 OFFCURVE",
"318 439 QCURVE SMOOTH",
"327 440 OFFCURVE",
"352 453 OFFCURVE",
"359 456 QCURVE",
"355 463 OFFCURVE",
"340 488 OFFCURVE",
"333 493 QCURVE",
"300 513 OFFCURVE",
"257 513 QCURVE SMOOTH",
"231 513 OFFCURVE",
"179 503 QCURVE SMOOTH",
"147 497 LINE SMOOTH",
"107 490 OFFCURVE",
"66 435 OFFCURVE",
"66 399 QCURVE SMOOTH",
"66 360 OFFCURVE",
"86 328 QCURVE SMOOTH",
"103 300 OFFCURVE",
"124 269 QCURVE SMOOTH",
"156 222 OFFCURVE",
"178 183 QCURVE SMOOTH",
"188 164 OFFCURVE",
"188 144 QCURVE SMOOTH",
"188 114 OFFCURVE",
"167 85 QCURVE SMOOTH",
"137 45 OFFCURVE",
"92 45 QCURVE SMOOTH",
"86 45 OFFCURVE",
"72 47 QCURVE",
"63 49 OFFCURVE",
"36 50 OFFCURVE",
"28 50 QCURVE",
"51 -22 OFFCURVE",
"135 -22 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
29 1 3 2 1 76 0 2 0 3 0 2 3 105 1 1 0 0 4 97 5 1 4 4 31 4 78 0 0 0 49 0 48 35 33 25 23 34 33 6 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 340;
}
);
leftKerningGroup = s;
note = s;
rightKerningGroup = s;
unicode = 0073;
},
{
glyphname = t;
lastChange = "2019-06-19 03:23:48 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"41 366 OFFCURVE",
"64 362 QCURVE",
"78 359 OFFCURVE",
"90 354 OFFCURVE",
"91 348 QCURVE",
"96 281 OFFCURVE",
"96 216 QCURVE SMOOTH",
"96 175 OFFCURVE",
"95 156 QCURVE SMOOTH",
"92 108 OFFCURVE",
"135 34 OFFCURVE",
"209 -7 OFFCURVE",
"251 -7 QCURVE SMOOTH",
"282 -6 OFFCURVE",
"312 5 QCURVE SMOOTH",
"328 11 OFFCURVE",
"347 27 OFFCURVE",
"347 40 QCURVE SMOOTH",
"347 47 OFFCURVE",
"344 54 QCURVE",
"336 75 OFFCURVE",
"317 75 QCURVE SMOOTH",
"305 75 OFFCURVE",
"289 68 QCURVE",
"259 57 OFFCURVE",
"243 57 QCURVE SMOOTH",
"223 57 OFFCURVE",
"203 86 OFFCURVE",
"200 119 QCURVE SMOOTH",
"196 158 OFFCURVE",
"197 197 QCURVE SMOOTH",
"198 248 OFFCURVE",
"200 297 QCURVE",
"201 307 OFFCURVE",
"223 331 OFFCURVE",
"234 334 QCURVE SMOOTH",
"255 340 OFFCURVE",
"299 348 QCURVE",
"336 353 OFFCURVE",
"363 361 QCURVE",
"367 362 OFFCURVE",
"372 380 OFFCURVE",
"372 391 QCURVE SMOOTH",
"372 403 OFFCURVE",
"367 422 OFFCURVE",
"363 424 QCURVE",
"359 427 OFFCURVE",
"347 427 QCURVE SMOOTH",
"336 427 OFFCURVE",
"331 426 QCURVE",
"307 423 OFFCURVE",
"261 413 QCURVE",
"234 412 OFFCURVE",
"214 418 OFFCURVE",
"214 427 QCURVE SMOOTH",
"214 431 OFFCURVE",
"218 448 OFFCURVE",
"219 454 QCURVE",
"237 610 LINE SMOOTH",
"240 632 OFFCURVE",
"239 639 QCURVE SMOOTH",
"234 673 OFFCURVE",
"206 707 OFFCURVE",
"165 716 QCURVE",
"158 718 OFFCURVE",
"146 718 QCURVE SMOOTH",
"129 718 OFFCURVE",
"110 698 OFFCURVE",
"109 677 QCURVE SMOOTH",
"107 638 OFFCURVE",
"104 579 OFFCURVE",
"103 559 QCURVE SMOOTH",
"100 499 LINE",
"100 490 OFFCURVE",
"100 458 OFFCURVE",
"90 434 OFFCURVE",
"70 434 QCURVE SMOOTH",
"65 434 OFFCURVE",
"53 436 QCURVE",
"29 436 OFFCURVE",
"20 415 QCURVE",
"22 399 OFFCURVE",
"27 381 OFFCURVE",
"34 373 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
24 14 2 0 2 2 1 3 4 50 1 6 3 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
1 1 0 2 4 2 0 4 128 0 4 3 2 4 3 126 0 6 3 5 3 6 5 128 0 2 2 36 77 0 3 3 33 77 0 5 5 7 98 0 7 7 31 7 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
0 2 0 2 133 1 1 0 4 0 133 0 4 3 4 133 0 6 3 5 3 6 5 128 0 3 3 33 77 0 5 5 7 98 0 7 7 31 7 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
41 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 2 0 2 133 1 1 0 4 0 133 0 4 3 4 133 0 3 6 3 133 0 6 5 6 133 0 5 5 7 98 0 7 7 31 7 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 42 values pushed */
0 2 0 2 133 1 1 0 4 0 133 0 4 3 4 133 0 3 6 3 133 0 6 5 6 133 0 5 7 7 5 89 0 5 5 7 98 0 7 5 7 82 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
71 69 62 60 58 56 50 28 41 33 19 8 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 400;
}
);
note = t;
rightKerningGroup = t;
unicode = 0074;
},
{
glyphname = u;
lastChange = "2019-11-20 01:37:35 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"125 423 OFFCURVE",
"115 423 QCURVE SMOOTH",
"95 423 OFFCURVE",
"80 412 QCURVE SMOOTH",
"63 401 OFFCURVE",
"61 386 QCURVE",
"50 325 OFFCURVE",
"50 285 QCURVE SMOOTH",
"50 206 OFFCURVE",
"84 146 QCURVE SMOOTH",
"105 107 OFFCURVE",
"177 62 OFFCURVE",
"217 62 QCURVE SMOOTH",
"249 62 OFFCURVE",
"272 76 QCURVE",
"286 82 OFFCURVE",
"298 92 QCURVE",
"314 102 LINE",
"317 105 LINE",
"319 99 LINE",
"327 80 LINE",
"336 53 OFFCURVE",
"343 37 QCURVE",
"346 32 OFFCURVE",
"359 19 OFFCURVE",
"361 19 QCURVE",
"368 20 OFFCURVE",
"386 31 OFFCURVE",
"388 34 QCURVE SMOOTH",
"408 87 OFFCURVE",
"409 122 QCURVE SMOOTH",
"411 166 OFFCURVE",
"414 256 QCURVE SMOOTH",
"415 285 OFFCURVE",
"415 300 QCURVE",
"416 347 LINE SMOOTH",
"416 363 OFFCURVE",
"408 377 OFFCURVE",
"387 383 OFFCURVE",
"360 385 QCURVE SMOOTH",
"343 385 OFFCURVE",
"325 383 OFFCURVE",
"321 379 QCURVE",
"314 371 OFFCURVE",
"311 340 QCURVE SMOOTH",
"307 293 OFFCURVE",
"271 205 OFFCURVE",
"234 161 QCURVE SMOOTH",
"218 143 OFFCURVE",
"208 143 QCURVE SMOOTH",
"200 143 OFFCURVE",
"189 156 OFFCURVE",
"183 171 QCURVE SMOOTH",
"166 214 OFFCURVE",
"167 265 QCURVE SMOOTH",
"168 310 OFFCURVE",
"179 355 QCURVE",
"182 368 OFFCURVE",
"182 376 QCURVE SMOOTH",
"182 393 OFFCURVE",
"161 413 OFFCURVE",
"136 420 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
16 1 0 1 43 1 2 0 2 76 35 1 2 73 0 3 1 3 133 0 0 0 2 0 2 101 0 1 1 33 1 78 60 58 49 47 40 42 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 475;
}
);
leftKerningGroup = u;
note = u;
rightKerningGroup = u;
unicode = 0075;
},
{
glyphname = v;
lastChange = "2019-06-19 01:30:09 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"198 235 OFFCURVE",
"190 267 QCURVE SMOOTH",
"182 298 OFFCURVE",
"164 336 OFFCURVE",
"144 351 QCURVE",
"116 370 OFFCURVE",
"97 370 QCURVE SMOOTH",
"80 370 OFFCURVE",
"65 359 QCURVE SMOOTH",
"50 348 OFFCURVE",
"50 334 QCURVE SMOOTH",
"50 326 OFFCURVE",
"61 301 OFFCURVE",
"64 293 QCURVE",
"95 192 OFFCURVE",
"141 51 QCURVE SMOOTH",
"157 7 OFFCURVE",
"172 -11 QCURVE SMOOTH",
"197 -39 OFFCURVE",
"230 -39 QCURVE SMOOTH",
"252 -39 OFFCURVE",
"291 -12 OFFCURVE",
"300 13 QCURVE SMOOTH",
"343 124 LINE SMOOTH",
"402 276 OFFCURVE",
"417 315 QCURVE SMOOTH",
"425 337 OFFCURVE",
"425 359 QCURVE SMOOTH",
"425 368 OFFCURVE",
"424 372 QCURVE",
"422 384 OFFCURVE",
"409 400 OFFCURVE",
"399 400 QCURVE SMOOTH",
"388 400 OFFCURVE",
"380 392 QCURVE",
"340 358 OFFCURVE",
"311 314 QCURVE SMOOTH",
"295 290 OFFCURVE",
"266 230 QCURVE SMOOTH",
"248 193 OFFCURVE",
"227 155 QCURVE",
"225 159 OFFCURVE",
"214 193 QCURVE",
"209 211 OFFCURVE",
"205 219 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
16 1 1 2 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
24 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 2 0 1 0 2 1 128 0 0 0 33 77 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 18 values pushed */
0 2 0 1 0 2 1 128 0 1 1 132 0 0 0 33 0 78 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
43 43 42 3 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 475;
}
);
leftKerningGroup = A;
note = v;
rightKerningGroup = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2019-06-19 03:22:58 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"365 108 OFFCURVE",
"375 96 QCURVE",
"406 63 OFFCURVE",
"427 51 QCURVE",
"433 47 OFFCURVE",
"457 32 OFFCURVE",
"483 21 OFFCURVE",
"497 21 QCURVE SMOOTH",
"514 21 OFFCURVE",
"529 32 QCURVE SMOOTH",
"569 60 OFFCURVE",
"595 92 QCURVE SMOOTH",
"613 115 OFFCURVE",
"650 172 QCURVE SMOOTH",
"663 192 LINE",
"668 204 OFFCURVE",
"686 243 QCURVE SMOOTH",
"701 276 OFFCURVE",
"717 314 OFFCURVE",
"722 338 QCURVE",
"724 350 OFFCURVE",
"724 360 QCURVE SMOOTH",
"724 381 OFFCURVE",
"712 415 OFFCURVE",
"702 416 QCURVE SMOOTH",
"688 417 OFFCURVE",
"654 400 OFFCURVE",
"644 388 QCURVE SMOOTH",
"606 344 OFFCURVE",
"572 286 OFFCURVE",
"555 247 QCURVE SMOOTH",
"527 187 OFFCURVE",
"503 145 QCURVE",
"493 129 OFFCURVE",
"480 129 QCURVE SMOOTH",
"466 129 OFFCURVE",
"460 146 QCURVE SMOOTH",
"450 174 OFFCURVE",
"443 219 QCURVE SMOOTH",
"439 242 OFFCURVE",
"436 256 QCURVE SMOOTH",
"429 285 OFFCURVE",
"421 294 QCURVE",
"393 322 OFFCURVE",
"361 322 QCURVE SMOOTH",
"343 322 OFFCURVE",
"310 304 OFFCURVE",
"298 286 QCURVE SMOOTH",
"282 263 OFFCURVE",
"258 213 QCURVE SMOOTH",
"240 176 LINE SMOOTH",
"236 168 OFFCURVE",
"220 150 OFFCURVE",
"217 146 QCURVE",
"214 148 OFFCURVE",
"188 229 OFFCURVE",
"187 251 QCURVE SMOOTH",
"186 281 OFFCURVE",
"161 318 OFFCURVE",
"134 332 QCURVE SMOOTH",
"117 341 OFFCURVE",
"104 341 QCURVE SMOOTH",
"91 341 OFFCURVE",
"74 332 QCURVE",
"50 318 OFFCURVE",
"50 294 QCURVE SMOOTH",
"50 290 OFFCURVE",
"52 280 QCURVE SMOOTH",
"68 206 OFFCURVE",
"88 138 QCURVE SMOOTH",
"102 90 OFFCURVE",
"150 22 OFFCURVE",
"190 2 QCURVE SMOOTH",
"214 -9 OFFCURVE",
"231 -9 QCURVE SMOOTH",
"268 -9 OFFCURVE",
"290 36 QCURVE",
"304 62 OFFCURVE",
"337 139 QCURVE",
"357 115 OFFCURVE",
"359 113 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
1 1 3 2 1 76 0 1 2 1 133 0 2 3 2 133 0 3 3 4 97 0 4 4 34 77 0 0 0 31 0 78 73 71 40 47 43 36 5 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 724;
}
);
note = w;
unicode = 0077;
},
{
glyphname = x;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"284 71 LINE",
"286 69 OFFCURVE",
"307 40 OFFCURVE",
"320 31 QCURVE",
"330 25 OFFCURVE",
"358 21 OFFCURVE",
"361 21 QCURVE SMOOTH",
"370 21 OFFCURVE",
"384 19 QCURVE",
"384 27 OFFCURVE",
"386 41 OFFCURVE",
"386 49 QCURVE SMOOTH",
"386 60 OFFCURVE",
"383 67 QCURVE",
"373 93 OFFCURVE",
"346 136 QCURVE",
"322 168 LINE",
"307 186 OFFCURVE",
"307 193 QCURVE SMOOTH",
"307 199 OFFCURVE",
"325 216 OFFCURVE",
"340 228 QCURVE SMOOTH",
"345 232 OFFCURVE",
"354 240 OFFCURVE",
"358 243 QCURVE",
"396 274 OFFCURVE",
"421 303 QCURVE",
"424 307 OFFCURVE",
"429 321 OFFCURVE",
"429 327 QCURVE SMOOTH",
"429 331 OFFCURVE",
"427 335 QCURVE",
"412 352 OFFCURVE",
"384 370 OFFCURVE",
"368 370 QCURVE SMOOTH",
"354 370 OFFCURVE",
"339 362 QCURVE SMOOTH",
"324 354 OFFCURVE",
"294 335 OFFCURVE",
"283 324 QCURVE SMOOTH",
"269 309 OFFCURVE",
"250 291 OFFCURVE",
"246 291 QCURVE SMOOTH",
"243 291 OFFCURVE",
"237 299 OFFCURVE",
"229 320 OFFCURVE",
"226 328 QCURVE SMOOTH",
"219 347 OFFCURVE",
"178 372 OFFCURVE",
"150 383 QCURVE",
"138 387 OFFCURVE",
"109 374 QCURVE SMOOTH",
"95 368 OFFCURVE",
"88 366 QCURVE",
"90 360 OFFCURVE",
"98 332 OFFCURVE",
"104 323 QCURVE",
"126 293 LINE",
"146 269 OFFCURVE",
"151 260 QCURVE SMOOTH",
"158 248 OFFCURVE",
"173 231 OFFCURVE",
"173 229 QCURVE SMOOTH",
"173 226 OFFCURVE",
"156 209 OFFCURVE",
"148 201 QCURVE SMOOTH",
"105 155 OFFCURVE",
"59 93 QCURVE SMOOTH",
"50 80 OFFCURVE",
"50 63 QCURVE SMOOTH",
"50 58 OFFCURVE",
"52 52 QCURVE",
"61 30 OFFCURVE",
"99 7 OFFCURVE",
"122 7 QCURVE SMOOTH",
"140 7 OFFCURVE",
"173 22 OFFCURVE",
"184 37 QCURVE SMOOTH",
"217 83 LINE",
"241 116 LINE",
"247 111 OFFCURVE",
"263 98 OFFCURVE",
"267 93 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
70 52 12 2 4 2 1 1 76 0 1 1 2 97 0 2 2 34 77 0 0 0 40 0 78 75 74 48 46 38 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 479;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2019-04-02 08:55:06 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"34 -292 LINE",
"40 -296 OFFCURVE",
"64 -309 OFFCURVE",
"73 -313 QCURVE",
"116 -330 OFFCURVE",
"159 -330 QCURVE SMOOTH",
"213 -330 OFFCURVE",
"293 -273 OFFCURVE",
"308 -215 QCURVE SMOOTH",
"320 -169 OFFCURVE",
"331 -78 OFFCURVE",
"337 4 QCURVE SMOOTH",
"340 44 LINE SMOOTH",
"345 105 OFFCURVE",
"349 229 QCURVE SMOOTH",
"352 322 LINE SMOOTH",
"354 376 OFFCURVE",
"302 386 QCURVE",
"298 387 OFFCURVE",
"289 387 QCURVE SMOOTH",
"256 387 OFFCURVE",
"239 349 QCURVE SMOOTH",
"225 318 OFFCURVE",
"199 285 QCURVE",
"191 274 OFFCURVE",
"180 274 QCURVE SMOOTH",
"166 274 OFFCURVE",
"161 295 QCURVE SMOOTH",
"149 348 OFFCURVE",
"144 393 QCURVE SMOOTH",
"141 422 OFFCURVE",
"97 461 OFFCURVE",
"69 461 QCURVE SMOOTH",
"48 461 OFFCURVE",
"32 450 QCURVE",
"28 447 OFFCURVE",
"20 432 OFFCURVE",
"20 426 QCURVE SMOOTH",
"20 424 LINE",
"25 402 OFFCURVE",
"37 358 QCURVE SMOOTH",
"43 335 OFFCURVE",
"48 318 QCURVE",
"63 263 OFFCURVE",
"142 191 OFFCURVE",
"196 185 QCURVE SMOOTH",
"221 182 OFFCURVE",
"240 157 OFFCURVE",
"239 134 QCURVE SMOOTH",
"235 70 LINE SMOOTH",
"226 -72 OFFCURVE",
"217 -143 QCURVE SMOOTH",
"208 -214 OFFCURVE",
"141 -270 OFFCURVE",
"69 -272 QCURVE",
"61 -273 OFFCURVE",
"39 -280 OFFCURVE",
"32 -282 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
18 1 3 1 8 1 0 2 57 1 4 0 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 1 3 1 133 0 2 3 0 3 2 0 128 0 3 3 33 77 0 0 0 4 97 0 4 4 35 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 1 3 1 133 0 3 2 3 133 0 2 0 2 133 0 0 4 4 0 89 0 0 0 4 97 0 4 0 4 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
52 50 38 36 32 30 25 23 18 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 409;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"181 112 OFFCURVE",
"203 124 OFFCURVE",
"210 130 QCURVE SMOOTH",
"302 212 OFFCURVE",
"344 254 QCURVE",
"354 265 OFFCURVE",
"370 302 OFFCURVE",
"366 306 QCURVE",
"352 322 LINE",
"339 340 OFFCURVE",
"314 360 OFFCURVE",
"294 361 QCURVE SMOOTH",
"219 367 OFFCURVE",
"138 389 QCURVE SMOOTH",
"126 392 OFFCURVE",
"115 392 QCURVE SMOOTH",
"99 392 OFFCURVE",
"75 380 OFFCURVE",
"61 367 QCURVE",
"78 339 OFFCURVE",
"128 318 OFFCURVE",
"166 312 QCURVE SMOOTH",
"192 307 LINE",
"200 305 OFFCURVE",
"221 297 OFFCURVE",
"226 295 QCURVE",
"223 289 OFFCURVE",
"214 269 OFFCURVE",
"209 264 QCURVE SMOOTH",
"196 251 OFFCURVE",
"123 186 QCURVE SMOOTH",
"80 147 LINE SMOOTH",
"50 119 OFFCURVE",
"50 98 QCURVE SMOOTH",
"50 82 OFFCURVE",
"70 60 QCURVE SMOOTH",
"99 29 OFFCURVE",
"126 24 QCURVE SMOOTH",
"163 18 OFFCURVE",
"200 18 QCURVE SMOOTH",
"330 18 OFFCURVE",
"442 90 QCURVE",
"446 93 OFFCURVE",
"453 110 OFFCURVE",
"453 117 QCURVE SMOOTH",
"453 121 OFFCURVE",
"452 122 QCURVE",
"445 131 OFFCURVE",
"423 146 OFFCURVE",
"415 145 QCURVE",
"397 141 OFFCURVE",
"350 126 QCURVE",
"320 115 OFFCURVE",
"297 109 QCURVE SMOOTH",
"273 102 OFFCURVE",
"228 102 QCURVE SMOOTH",
"208 102 OFFCURVE",
"176 106 OFFCURVE",
"175 109 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
39 1 3 2 58 50 32 3 0 3 2 76 0 3 2 0 2 3 0 128 0 2 2 33 77 0 0 0 1 98 0 1 1 34 1 78 47 46 43 41 46 33 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 467;
}
);
note = z;
unicode = 007A;
},
{
glyphname = braceleft;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"115 7 LINE",
"113 -9 OFFCURVE",
"113 -16 QCURVE SMOOTH",
"113 -67 OFFCURVE",
"163 -128 QCURVE SMOOTH",
"170 -136 OFFCURVE",
"197 -149 OFFCURVE",
"235 -161 OFFCURVE",
"242 -163 QCURVE",
"248 -164 OFFCURVE",
"271 -151 OFFCURVE",
"276 -145 QCURVE",
"279 -140 OFFCURVE",
"264 -120 OFFCURVE",
"262 -117 QCURVE",
"259 -113 OFFCURVE",
"238 -95 OFFCURVE",
"236 -89 QCURVE",
"217 -40 OFFCURVE",
"217 5 QCURVE SMOOTH",
"217 29 OFFCURVE",
"224 62 QCURVE",
"240 121 OFFCURVE",
"240 173 QCURVE SMOOTH",
"240 249 OFFCURVE",
"200 312 QCURVE SMOOTH",
"197 317 OFFCURVE",
"197 324 QCURVE SMOOTH",
"197 337 OFFCURVE",
"204 346 QCURVE",
"236 382 OFFCURVE",
"236 439 QCURVE SMOOTH",
"236 459 OFFCURVE",
"232 499 QCURVE SMOOTH",
"228 543 OFFCURVE",
"214 608 QCURVE SMOOTH",
"209 631 OFFCURVE",
"201 679 QCURVE SMOOTH",
"199 693 OFFCURVE",
"199 699 QCURVE SMOOTH",
"199 739 OFFCURVE",
"253 791 OFFCURVE",
"303 801 QCURVE SMOOTH",
"314 803 OFFCURVE",
"327 815 OFFCURVE",
"327 823 QCURVE SMOOTH",
"327 832 OFFCURVE",
"317 841 QCURVE",
"288 865 OFFCURVE",
"256 865 QCURVE SMOOTH",
"250 865 OFFCURVE",
"236 863 QCURVE",
"99 838 OFFCURVE",
"99 714 QCURVE SMOOTH",
"99 674 OFFCURVE",
"114 608 QCURVE",
"124 552 OFFCURVE",
"127 529 QCURVE SMOOTH",
"130 507 OFFCURVE",
"130 484 QCURVE SMOOTH",
"130 443 OFFCURVE",
"101 377 OFFCURVE",
"64 350 QCURVE",
"50 339 OFFCURVE",
"50 330 QCURVE SMOOTH",
"50 319 OFFCURVE",
"66 309 QCURVE",
"73 305 OFFCURVE",
"105 289 OFFCURVE",
"109 281 QCURVE SMOOTH",
"136 222 OFFCURVE",
"136 181 QCURVE SMOOTH",
"136 162 OFFCURVE",
"132 147 QCURVE",
"122 101 OFFCURVE",
"104 7 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
47 35 29 3 1 0 1 76 72 1 1 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 133 0 1 1 34 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 9 values pushed */
0 0 1 0 133 0 1 1 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
75 74 26 24 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 377;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"155 -163 LINE",
"182 -163 OFFCURVE",
"236 -136 OFFCURVE",
"272 -93 OFFCURVE",
"273 -71 QCURVE SMOOTH",
"274 -41 OFFCURVE",
"270 17 QCURVE SMOOTH",
"267 60 LINE",
"265 90 LINE SMOOTH",
"264 105 OFFCURVE",
"260 198 OFFCURVE",
"261 236 QCURVE SMOOTH",
"262 284 OFFCURVE",
"315 325 QCURVE",
"325 332 OFFCURVE",
"339 358 OFFCURVE",
"338 369 QCURVE",
"337 376 OFFCURVE",
"312 394 OFFCURVE",
"299 397 QCURVE SMOOTH",
"265 406 OFFCURVE",
"240 431 OFFCURVE",
"243 459 QCURVE SMOOTH",
"249 513 OFFCURVE",
"253 535 QCURVE",
"255 553 OFFCURVE",
"267 645 OFFCURVE",
"270 683 QCURVE SMOOTH",
"272 709 OFFCURVE",
"272 723 QCURVE SMOOTH",
"272 775 OFFCURVE",
"248 812 QCURVE SMOOTH",
"202 880 OFFCURVE",
"91 902 QCURVE",
"83 904 OFFCURVE",
"57 896 OFFCURVE",
"50 894 QCURVE",
"52 889 OFFCURVE",
"57 868 OFFCURVE",
"63 862 QCURVE SMOOTH",
"64 861 OFFCURVE",
"91 845 QCURVE",
"106 838 OFFCURVE",
"117 830 QCURVE SMOOTH",
"136 817 OFFCURVE",
"156 800 OFFCURVE",
"157 791 QCURVE",
"162 757 OFFCURVE",
"162 709 QCURVE SMOOTH",
"162 672 OFFCURVE",
"160 654 QCURVE",
"159 636 OFFCURVE",
"149 591 OFFCURVE",
"148 584 QCURVE",
"136 530 OFFCURVE",
"136 503 QCURVE SMOOTH",
"136 425 OFFCURVE",
"202 362 QCURVE",
"154 295 OFFCURVE",
"154 230 QCURVE SMOOTH",
"154 215 OFFCURVE",
"155 207 QCURVE SMOOTH",
"163 146 OFFCURVE",
"169 22 QCURVE SMOOTH",
"171 -7 LINE SMOOTH",
"173 -43 OFFCURVE",
"146 -93 OFFCURVE",
"107 -108 QCURVE",
"101 -110 OFFCURVE",
"83 -124 OFFCURVE",
"75 -130 QCURVE",
"91 -138 OFFCURVE",
"98 -143 QCURVE",
"101 -144 OFFCURVE",
"113 -152 OFFCURVE",
"134 -161 OFFCURVE",
"144 -162 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
25 18 5 3 0 74 0 0 0 118 75 74 1 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 388;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"394 359 OFFCURVE",
"424 359 QCURVE SMOOTH",
"484 359 OFFCURVE",
"548 389 QCURVE SMOOTH",
"591 409 OFFCURVE",
"591 449 QCURVE",
"569 477 OFFCURVE",
"543 477 QCURVE SMOOTH",
"529 477 OFFCURVE",
"513 469 QCURVE",
"508 467 OFFCURVE",
"496 462 OFFCURVE",
"489 460 QCURVE",
"483 459 OFFCURVE",
"450 449 OFFCURVE",
"412 441 OFFCURVE",
"393 441 QCURVE SMOOTH",
"362 441 OFFCURVE",
"338 453 QCURVE",
"314 463 OFFCURVE",
"265 496 QCURVE SMOOTH",
"247 508 LINE SMOOTH",
"208 534 OFFCURVE",
"168 533 QCURVE SMOOTH",
"122 532 OFFCURVE",
"76 502 QCURVE SMOOTH",
"36 476 OFFCURVE",
"23 417 QCURVE",
"26 399 OFFCURVE",
"45 399 QCURVE SMOOTH",
"65 399 OFFCURVE",
"118 420 QCURVE SMOOTH",
"158 436 OFFCURVE",
"180 440 QCURVE",
"211 438 OFFCURVE",
"262 417 OFFCURVE",
"296 397 QCURVE SMOOTH",
"313 387 OFFCURVE",
"346 370 OFFCURVE",
"359 367 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 55 values pushed */
33 1 3 4 1 76 0 4 2 3 2 4 3 128 0 1 0 5 0 1 5 128 0 3 0 5 3 89 0 2 0 0 1 2 0 105 0 3 3 5 97 0 5 3 5 81 36 39 37 36 35 20 6 8 28 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 600;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = uni00A0;
lastChange = "2019-08-10 08:05:06 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
width = 250;
}
);
note = uni00A0;
unicode = 00A0;
},
{
glyphname = exclamdown;
lastChange = "2019-06-19 01:04:16 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"241 301 OFFCURVE",
"241 305 QCURVE SMOOTH",
"241 323 OFFCURVE",
"222 364 OFFCURVE",
"209 372 QCURVE",
"199 379 OFFCURVE",
"190 379 QCURVE SMOOTH",
"181 379 OFFCURVE",
"165 367 OFFCURVE",
"154 355 QCURVE",
"152 353 OFFCURVE",
"148 351 OFFCURVE",
"146 350 QCURVE",
"132 341 OFFCURVE",
"117 323 OFFCURVE",
"117 311 QCURVE SMOOTH",
"117 287 OFFCURVE",
"160 243 OFFCURVE",
"183 243 QCURVE SMOOTH",
"200 243 OFFCURVE",
"233 273 OFFCURVE",
"239 293 QCURVE"
);
},
{
closed = 1;
nodes = (
"162 -157 LINE SMOOTH",
"171 -110 OFFCURVE",
"179 -78 QCURVE SMOOTH",
"184 -57 OFFCURVE",
"197 8 OFFCURVE",
"209 51 QCURVE SMOOTH",
"214 69 OFFCURVE",
"214 83 QCURVE SMOOTH",
"214 121 OFFCURVE",
"163 176 OFFCURVE",
"119 182 QCURVE",
"75 -48 OFFCURVE",
"54 -164 QCURVE",
"50 -192 OFFCURVE",
"50 -228 QCURVE SMOOTH",
"50 -261 OFFCURVE",
"76 -288 OFFCURVE",
"114 -298 QCURVE",
"132 -276 OFFCURVE",
"148 -228 OFFCURVE",
"156 -187 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
19 1 0 1 1 76 31 24 2 0 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
24 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 0 1 97 0 1 1 33 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
42 33 2 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 291;
}
);
leftKerningGroup = i;
note = exclamdown;
rightKerningGroup = i;
unicode = 00A1;
},
{
glyphname = cent;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"404 230 OFFCURVE",
"384 242 OFFCURVE",
"376 242 QCURVE SMOOTH",
"368 242 OFFCURVE",
"356 234 QCURVE",
"351 231 LINE",
"339 225 OFFCURVE",
"333 221 QCURVE",
"281 190 OFFCURVE",
"251 181 QCURVE",
"249 381 LINE",
"249 435 LINE",
"250 434 LINE SMOOTH",
"278 406 OFFCURVE",
"284 396 QCURVE",
"287 393 LINE",
"291 392 LINE",
"308 390 OFFCURVE",
"339 417 OFFCURVE",
"339 436 QCURVE SMOOTH",
"339 459 OFFCURVE",
"316 474 QCURVE SMOOTH",
"295 488 OFFCURVE",
"255 500 QCURVE SMOOTH",
"249 502 LINE",
"248 596 LINE",
"239 597 LINE",
"224 598 OFFCURVE",
"211 587 QCURVE SMOOTH",
"188 567 OFFCURVE",
"188 513 QCURVE",
"187 500 LINE",
"169 492 OFFCURVE",
"145 471 QCURVE",
"105 433 OFFCURVE",
"64 336 OFFCURVE",
"52 275 QCURVE",
"50 259 OFFCURVE",
"50 252 QCURVE SMOOTH",
"50 217 OFFCURVE",
"89 156 OFFCURVE",
"126 133 QCURVE SMOOTH",
"152 117 OFFCURVE",
"185 111 QCURVE",
"185 56 OFFCURVE",
"198 12 QCURVE SMOOTH",
"204 -8 LINE",
"215 9 LINE",
"221 17 LINE",
"231 27 OFFCURVE",
"234 37 QCURVE",
"245 67 OFFCURVE",
"250 111 QCURVE",
"276 115 LINE SMOOTH",
"350 129 OFFCURVE",
"402 187 QCURVE",
"410 195 OFFCURVE",
"410 210 QCURVE SMOOTH",
"410 216 OFFCURVE",
"408 222 QCURVE"
);
},
{
closed = 1;
nodes = (
"167 186 OFFCURVE",
"156 198 QCURVE SMOOTH",
"132 225 OFFCURVE",
"132 258 QCURVE SMOOTH",
"132 274 OFFCURVE",
"136 289 QCURVE SMOOTH",
"147 333 OFFCURVE",
"168 392 OFFCURVE",
"186 417 QCURVE",
"184 269 OFFCURVE",
"184 179 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
61 46 34 33 28 20 6 1 0 1 76 70 49 15 12 1 5 1 73 0 0 1 0 133 0 1 1 118 57 55 32 31 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 460;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = sterling;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"601 48 LINE",
"609 48 LINE",
"608 55 LINE",
"607 87 OFFCURVE",
"565 123 OFFCURVE",
"529 123 QCURVE SMOOTH",
"505 123 LINE SMOOTH",
"343 123 OFFCURVE",
"262 122 QCURVE",
"263 129 OFFCURVE",
"265 147 OFFCURVE",
"266 159 QCURVE SMOOTH",
"284 333 LINE",
"338 337 LINE",
"366 339 LINE SMOOTH",
"386 341 OFFCURVE",
"406 349 QCURVE SMOOTH",
"419 354 OFFCURVE",
"431 369 OFFCURVE",
"431 375 QCURVE",
"433 392 OFFCURVE",
"414 405 QCURVE SMOOTH",
"380 430 OFFCURVE",
"340 430 QCURVE SMOOTH",
"330 430 OFFCURVE",
"325 429 QCURVE SMOOTH",
"300 424 LINE",
"290 422 LINE",
"295 555 OFFCURVE",
"394 653 QCURVE",
"403 664 LINE",
"404 665 OFFCURVE",
"413 676 OFFCURVE",
"418 678 QCURVE",
"452 695 OFFCURVE",
"490 695 QCURVE SMOOTH",
"503 695 OFFCURVE",
"510 694 QCURVE",
"527 693 OFFCURVE",
"536 678 QCURVE",
"539 672 OFFCURVE",
"553 658 QCURVE SMOOTH",
"562 649 LINE",
"567 643 LINE",
"573 648 LINE",
"603 677 OFFCURVE",
"603 696 QCURVE SMOOTH",
"603 710 OFFCURVE",
"584 728 OFFCURVE",
"565 739 QCURVE",
"507 769 OFFCURVE",
"420 765 QCURVE SMOOTH",
"389 764 OFFCURVE",
"333 740 OFFCURVE",
"313 720 QCURVE SMOOTH",
"278 685 OFFCURVE",
"242 621 QCURVE SMOOTH",
"203 552 OFFCURVE",
"199 479 QCURVE SMOOTH",
"197 450 OFFCURVE",
"192 412 QCURVE",
"179 411 OFFCURVE",
"151 411 QCURVE SMOOTH",
"106 411 OFFCURVE",
"77 418 QCURVE SMOOTH",
"73 419 OFFCURVE",
"67 418 OFFCURVE",
"65 418 QCURVE",
"62 417 LINE",
"58 417 LINE",
"56 414 LINE",
"50 404 OFFCURVE",
"50 395 QCURVE SMOOTH",
"50 380 OFFCURVE",
"70 366 QCURVE SMOOTH",
"114 335 OFFCURVE",
"183 331 QCURVE",
"174 247 LINE SMOOTH",
"160 134 OFFCURVE",
"157 95 QCURVE SMOOTH",
"155 77 OFFCURVE",
"171 50 OFFCURVE",
"187 44 QCURVE",
"186 43 OFFCURVE",
"187 41 OFFCURVE",
"187 40 QCURVE",
"188 34 OFFCURVE",
"199 34 QCURVE SMOOTH",
"205 34 OFFCURVE",
"209 35 QCURVE",
"374 41 LINE",
"414 42 LINE SMOOTH",
"458 44 OFFCURVE",
"542 46 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
50 1 6 5 66 1 3 6 91 1 0 7 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 6 5 3 5 6 3 128 0 4 0 5 6 4 5 105 0 2 2 3 97 0 3 3 33 77 0 7 7 0 98 1 8 2 0 0 34 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 6 5 3 5 6 3 128 0 4 0 5 6 4 5 105 0 7 1 8 2 0 7 0 102 0 2 2 3 97 0 3 3 33 2 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 41 values pushed */
0 6 5 3 5 6 3 128 0 1 0 1 134 0 4 0 5 6 4 5 105 0 7 8 1 0 1 7 0 104 0 2 2 3 97 0 3 3 33 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 46 values pushed */
0 6 5 3 5 6 3 128 0 1 0 1 134 0 4 0 5 6 4 5 105 0 3 0 2 7 3 2 105 0 7 0 0 7 89 0 7 7 0 96 8 1 0 7 0 80 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 23 values pushed */
4 0 89 86 71 68 59 55 43 41 32 30 18 17 7 6 0 93 4 93 9 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 659;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = currency;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"529 501 OFFCURVE",
"529 508 QCURVE SMOOTH",
"529 521 OFFCURVE",
"520 530 QCURVE SMOOTH",
"510 540 OFFCURVE",
"498 540 QCURVE SMOOTH",
"495 540 OFFCURVE",
"485 536 QCURVE",
"439 513 OFFCURVE",
"424 504 QCURVE",
"414 499 OFFCURVE",
"396 485 QCURVE",
"376 471 LINE",
"339 497 OFFCURVE",
"287 522 OFFCURVE",
"258 522 QCURVE SMOOTH",
"238 522 OFFCURVE",
"215 513 QCURVE",
"197 530 LINE SMOOTH",
"173 552 OFFCURVE",
"161 561 QCURVE",
"145 572 OFFCURVE",
"128 572 QCURVE SMOOTH",
"116 572 OFFCURVE",
"107 568 QCURVE SMOOTH",
"100 565 OFFCURVE",
"90 552 OFFCURVE",
"90 544 QCURVE SMOOTH",
"90 541 OFFCURVE",
"92 537 QCURVE",
"102 515 OFFCURVE",
"116 501 QCURVE SMOOTH",
"140 476 LINE",
"161 456 OFFCURVE",
"164 451 QCURVE",
"168 446 OFFCURVE",
"173 429 OFFCURVE",
"174 425 QCURVE",
"160 417 LINE",
"154 415 OFFCURVE",
"127 410 OFFCURVE",
"119 404 QCURVE SMOOTH",
"100 390 OFFCURVE",
"98 353 QCURVE",
"96 333 OFFCURVE",
"96 324 QCURVE SMOOTH",
"96 286 OFFCURVE",
"110 247 QCURVE",
"123 215 OFFCURVE",
"134 186 QCURVE",
"98 152 LINE SMOOTH",
"93 147 OFFCURVE",
"67 122 OFFCURVE",
"59 111 QCURVE SMOOTH",
"50 98 OFFCURVE",
"50 85 QCURVE SMOOTH",
"50 74 OFFCURVE",
"63 54 OFFCURVE",
"76 48 QCURVE SMOOTH",
"91 41 OFFCURVE",
"106 41 QCURVE SMOOTH",
"137 41 OFFCURVE",
"157 73 QCURVE SMOOTH",
"174 101 OFFCURVE",
"198 133 QCURVE",
"228 127 LINE SMOOTH",
"234 126 OFFCURVE",
"268 120 OFFCURVE",
"281 120 QCURVE SMOOTH",
"302 120 OFFCURVE",
"338 129 QCURVE SMOOTH",
"360 135 OFFCURVE",
"376 137 QCURVE",
"376 137 OFFCURVE",
"409 115 QCURVE SMOOTH",
"440 94 LINE SMOOTH",
"460 81 OFFCURVE",
"478 81 QCURVE SMOOTH",
"491 81 OFFCURVE",
"497 90 QCURVE",
"501 98 OFFCURVE",
"501 108 QCURVE SMOOTH",
"501 125 OFFCURVE",
"486 142 QCURVE SMOOTH",
"457 173 LINE",
"428 204 LINE",
"446 241 OFFCURVE",
"446 286 QCURVE SMOOTH",
"446 323 OFFCURVE",
"432 377 QCURVE",
"454 402 LINE SMOOTH",
"485 435 OFFCURVE",
"499 453 QCURVE SMOOTH",
"518 477 OFFCURVE",
"526 495 QCURVE"
);
},
{
closed = 1;
nodes = (
"304 200 OFFCURVE",
"273 197 QCURVE",
"268 196 OFFCURVE",
"258 196 QCURVE SMOOTH",
"214 196 OFFCURVE",
"198 240 QCURVE SMOOTH",
"186 273 OFFCURVE",
"186 299 QCURVE SMOOTH",
"186 313 OFFCURVE",
"188 321 QCURVE SMOOTH",
"194 347 OFFCURVE",
"197 373 QCURVE",
"202 403 LINE",
"207 405 OFFCURVE",
"233 415 OFFCURVE",
"244 422 QCURVE SMOOTH",
"254 428 OFFCURVE",
"278 451 OFFCURVE",
"283 456 QCURVE",
"322 432 OFFCURVE",
"359 361 OFFCURVE",
"365 313 QCURVE",
"366 301 LINE",
"366 258 OFFCURVE",
"329 223 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
66 1 5 3 100 96 92 81 76 56 50 8 4 9 6 4 44 29 2 1 6 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
0 3 5 3 133 0 5 4 5 133 0 6 4 1 4 6 1 128 0 0 1 2 1 0 2 128 0 4 0 1 0 4 1 105 0 2 2 34 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 46 values pushed */
0 3 5 3 133 0 5 4 5 133 0 6 4 1 4 6 1 128 0 0 1 2 1 0 2 128 0 2 2 132 0 4 6 1 4 89 0 4 4 1 97 0 1 4 1 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
116 114 89 87 79 77 72 70 38 39 47 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 579;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = yen;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"412 262 OFFCURVE",
"424 264 QCURVE",
"428 265 OFFCURVE",
"437 265 QCURVE SMOOTH",
"446 265 OFFCURVE",
"450 264 QCURVE",
"471 263 OFFCURVE",
"501 269 OFFCURVE",
"514 282 QCURVE SMOOTH",
"517 285 LINE",
"515 290 LINE",
"499 325 OFFCURVE",
"461 329 QCURVE SMOOTH",
"448 330 OFFCURVE",
"422 330 QCURVE SMOOTH",
"388 330 LINE",
"360 329 OFFCURVE",
"353 336 QCURVE",
"350 341 OFFCURVE",
"350 350 QCURVE SMOOTH",
"350 360 OFFCURVE",
"353 375 QCURVE",
"357 388 OFFCURVE",
"363 398 QCURVE SMOOTH",
"369 408 LINE",
"379 426 LINE",
"449 542 LINE SMOOTH",
"460 561 OFFCURVE",
"475 580 QCURVE",
"496 611 LINE SMOOTH",
"505 625 OFFCURVE",
"505 638 QCURVE SMOOTH",
"505 643 OFFCURVE",
"503 649 QCURVE SMOOTH",
"497 666 OFFCURVE",
"472 671 QCURVE SMOOTH",
"460 673 OFFCURVE",
"456 673 QCURVE SMOOTH",
"428 673 OFFCURVE",
"410 640 QCURVE",
"404 630 LINE",
"375 575 OFFCURVE",
"355 543 QCURVE SMOOTH",
"335 511 OFFCURVE",
"301 464 QCURVE SMOOTH",
"292 452 LINE",
"292 452 OFFCURVE",
"281 441 QCURVE",
"277 438 LINE",
"276 441 OFFCURVE",
"273 442 QCURVE",
"260 453 LINE",
"229 484 OFFCURVE",
"181 552 QCURVE SMOOTH",
"171 566 LINE SMOOTH",
"146 600 OFFCURVE",
"132 615 QCURVE",
"109 642 OFFCURVE",
"77 639 QCURVE",
"71 639 OFFCURVE",
"55 632 OFFCURVE",
"52 625 QCURVE",
"50 619 OFFCURVE",
"50 612 QCURVE SMOOTH",
"50 609 OFFCURVE",
"52 595 QCURVE",
"55 585 OFFCURVE",
"66 578 QCURVE SMOOTH",
"80 569 OFFCURVE",
"101 545 OFFCURVE",
"119 522 QCURVE SMOOTH",
"125 514 OFFCURVE",
"127 510 QCURVE",
"124 514 OFFCURVE",
"161 467 QCURVE",
"162 466 OFFCURVE",
"180 445 QCURVE SMOOTH",
"198 423 LINE",
"212 408 LINE",
"231 385 LINE",
"246 365 OFFCURVE",
"246 344 QCURVE SMOOTH",
"246 336 OFFCURVE",
"245 332 QCURVE",
"238 328 OFFCURVE",
"222 326 OFFCURVE",
"213 326 QCURVE SMOOTH",
"202 326 LINE",
"195 325 OFFCURVE",
"183 325 QCURVE SMOOTH",
"162 325 OFFCURVE",
"151 324 QCURVE",
"143 322 OFFCURVE",
"128 312 OFFCURVE",
"124 305 QCURVE",
"121 299 OFFCURVE",
"121 294 QCURVE SMOOTH",
"121 281 OFFCURVE",
"137 268 QCURVE",
"154 252 OFFCURVE",
"181 252 QCURVE SMOOTH",
"191 252 OFFCURVE",
"196 253 QCURVE",
"206 254 LINE",
"218 257 OFFCURVE",
"229 257 QCURVE SMOOTH",
"241 257 OFFCURVE",
"249 253 QCURVE",
"256 241 OFFCURVE",
"256 233 QCURVE SMOOTH",
"256 226 OFFCURVE",
"251 218 QCURVE",
"250 217 LINE",
"245 216 LINE",
"238 216 OFFCURVE",
"222 218 QCURVE",
"219 219 OFFCURVE",
"212 219 QCURVE",
"204 220 LINE",
"196 222 OFFCURVE",
"191 222 QCURVE SMOOTH",
"185 222 OFFCURVE",
"182 221 QCURVE",
"175 219 OFFCURVE",
"160 209 OFFCURVE",
"156 203 QCURVE",
"153 197 OFFCURVE",
"153 190 QCURVE SMOOTH",
"153 174 OFFCURVE",
"167 163 QCURVE",
"183 152 OFFCURVE",
"200 148 QCURVE",
"207 147 OFFCURVE",
"222 147 QCURVE SMOOTH",
"230 147 OFFCURVE",
"234 146 QCURVE",
"251 145 OFFCURVE",
"261 135 OFFCURVE",
"262 119 QCURVE SMOOTH",
"263 106 OFFCURVE",
"263 81 QCURVE SMOOTH",
"263 62 OFFCURVE",
"264 52 QCURVE",
"266 16 OFFCURVE",
"302 5 QCURVE SMOOTH",
"316 1 OFFCURVE",
"324 1 QCURVE SMOOTH",
"340 1 OFFCURVE",
"353 13 QCURVE",
"355 15 LINE",
"355 17 LINE",
"357 37 OFFCURVE",
"348 68 QCURVE SMOOTH",
"340 94 OFFCURVE",
"340 107 QCURVE SMOOTH",
"340 122 OFFCURVE",
"345 132 QCURVE",
"351 133 LINE",
"355 134 OFFCURVE",
"367 136 OFFCURVE",
"376 136 QCURVE",
"384 137 OFFCURVE",
"401 137 QCURVE SMOOTH",
"426 137 OFFCURVE",
"438 139 QCURVE",
"466 142 OFFCURVE",
"493 153 QCURVE",
"500 155 OFFCURVE",
"508 167 OFFCURVE",
"508 175 QCURVE SMOOTH",
"508 182 OFFCURVE",
"502 195 OFFCURVE",
"496 198 QCURVE",
"477 212 OFFCURVE",
"458 212 QCURVE SMOOTH",
"453 212 OFFCURVE",
"443 210 QCURVE",
"411 202 OFFCURVE",
"385 202 QCURVE SMOOTH",
"371 202 OFFCURVE",
"345 206 QCURVE",
"341 219 OFFCURVE",
"341 233 QCURVE SMOOTH",
"341 245 OFFCURVE",
"345 256 QCURVE",
"362 262 OFFCURVE",
"390 262 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
154 138 104 3 9 10 175 89 2 7 9 65 1 1 7 58 1 6 0 47 43 2 4 2 5 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
154 138 104 3 9 10 175 89 2 13 9 65 1 1 7 58 1 5 0 47 43 2 4 2 5 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
154 138 104 3 9 10 175 89 2 12 9 65 1 1 7 58 1 5 0 47 43 2 4 2 5 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 26 values pushed */
154 138 104 3 9 10 175 89 2 12 9 65 1 1 8 58 1 5 0 47 43 2 4 2 5 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 50 values pushed */
0 1 7 0 7 1 0 128 0 6 0 2 7 6 114 11 1 9 15 14 13 12 8 5 7 1 9 7 106 0 0 5 3 2 2 4 0 2 105 0 10 10 30 77 0 4 4 40 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 51 values pushed */
0 1 7 0 7 1 0 128 0 6 0 2 0 6 2 128 11 1 9 15 14 13 12 8 5 7 1 9 7 106 0 0 5 3 2 2 4 0 2 105 0 10 10 30 77 0 4 4 40 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 51 values pushed */
0 10 9 10 133 0 1 7 0 7 1 0 128 0 6 0 2 0 6 2 128 11 1 9 15 14 13 12 8 5 7 1 9 7 106 0 0 5 3 2 2 4 0 2 105 0 4 4 40 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 57 values pushed */
0 10 9 10 133 0 13 9 7 7 13 114 0 1 7 0 7 1 0 128 6 1 5 0 2 0 5 2 128 11 1 9 15 14 12 8 4 7 1 9 7 106 0 0 3 1 2 4 0 2 105 0 4 4 40 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 57 values pushed */
0 10 9 10 133 13 1 12 9 7 7 12 114 0 1 7 0 7 1 0 128 6 1 5 0 2 0 5 2 128 11 1 9 15 14 8 3 7 1 9 7 106 0 0 3 1 2 4 0 2 105 0 4 4 40 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 62 values pushed */
0 10 9 10 133 0 7 12 8 8 7 114 0 1 8 0 8 1 0 128 6 1 5 0 2 0 5 2 128 15 14 13 3 12 7 9 12 90 11 1 9 0 8 1 9 8 106 0 0 3 1 2 4 0 2 105 0 4 4 40 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 69 values pushed */
0 10 9 10 133 0 7 12 8 8 7 114 0 1 8 0 8 1 0 128 6 1 5 0 2 0 5 2 128 0 4 2 4 134 15 14 13 3 12 7 9 12 90 11 1 9 0 8 1 9 8 106 0 0 5 2 0 89 0 0 0 2 97 3 1 2 0 2 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 30 values pushed */
0 0 0 186 0 185 183 182 180 179 172 169 148 147 100 95 86 83 81 79 18 26 28 17 42 34 38 16 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 567;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = brokenbar;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"164 451 OFFCURVE",
"166 481 QCURVE SMOOTH",
"175 632 LINE",
"175 681 LINE",
"176 708 LINE",
"178 732 OFFCURVE",
"177 745 QCURVE",
"176 776 OFFCURVE",
"130 819 OFFCURVE",
"98 820 QCURVE SMOOTH",
"76 820 OFFCURVE",
"50 798 OFFCURVE",
"50 778 QCURVE SMOOTH",
"52 602 OFFCURVE",
"58 514 QCURVE SMOOTH",
"59 500 OFFCURVE",
"76 472 OFFCURVE",
"91 453 QCURVE SMOOTH",
"103 438 OFFCURVE",
"122 438 QCURVE SMOOTH",
"129 438 OFFCURVE",
"143 442 QCURVE"
);
},
{
closed = 1;
nodes = (
"215 75 OFFCURVE",
"211 136 OFFCURVE",
"210 182 QCURVE",
"210 221 OFFCURVE",
"207 260 QCURVE SMOOTH",
"205 284 LINE SMOOTH",
"202 339 OFFCURVE",
"147 374 QCURVE SMOOTH",
"132 383 OFFCURVE",
"119 383 QCURVE SMOOTH",
"106 383 OFFCURVE",
"94 377 QCURVE",
"68 362 OFFCURVE",
"70 331 QCURVE",
"77 290 OFFCURVE",
"89 208 QCURVE SMOOTH",
"110 77 LINE SMOOTH",
"112 66 OFFCURVE",
"120 46 QCURVE SMOOTH",
"131 17 OFFCURVE",
"165 4 QCURVE",
"174 0 OFFCURVE",
"185 0 QCURVE SMOOTH",
"201 0 OFFCURVE",
"223 20 OFFCURVE",
"223 36 QCURVE SMOOTH",
"223 42 OFFCURVE",
"222 45 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
16 14 6 3 0 1 43 35 23 3 2 3 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 1 0 0 3 1 0 105 0 3 3 33 77 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 3 0 2 0 3 2 128 0 1 0 0 3 1 0 105 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 3 0 2 0 3 2 128 0 2 2 132 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
43 45 40 32 4 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 273;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = section;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"498 493 LINE",
"419 652 OFFCURVE",
"405 788 QCURVE SMOOTH",
"401 830 OFFCURVE",
"401 850 QCURVE SMOOTH",
"401 916 OFFCURVE",
"450 1013 OFFCURVE",
"512 1044 QCURVE SMOOTH",
"531 1053 OFFCURVE",
"531 1069 QCURVE SMOOTH",
"531 1086 OFFCURVE",
"510 1096 QCURVE",
"481 1112 OFFCURVE",
"451 1112 QCURVE SMOOTH",
"425 1112 OFFCURVE",
"377 1087 OFFCURVE",
"359 1064 QCURVE SMOOTH",
"291 978 OFFCURVE",
"291 883 QCURVE SMOOTH",
"291 866 OFFCURVE",
"292 857 QCURVE SMOOTH",
"298 807 LINE",
"287 805 OFFCURVE",
"261 790 QCURVE SMOOTH",
"248 782 LINE",
"199 761 OFFCURVE",
"138 678 OFFCURVE",
"118 622 QCURVE SMOOTH",
"97 562 OFFCURVE",
"97 503 QCURVE SMOOTH",
"97 410 OFFCURVE",
"149 318 QCURVE SMOOTH",
"172 277 OFFCURVE",
"206 204 QCURVE",
"185 208 OFFCURVE",
"172 215 QCURVE",
"164 212 LINE",
"163 210 OFFCURVE",
"160 201 OFFCURVE",
"160 198 QCURVE SMOOTH",
"160 196 LINE",
"165 172 OFFCURVE",
"215 129 OFFCURVE",
"241 125 QCURVE",
"246 113 LINE",
"258 88 OFFCURVE",
"258 63 QCURVE SMOOTH",
"258 27 OFFCURVE",
"232 -4 QCURVE SMOOTH",
"193 -48 OFFCURVE",
"111 -96 OFFCURVE",
"56 -97 QCURVE",
"55 -103 OFFCURVE",
"51 -121 OFFCURVE",
"51 -128 QCURVE",
"50 -141 LINE",
"50 -172 OFFCURVE",
"83 -208 OFFCURVE",
"110 -208 QCURVE SMOOTH",
"124 -208 OFFCURVE",
"137 -204 QCURVE SMOOTH",
"188 -189 OFFCURVE",
"275 -119 OFFCURVE",
"329 -20 OFFCURVE",
"329 38 QCURVE SMOOTH",
"329 73 OFFCURVE",
"314 133 QCURVE",
"353 142 OFFCURVE",
"379 153 QCURVE SMOOTH",
"454 185 OFFCURVE",
"533 293 OFFCURVE",
"533 360 QCURVE SMOOTH",
"533 418 OFFCURVE",
"506 475 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"372 280 OFFCURVE",
"322 242 QCURVE SMOOTH",
"301 227 OFFCURVE",
"285 219 QCURVE",
"274 249 OFFCURVE",
"239 321 QCURVE SMOOTH",
"203 395 OFFCURVE",
"189 434 QCURVE SMOOTH",
"177 469 OFFCURVE",
"177 500 QCURVE",
"176 541 OFFCURVE",
"201 584 QCURVE SMOOTH",
"239 646 OFFCURVE",
"307 676 QCURVE",
"319 682 OFFCURVE",
"322 685 QCURVE",
"333 644 OFFCURVE",
"352 598 QCURVE SMOOTH",
"412 452 LINE SMOOTH",
"426 417 OFFCURVE",
"426 390 QCURVE SMOOTH",
"426 360 OFFCURVE",
"409 334 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
92 80 39 37 32 17 6 7 0 1 1 76 0 1 0 1 133 0 0 0 118 60 58 45 2 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 583;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = dieresis;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"58 505 OFFCURVE",
"50 491 QCURVE",
"68 481 LINE",
"87 467 OFFCURVE",
"100 464 QCURVE SMOOTH",
"105 463 OFFCURVE",
"125 476 OFFCURVE",
"127 483 QCURVE",
"131 492 OFFCURVE",
"117 513 OFFCURVE",
"87 526 OFFCURVE",
"70 525 QCURVE"
);
},
{
closed = 1;
nodes = (
"299 502 OFFCURVE",
"275 491 QCURVE",
"263 484 OFFCURVE",
"250 479 QCURVE",
"271 461 OFFCURVE",
"269 463 QCURVE",
"287 448 OFFCURVE",
"306 437 OFFCURVE",
"318 437 QCURVE SMOOTH",
"329 437 OFFCURVE",
"344 451 OFFCURVE",
"344 464 QCURVE SMOOTH",
"344 481 OFFCURVE",
"323 501 OFFCURVE",
"307 502 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 48 values pushed */
22 9 2 1 2 1 76 3 1 0 2 0 133 4 1 2 1 1 2 89 4 1 2 2 1 97 0 1 2 1 81 12 12 0 0 12 26 12 25 18 16 0 11 0 11 5 8 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 394;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = copyright;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"419 657 OFFCURVE",
"366 715 OFFCURVE",
"293 751 OFFCURVE",
"256 751 QCURVE SMOOTH",
"202 751 OFFCURVE",
"131 732 QCURVE",
"115 726 OFFCURVE",
"90 711 QCURVE",
"68 699 OFFCURVE",
"62 672 QCURVE",
"50 634 OFFCURVE",
"50 604 QCURVE SMOOTH",
"50 597 OFFCURVE",
"52 581 QCURVE SMOOTH",
"62 513 OFFCURVE",
"72 480 QCURVE SMOOTH",
"94 405 OFFCURVE",
"154 378 QCURVE",
"190 360 OFFCURVE",
"231 360 QCURVE SMOOTH",
"242 360 OFFCURVE",
"248 361 QCURVE",
"253 361 OFFCURVE",
"268 360 OFFCURVE",
"279 361 QCURVE SMOOTH",
"297 363 OFFCURVE",
"310 368 QCURVE",
"360 391 OFFCURVE",
"397 428 QCURVE SMOOTH",
"444 475 OFFCURVE",
"444 546 QCURVE SMOOTH",
"444 576 OFFCURVE",
"429 627 QCURVE"
);
},
{
closed = 1;
nodes = (
"389 483 OFFCURVE",
"365 454 QCURVE SMOOTH",
"341 425 OFFCURVE",
"284 399 OFFCURVE",
"244 399 QCURVE SMOOTH",
"196 399 OFFCURVE",
"168 412 QCURVE",
"139 427 OFFCURVE",
"127 450 QCURVE",
"95 517 OFFCURVE",
"95 585 QCURVE SMOOTH",
"95 616 OFFCURVE",
"100 640 QCURVE SMOOTH",
"108 681 OFFCURVE",
"147 692 QCURVE SMOOTH",
"209 709 OFFCURVE",
"246 709 QCURVE SMOOTH",
"259 709 OFFCURVE",
"294 702 OFFCURVE",
"301 701 QCURVE",
"305 700 OFFCURVE",
"314 695 OFFCURVE",
"317 694 QCURVE",
"332 693 OFFCURVE",
"354 676 OFFCURVE",
"366 662 QCURVE",
"389 631 LINE",
"409 601 OFFCURVE",
"409 566 QCURVE SMOOTH",
"409 543 OFFCURVE",
"402 522 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"274 522 OFFCURVE",
"259 522 QCURVE SMOOTH",
"254 522 OFFCURVE",
"240 523 OFFCURVE",
"230 525 QCURVE",
"217 526 OFFCURVE",
"201 537 QCURVE",
"192 542 OFFCURVE",
"192 552 QCURVE SMOOTH",
"192 557 OFFCURVE",
"197 564 QCURVE",
"230 602 OFFCURVE",
"271 606 QCURVE SMOOTH",
"297 609 LINE",
"306 618 OFFCURVE",
"306 628 QCURVE SMOOTH",
"306 633 OFFCURVE",
"303 639 QCURVE SMOOTH",
"294 657 OFFCURVE",
"274 659 QCURVE",
"255 659 OFFCURVE",
"247 656 QCURVE",
"210 640 OFFCURVE",
"186 627 QCURVE SMOOTH",
"177 622 OFFCURVE",
"161 602 OFFCURVE",
"158 599 QCURVE",
"143 581 OFFCURVE",
"143 554 QCURVE SMOOTH",
"143 516 OFFCURVE",
"175 494 QCURVE",
"207 470 OFFCURVE",
"250 470 QCURVE SMOOTH",
"267 470 OFFCURVE",
"289 475 QCURVE",
"302 479 OFFCURVE",
"318 498 OFFCURVE",
"315 506 QCURVE",
"312 513 OFFCURVE",
"300 520 OFFCURVE",
"283 521 OFFCURVE",
"281 521 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 63 values pushed */
0 3 4 8 4 3 8 128 0 8 6 4 8 6 126 0 2 0 4 3 2 4 105 9 1 6 0 7 5 6 7 106 0 5 0 0 5 89 0 5 5 0 97 1 1 0 5 0 81 104 102 27 38 21 42 37 26 46 34 24 10 8 31 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 494;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = ordfeminine;
lastChange = "2019-06-19 02:48:14 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"335 506 OFFCURVE",
"324 506 QCURVE SMOOTH",
"314 506 OFFCURVE",
"303 499 QCURVE SMOOTH",
"288 489 LINE SMOOTH",
"280 484 OFFCURVE",
"274 484 QCURVE SMOOTH",
"266 484 OFFCURVE",
"262 495 QCURVE SMOOTH",
"255 513 OFFCURVE",
"254 528 QCURVE SMOOTH",
"254 544 OFFCURVE",
"255 574 QCURVE SMOOTH",
"256 604 LINE SMOOTH",
"257 628 OFFCURVE",
"233 636 QCURVE",
"224 638 LINE",
"216 638 OFFCURVE",
"208 628 OFFCURVE",
"203 609 OFFCURVE",
"201 603 QCURVE",
"181 554 OFFCURVE",
"154 513 QCURVE",
"141 496 OFFCURVE",
"129 496 QCURVE SMOOTH",
"119 496 OFFCURVE",
"111 507 QCURVE",
"109 515 OFFCURVE",
"109 531 QCURVE SMOOTH",
"109 580 OFFCURVE",
"178 663 OFFCURVE",
"225 681 QCURVE",
"221 683 OFFCURVE",
"207 694 OFFCURVE",
"202 695 QCURVE SMOOTH",
"189 698 OFFCURVE",
"176 698 QCURVE SMOOTH",
"145 698 OFFCURVE",
"95 664 OFFCURVE",
"82 633 QCURVE SMOOTH",
"65 593 OFFCURVE",
"58 566 QCURVE SMOOTH",
"46 520 OFFCURVE",
"50 495 QCURVE SMOOTH",
"52 483 OFFCURVE",
"61 458 OFFCURVE",
"70 451 QCURVE SMOOTH",
"96 430 OFFCURVE",
"122 430 QCURVE SMOOTH",
"139 430 OFFCURVE",
"170 448 OFFCURVE",
"181 465 QCURVE SMOOTH",
"192 482 OFFCURVE",
"197 482 QCURVE SMOOTH",
"203 482 OFFCURVE",
"215 466 QCURVE SMOOTH",
"228 449 OFFCURVE",
"265 431 OFFCURVE",
"283 431 QCURVE SMOOTH",
"313 430 OFFCURVE",
"335 452 QCURVE SMOOTH",
"348 465 OFFCURVE",
"348 477 QCURVE SMOOTH",
"348 486 OFFCURVE",
"342 495 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 6 3 4 3 6 4 128 0 1 5 0 5 1 0 128 0 4 5 0 4 89 0 5 2 1 0 5 0 101 0 3 3 46 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 41 values pushed */
0 3 6 3 133 0 6 4 6 133 0 1 5 0 5 1 0 128 0 4 5 0 4 89 0 5 1 0 5 89 0 5 5 0 97 2 1 0 5 0 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
63 61 58 56 42 42 35 35 36 7 9 27 
CALL[ ]\011/* CallFunction */";
};
width = 398;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = logicalnot;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"781 416 OFFCURVE",
"735 440 OFFCURVE",
"707 437 QCURVE SMOOTH",
"565 421 OFFCURVE",
"494 416 QCURVE SMOOTH",
"434 411 OFFCURVE",
"302 403 QCURVE SMOOTH",
"210 397 LINE",
"129 397 LINE SMOOTH",
"120 397 OFFCURVE",
"86 396 OFFCURVE",
"74 394 QCURVE SMOOTH",
"67 393 OFFCURVE",
"52 382 OFFCURVE",
"51 376 QCURVE",
"49 368 OFFCURVE",
"54 347 OFFCURVE",
"59 340 QCURVE",
"69 327 OFFCURVE",
"92 321 QCURVE",
"107 318 OFFCURVE",
"121 318 QCURVE",
"139 319 LINE",
"535 350 LINE SMOOTH",
"587 354 OFFCURVE",
"614 354 QCURVE",
"638 353 LINE SMOOTH",
"665 352 OFFCURVE",
"691 327 OFFCURVE",
"693 299 QCURVE SMOOTH",
"695 276 OFFCURVE",
"695 230 QCURVE",
"696 219 OFFCURVE",
"696 196 QCURVE SMOOTH",
"695 164 LINE SMOOTH",
"695 156 OFFCURVE",
"697 140 QCURVE SMOOTH",
"700 120 OFFCURVE",
"734 95 OFFCURVE",
"755 95 QCURVE SMOOTH",
"770 95 OFFCURVE",
"784 103 QCURVE",
"792 107 OFFCURVE",
"797 121 QCURVE",
"799 131 OFFCURVE",
"799 135 QCURVE",
"798 145 LINE",
"798 158 OFFCURVE",
"796 186 QCURVE SMOOTH",
"794 228 OFFCURVE",
"794 248 QCURVE SMOOTH",
"794 315 OFFCURVE",
"812 365 QCURVE SMOOTH",
"814 371 OFFCURVE",
"810 389 OFFCURVE",
"805 394 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
23 8 6 3 0 2 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 1 3 2 3 1 2 128 0 0 2 0 134 0 4 4 33 77 0 2 2 3 95 0 3 3 33 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 29 values pushed */
0 4 3 4 133 0 1 3 2 3 1 2 128 0 0 2 0 134 0 2 2 3 95 0 3 3 33 2 78 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
17 90 34 59 46 5 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 863;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = uni00AD;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"499 301 OFFCURVE",
"408 323 OFFCURVE",
"354 323 QCURVE SMOOTH",
"285 323 OFFCURVE",
"179 314 QCURVE SMOOTH",
"131 311 LINE",
"104 308 OFFCURVE",
"79 297 QCURVE",
"50 283 OFFCURVE",
"50 264 QCURVE SMOOTH",
"50 247 OFFCURVE",
"70 233 QCURVE",
"115 199 OFFCURVE",
"164 199 QCURVE SMOOTH",
"172 199 OFFCURVE",
"186 201 QCURVE",
"218 207 LINE",
"253 215 OFFCURVE",
"274 217 QCURVE SMOOTH",
"314 220 LINE SMOOTH",
"381 227 OFFCURVE",
"429 227 QCURVE SMOOTH",
"492 227 OFFCURVE",
"535 216 QCURVE",
"538 215 OFFCURVE",
"554 218 QCURVE",
"561 229 OFFCURVE",
"561 239 QCURVE SMOOTH",
"561 249 OFFCURVE",
"549 263 OFFCURVE",
"537 272 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
0 2 0 1 2 87 0 3 0 0 1 3 0 105 0 2 2 1 97 0 1 2 1 81 33 23 38 39 4 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 0;
}
);
note = uni00AD;
unicode = 00AD;
},
{
glyphname = registered;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"419 659 OFFCURVE",
"366 716 OFFCURVE",
"293 752 OFFCURVE",
"256 752 QCURVE SMOOTH",
"196 752 OFFCURVE",
"131 733 QCURVE SMOOTH",
"115 728 OFFCURVE",
"90 713 QCURVE SMOOTH",
"68 699 OFFCURVE",
"62 674 QCURVE",
"50 636 OFFCURVE",
"50 606 QCURVE SMOOTH",
"50 599 OFFCURVE",
"52 583 QCURVE SMOOTH",
"62 513 OFFCURVE",
"72 482 QCURVE SMOOTH",
"94 407 OFFCURVE",
"154 379 QCURVE SMOOTH",
"196 359 OFFCURVE",
"248 362 QCURVE",
"252 362 OFFCURVE",
"271 361 OFFCURVE",
"279 363 QCURVE",
"297 365 OFFCURVE",
"310 370 QCURVE SMOOTH",
"360 391 OFFCURVE",
"397 430 QCURVE SMOOTH",
"444 477 OFFCURVE",
"444 547 QCURVE SMOOTH",
"444 577 OFFCURVE",
"429 629 QCURVE"
);
},
{
closed = 1;
nodes = (
"390 486 OFFCURVE",
"365 455 QCURVE SMOOTH",
"340 425 OFFCURVE",
"281 400 OFFCURVE",
"239 401 QCURVE",
"198 399 OFFCURVE",
"168 414 QCURVE SMOOTH",
"139 429 OFFCURVE",
"127 452 QCURVE SMOOTH",
"95 518 OFFCURVE",
"95 587 QCURVE SMOOTH",
"95 618 OFFCURVE",
"100 642 QCURVE SMOOTH",
"107 682 OFFCURVE",
"147 694 QCURVE",
"213 711 OFFCURVE",
"252 711 QCURVE SMOOTH",
"266 711 OFFCURVE",
"298 703 OFFCURVE",
"301 702 QCURVE SMOOTH",
"304 701 OFFCURVE",
"314 696 OFFCURVE",
"317 696 QCURVE",
"332 695 OFFCURVE",
"354 678 OFFCURVE",
"366 664 QCURVE",
"387 635 OFFCURVE",
"389 632 QCURVE SMOOTH",
"409 602 OFFCURVE",
"409 568 QCURVE SMOOTH",
"409 545 OFFCURVE",
"402 524 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"287 605 OFFCURVE",
"293 621 QCURVE",
"295 629 OFFCURVE",
"295 631 QCURVE SMOOTH",
"295 643 OFFCURVE",
"280 649 QCURVE",
"267 655 OFFCURVE",
"249 655 QCURVE SMOOTH",
"219 655 OFFCURVE",
"172 617 OFFCURVE",
"172 584 QCURVE SMOOTH",
"172 583 OFFCURVE",
"171 576 OFFCURVE",
"172 573 QCURVE",
"172 546 OFFCURVE",
"174 492 QCURVE SMOOTH",
"175 476 OFFCURVE",
"187 467 QCURVE SMOOTH",
"194 462 OFFCURVE",
"199 462 QCURVE",
"203 463 LINE",
"206 464 OFFCURVE",
"212 472 OFFCURVE",
"213 476 QCURVE",
"215 487 OFFCURVE",
"217 507 QCURVE",
"225 506 OFFCURVE",
"238 498 OFFCURVE",
"251 486 OFFCURVE",
"253 483 QCURVE",
"270 466 OFFCURVE",
"283 459 QCURVE SMOOTH",
"291 455 OFFCURVE",
"295 455 QCURVE SMOOTH",
"305 455 OFFCURVE",
"312 467 QCURVE",
"301 488 OFFCURVE",
"267 524 QCURVE SMOOTH",
"246 546 LINE",
"273 585 OFFCURVE",
"278 592 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"210 593 OFFCURVE",
"210 602 QCURVE SMOOTH",
"210 611 OFFCURVE",
"228 623 OFFCURVE",
"250 628 QCURVE",
"249 612 OFFCURVE",
"234 589 OFFCURVE",
"220 577 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 69 values pushed */
111 106 99 83 77 67 64 7 5 6 1 76 0 2 3 6 3 2 6 128 0 6 5 3 6 5 126 0 5 4 3 5 4 126 0 1 0 3 2 1 3 105 0 4 0 0 4 89 0 4 4 0 98 0 0 4 0 82 96 94 26 42 37 27 46 56 7 8 28 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 494;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = degree;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"264 809 OFFCURVE",
"212 831 OFFCURVE",
"174 839 QCURVE SMOOTH",
"163 841 OFFCURVE",
"140 823 QCURVE",
"139 822 OFFCURVE",
"123 809 QCURVE",
"109 795 OFFCURVE",
"100 790 QCURVE SMOOTH",
"78 778 OFFCURVE",
"52 749 OFFCURVE",
"51 728 QCURVE SMOOTH",
"46 667 OFFCURVE",
"111 593 OFFCURVE",
"174 589 QCURVE",
"204 585 OFFCURVE",
"265 627 OFFCURVE",
"305 691 OFFCURVE",
"305 714 QCURVE SMOOTH",
"305 730 OFFCURVE",
"291 769 OFFCURVE",
"280 785 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"186 651 OFFCURVE",
"170 651 QCURVE SMOOTH",
"153 651 OFFCURVE",
"140 657 QCURVE",
"131 666 OFFCURVE",
"119 694 OFFCURVE",
"119 707 QCURVE SMOOTH",
"119 752 OFFCURVE",
"130 785 QCURVE",
"132 790 OFFCURVE",
"161 802 OFFCURVE",
"165 804 QCURVE",
"190 805 OFFCURVE",
"222 775 OFFCURVE",
"231 753 QCURVE",
"235 745 OFFCURVE",
"235 731 QCURVE SMOOTH",
"235 708 OFFCURVE",
"213 662 OFFCURVE",
"198 656 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 35 values pushed */
9 1 2 1 1 76 0 1 2 1 133 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 40 38 29 28 22 3 8 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 355;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = plusminus;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"462 390 OFFCURVE",
"452 396 QCURVE",
"437 403 OFFCURVE",
"419 403 QCURVE SMOOTH",
"411 403 OFFCURVE",
"395 401 QCURVE SMOOTH",
"357 395 OFFCURVE",
"337 395 QCURVE SMOOTH",
"322 395 OFFCURVE",
"309 398 QCURVE",
"302 406 OFFCURVE",
"297 424 OFFCURVE",
"296 447 OFFCURVE",
"295 455 QCURVE SMOOTH",
"294 462 OFFCURVE",
"292 491 OFFCURVE",
"288 502 QCURVE SMOOTH",
"282 520 OFFCURVE",
"256 539 OFFCURVE",
"238 539 QCURVE SMOOTH",
"229 539 OFFCURVE",
"224 538 QCURVE",
"210 536 OFFCURVE",
"195 515 OFFCURVE",
"197 500 QCURVE SMOOTH",
"210 419 LINE SMOOTH",
"211 413 OFFCURVE",
"211 404 QCURVE SMOOTH",
"211 391 OFFCURVE",
"201 381 OFFCURVE",
"188 381 QCURVE SMOOTH",
"178 381 OFFCURVE",
"172 382 QCURVE",
"161 383 OFFCURVE",
"141 386 OFFCURVE",
"131 387 QCURVE SMOOTH",
"109 389 OFFCURVE",
"96 384 QCURVE",
"90 382 OFFCURVE",
"79 370 OFFCURVE",
"78 365 QCURVE SMOOTH",
"77 359 OFFCURVE",
"81 344 OFFCURVE",
"86 339 QCURVE SMOOTH",
"99 326 OFFCURVE",
"128 315 OFFCURVE",
"155 309 QCURVE",
"218 298 LINE",
"225 272 OFFCURVE",
"225 267 QCURVE",
"226 258 OFFCURVE",
"226 240 QCURVE SMOOTH",
"226 234 OFFCURVE",
"228 211 OFFCURVE",
"229 203 QCURVE",
"230 197 OFFCURVE",
"238 182 OFFCURVE",
"243 180 QCURVE",
"248 179 OFFCURVE",
"263 183 OFFCURVE",
"269 187 QCURVE SMOOTH",
"290 200 OFFCURVE",
"295 232 QCURVE SMOOTH",
"307 307 LINE",
"334 320 OFFCURVE",
"379 327 QCURVE",
"403 332 LINE SMOOTH",
"435 338 OFFCURVE",
"466 347 QCURVE",
"477 352 OFFCURVE",
"477 365 QCURVE SMOOTH",
"477 372 OFFCURVE",
"473 377 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"382 75 OFFCURVE",
"312 87 OFFCURVE",
"280 89 QCURVE SMOOTH",
"227 91 OFFCURVE",
"149 99 OFFCURVE",
"112 109 QCURVE",
"102 111 OFFCURVE",
"97 111 QCURVE SMOOTH",
"85 111 OFFCURVE",
"72 106 QCURVE SMOOTH",
"53 98 OFFCURVE",
"50 81 QCURVE",
"49 68 OFFCURVE",
"55 51 OFFCURVE",
"65 45 QCURVE SMOOTH",
"96 25 OFFCURVE",
"131 25 QCURVE SMOOTH",
"242 25 LINE",
"242 26 LINE",
"324 26 OFFCURVE",
"365 27 QCURVE SMOOTH",
"383 27 OFFCURVE",
"406 32 OFFCURVE",
"414 41 QCURVE",
"418 45 OFFCURVE",
"418 54 QCURVE SMOOTH",
"418 59 OFFCURVE",
"416 61 QCURVE SMOOTH",
"405 72 OFFCURVE",
"390 74 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
76 1 4 6 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
0 1 2 1 133 0 5 0 6 0 5 6 128 3 1 2 2 33 77 0 0 0 33 77 0 6 6 4 96 0 4 4 34 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 1 2 1 133 0 0 2 5 2 0 5 128 0 5 6 2 5 6 126 3 1 2 2 33 77 0 6 6 4 96 0 4 4 34 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 41 values pushed */
0 1 3 1 133 0 0 2 5 2 0 5 128 0 5 6 2 5 6 126 0 3 3 33 77 0 2 2 33 77 0 6 6 4 96 0 4 4 34 4 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 17 values pushed */
100 98 94 93 86 80 69 67 65 63 53 52 42 39 7 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 527;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = uni00B2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"190 441 LINE",
"190 453 OFFCURVE",
"197 475 OFFCURVE",
"209 502 OFFCURVE",
"212 511 QCURVE SMOOTH",
"219 531 LINE SMOOTH",
"247 613 OFFCURVE",
"258 654 QCURVE",
"260 659 OFFCURVE",
"260 669 QCURVE SMOOTH",
"260 699 OFFCURVE",
"214 718 OFFCURVE",
"183 718 OFFCURVE",
"124 702 OFFCURVE",
"95 677 QCURVE",
"80 665 OFFCURVE",
"56 633 QCURVE",
"50 624 OFFCURVE",
"50 614 QCURVE SMOOTH",
"50 603 OFFCURVE",
"58 590 QCURVE SMOOTH",
"65 578 OFFCURVE",
"82 578 QCURVE",
"98 579 LINE",
"104 579 OFFCURVE",
"145 659 OFFCURVE",
"179 654 QCURVE",
"176 630 OFFCURVE",
"121 448 OFFCURVE",
"117 418 QCURVE SMOOTH",
"116 410 OFFCURVE",
"128 385 OFFCURVE",
"135 382 QCURVE",
"178 366 OFFCURVE",
"205 366 QCURVE SMOOTH",
"216 366 OFFCURVE",
"221 367 QCURVE",
"289 377 OFFCURVE",
"342 396 QCURVE",
"348 401 OFFCURVE",
"353 426 OFFCURVE",
"356 433 QCURVE",
"339 440 OFFCURVE",
"321 440 QCURVE SMOOTH",
"304 440 OFFCURVE",
"272 432 QCURVE SMOOTH",
"240 424 OFFCURVE",
"224 424 QCURVE SMOOTH",
"206 424 OFFCURVE",
"191 431 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
22 1 3 4 48 1 1 3 7 1 0 1 3 76 0 3 4 1 4 3 1 128 0 1 0 4 1 0 126 0 4 4 46 77 0 0 0 2 97 0 2 2 47 2 78 25 57 54 34 32 5 9 27 
CALL[ ]\011/* CallFunction */";
};
width = 406;
}
);
note = uni00B2;
unicode = 00B2;
},
{
glyphname = uni00B3;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"271 572 OFFCURVE",
"249 599 OFFCURVE",
"244 605 QCURVE",
"245 609 OFFCURVE",
"249 619 OFFCURVE",
"250 626 QCURVE",
"253 640 OFFCURVE",
"253 651 QCURVE SMOOTH",
"253 672 OFFCURVE",
"233 702 OFFCURVE",
"211 714 QCURVE SMOOTH",
"188 727 OFFCURVE",
"161 727 QCURVE SMOOTH",
"137 727 OFFCURVE",
"104 715 QCURVE",
"67 700 OFFCURVE",
"53 666 QCURVE",
"50 660 OFFCURVE",
"50 655 QCURVE SMOOTH",
"50 647 OFFCURVE",
"59 641 QCURVE",
"74 639 OFFCURVE",
"106 647 QCURVE SMOOTH",
"134 653 OFFCURVE",
"149 653 QCURVE SMOOTH",
"155 653 OFFCURVE",
"169 651 QCURVE",
"169 648 OFFCURVE",
"167 634 OFFCURVE",
"165 630 QCURVE",
"141 594 OFFCURVE",
"94 578 QCURVE",
"87 576 OFFCURVE",
"79 564 OFFCURVE",
"79 557 QCURVE SMOOTH",
"79 549 OFFCURVE",
"83 542 QCURVE SMOOTH",
"99 514 OFFCURVE",
"124 514 QCURVE SMOOTH",
"136 514 OFFCURVE",
"149 520 QCURVE SMOOTH",
"156 523 OFFCURVE",
"173 534 OFFCURVE",
"179 536 QCURVE",
"186 538 OFFCURVE",
"208 539 OFFCURVE",
"214 539 QCURVE",
"218 527 OFFCURVE",
"218 526 QCURVE SMOOTH",
"218 525 LINE",
"211 502 OFFCURVE",
"183 470 OFFCURVE",
"158 447 QCURVE SMOOTH",
"129 420 OFFCURVE",
"118 405 QCURVE",
"123 378 OFFCURVE",
"148 373 QCURVE SMOOTH",
"160 371 OFFCURVE",
"165 371 QCURVE SMOOTH",
"182 371 OFFCURVE",
"196 381 QCURVE",
"252 418 OFFCURVE",
"283 481 QCURVE",
"291 500 OFFCURVE",
"291 517 QCURVE SMOOTH",
"291 541 OFFCURVE",
"278 561 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
11 1 0 2 1 76 0 1 3 2 3 1 2 128 0 2 0 3 2 0 126 0 3 3 4 97 0 4 4 46 77 0 0 0 47 0 78 42 44 37 44 22 5 9 27 
CALL[ ]\011/* CallFunction */";
};
width = 341;
}
);
note = uni00B3;
unicode = 00B3;
},
{
glyphname = acute;
lastChange = "2019-08-23 23:41:30 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"393 799 OFFCURVE",
"375 808 OFFCURVE",
"366 808 QCURVE SMOOTH",
"353 808 OFFCURVE",
"343 799 QCURVE SMOOTH",
"315 773 OFFCURVE",
"307 749 QCURVE SMOOTH",
"276 657 OFFCURVE",
"202 575 QCURVE SMOOTH",
"183 554 OFFCURVE",
"178 537 OFFCURVE",
"177 505 QCURVE",
"190 500 OFFCURVE",
"201 500 QCURVE SMOOTH",
"231 500 OFFCURVE",
"259 528 QCURVE SMOOTH",
"328 594 OFFCURVE",
"401 685 QCURVE SMOOTH",
"417 705 OFFCURVE",
"417 734 QCURVE SMOOTH",
"417 766 OFFCURVE",
"399 791 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 00B4;
},
{
glyphname = uni00B5;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"601 124 OFFCURVE",
"593 146 OFFCURVE",
"592 151 QCURVE",
"583 188 LINE SMOOTH",
"563 260 OFFCURVE",
"556 310 QCURVE SMOOTH",
"546 369 OFFCURVE",
"534 494 QCURVE SMOOTH",
"531 527 LINE SMOOTH",
"528 552 OFFCURVE",
"502 578 OFFCURVE",
"475 578 QCURVE SMOOTH",
"448 578 OFFCURVE",
"432 557 QCURVE SMOOTH",
"416 537 OFFCURVE",
"409 513 QCURVE SMOOTH",
"395 468 OFFCURVE",
"351 393 OFFCURVE",
"309 327 QCURVE SMOOTH",
"299 312 OFFCURVE",
"283 299 OFFCURVE",
"267 300 QCURVE",
"257 313 OFFCURVE",
"249 347 OFFCURVE",
"247 370 QCURVE SMOOTH",
"245 391 OFFCURVE",
"240 424 OFFCURVE",
"238 435 QCURVE SMOOTH",
"227 494 OFFCURVE",
"227 531 QCURVE SMOOTH",
"227 555 OFFCURVE",
"231 574 QCURVE SMOOTH",
"235 595 OFFCURVE",
"210 608 QCURVE",
"195 617 OFFCURVE",
"179 617 QCURVE SMOOTH",
"164 617 OFFCURVE",
"140 600 OFFCURVE",
"134 585 QCURVE SMOOTH",
"123 555 OFFCURVE",
"121 509 QCURVE SMOOTH",
"118 454 OFFCURVE",
"118 399 QCURVE SMOOTH",
"116 325 LINE SMOOTH",
"113 191 OFFCURVE",
"84 -47 OFFCURVE",
"54 -158 QCURVE",
"50 -169 OFFCURVE",
"50 -193 QCURVE",
"51 -206 OFFCURVE",
"70 -226 OFFCURVE",
"82 -226 QCURVE SMOOTH",
"89 -226 OFFCURVE",
"95 -223 QCURVE",
"119 -213 OFFCURVE",
"131 -193 QCURVE SMOOTH",
"142 -175 OFFCURVE",
"146 -146 QCURVE SMOOTH",
"161 -43 OFFCURVE",
"189 163 QCURVE SMOOTH",
"196 215 LINE",
"205 219 OFFCURVE",
"207 219 QCURVE SMOOTH",
"214 219 OFFCURVE",
"228 217 QCURVE",
"244 213 OFFCURVE",
"262 213 QCURVE SMOOTH",
"320 213 OFFCURVE",
"356 267 QCURVE SMOOTH",
"365 280 OFFCURVE",
"381 306 QCURVE SMOOTH",
"406 344 LINE",
"418 360 OFFCURVE",
"427 370 QCURVE",
"446 394 LINE",
"458 331 OFFCURVE",
"465 303 QCURVE",
"487 187 OFFCURVE",
"501 130 QCURVE SMOOTH",
"508 101 OFFCURVE",
"539 78 OFFCURVE",
"570 78 QCURVE SMOOTH",
"585 78 OFFCURVE",
"603 94 OFFCURVE",
"603 108 QCURVE SMOOTH",
"603 114 OFFCURVE",
"602 118 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
11 1 5 6 37 1 3 0 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
0 6 4 5 4 6 5 128 0 0 1 3 1 0 3 128 0 3 3 132 0 5 2 1 1 0 5 1 105 0 4 4 32 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 4 6 4 133 0 6 5 6 133 0 0 1 3 1 0 3 128 0 3 3 132 0 5 1 1 5 89 0 5 5 1 97 2 1 1 5 1 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 46 values pushed */
0 4 6 4 133 0 6 5 6 133 0 2 5 1 5 2 1 128 0 0 1 3 1 0 3 128 0 3 3 132 0 5 2 1 5 89 0 5 5 1 97 0 1 5 1 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
40 29 46 41 34 45 35 7 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 653;
}
);
note = uni00B5;
unicode = 00B5;
},
{
glyphname = paragraph;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"449 754 OFFCURVE",
"428 789 OFFCURVE",
"400 800 QCURVE",
"360 814 OFFCURVE",
"299 827 OFFCURVE",
"264 827 QCURVE SMOOTH",
"253 827 OFFCURVE",
"221 825 QCURVE",
"213 825 OFFCURVE",
"197 821 QCURVE",
"172 816 LINE",
"141 813 OFFCURVE",
"85 773 OFFCURVE",
"50 699 OFFCURVE",
"50 648 QCURVE SMOOTH",
"50 633 OFFCURVE",
"51 626 QCURVE",
"54 576 OFFCURVE",
"75 525 OFFCURVE",
"107 498 QCURVE SMOOTH",
"144 465 OFFCURVE",
"211 434 OFFCURVE",
"247 434 QCURVE SMOOTH",
"261 434 OFFCURVE",
"268 435 QCURVE",
"277 437 OFFCURVE",
"289 441 OFFCURVE",
"294 442 QCURVE",
"319 449 OFFCURVE",
"328 449 QCURVE SMOOTH",
"341 449 OFFCURVE",
"352 427 OFFCURVE",
"353 398 QCURVE",
"349 313 OFFCURVE",
"349 143 QCURVE SMOOTH",
"350 5 LINE SMOOTH",
"350 -8 OFFCURVE",
"348 -29 OFFCURVE",
"348 -38 QCURVE SMOOTH",
"348 -51 OFFCURVE",
"359 -64 OFFCURVE",
"376 -64 QCURVE SMOOTH",
"404 -64 OFFCURVE",
"445 -24 OFFCURVE",
"445 4 QCURVE SMOOTH",
"445 45 OFFCURVE",
"447 162 OFFCURVE",
"448 186 QCURVE",
"448 455 LINE SMOOTH",
"448 643 OFFCURVE",
"449 723 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"330 534 OFFCURVE",
"270 508 OFFCURVE",
"245 508 QCURVE SMOOTH",
"236 508 OFFCURVE",
"233 509 QCURVE",
"186 528 OFFCURVE",
"135 587 OFFCURVE",
"135 620 QCURVE SMOOTH",
"135 647 OFFCURVE",
"152 675 QCURVE SMOOTH",
"166 698 OFFCURVE",
"216 721 OFFCURVE",
"244 721 QCURVE SMOOTH",
"266 721 OFFCURVE",
"304 709 OFFCURVE",
"316 699 QCURVE",
"326 690 OFFCURVE",
"328 624 QCURVE SMOOTH",
"330 593 OFFCURVE",
"332 585 QCURVE",
"331 585 OFFCURVE",
"334 566 OFFCURVE",
"334 559 QCURVE SMOOTH",
"334 552 OFFCURVE",
"333 548 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
0 1 5 2 5 1 2 128 0 0 2 0 134 0 3 0 4 5 3 4 105 0 5 1 2 5 89 0 5 5 2 97 0 2 5 2 81 73 72 63 61 77 52 42 39 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 499;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = cedilla;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"204 -93 OFFCURVE",
"176 -72 QCURVE SMOOTH",
"166 -65 OFFCURVE",
"152 -57 QCURVE",
"140 -51 OFFCURVE",
"123 -38 QCURVE",
"117 -32 OFFCURVE",
"108 -11 OFFCURVE",
"104 -6 QCURVE SMOOTH",
"94 6 OFFCURVE",
"74 6 QCURVE SMOOTH",
"63 6 OFFCURVE",
"49 -3 OFFCURVE",
"50 -12 QCURVE",
"53 -27 OFFCURVE",
"65 -47 OFFCURVE",
"81 -63 QCURVE",
"95 -76 OFFCURVE",
"112 -88 QCURVE",
"134 -105 LINE SMOOTH",
"145 -114 OFFCURVE",
"145 -123 QCURVE SMOOTH",
"145 -134 OFFCURVE",
"130 -143 QCURVE",
"107 -155 LINE",
"98 -158 OFFCURVE",
"78 -164 OFFCURVE",
"68 -168 QCURVE SMOOTH",
"60 -171 OFFCURVE",
"60 -183 QCURVE SMOOTH",
"60 -191 OFFCURVE",
"65 -195 QCURVE",
"92 -215 OFFCURVE",
"117 -215 QCURVE SMOOTH",
"124 -215 OFFCURVE",
"138 -211 QCURVE SMOOTH",
"154 -206 OFFCURVE",
"182 -188 OFFCURVE",
"185 -186 QCURVE",
"197 -179 OFFCURVE",
"213 -156 QCURVE",
"217 -152 OFFCURVE",
"217 -139 QCURVE SMOOTH",
"217 -129 OFFCURVE",
"216 -122 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 21 values pushed */
44 1 0 1 1 76 0 1 0 1 133 0 0 0 118 34 32 41 2 8 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 267;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = uni00B9;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"169 620 LINE",
"173 585 OFFCURVE",
"174 570 QCURVE",
"186 468 LINE",
"187 462 OFFCURVE",
"192 420 OFFCURVE",
"197 403 QCURVE SMOOTH",
"201 389 OFFCURVE",
"224 375 OFFCURVE",
"241 376 QCURVE",
"256 376 OFFCURVE",
"277 397 OFFCURVE",
"276 412 QCURVE SMOOTH",
"270 562 OFFCURVE",
"265 637 QCURVE SMOOTH",
"264 658 OFFCURVE",
"248 690 QCURVE SMOOTH",
"231 722 OFFCURVE",
"202 722 QCURVE SMOOTH",
"190 722 OFFCURVE",
"177 716 QCURVE SMOOTH",
"140 699 OFFCURVE",
"81 655 OFFCURVE",
"50 617 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
20 1 1 2 1 76 0 2 0 1 0 2 1 128 0 0 0 46 77 0 1 1 47 1 78 24 39 35 3 9 25 
CALL[ ]\011/* CallFunction */";
};
width = 326;
}
);
note = uni00B9;
unicode = 00B9;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"267 683 OFFCURVE",
"209 705 OFFCURVE",
"184 705 QCURVE SMOOTH",
"157 705 OFFCURVE",
"106 682 OFFCURVE",
"77 662 QCURVE",
"66 655 OFFCURVE",
"62 624 QCURVE SMOOTH",
"61 617 OFFCURVE",
"55 600 OFFCURVE",
"54 597 QCURVE",
"44 575 OFFCURVE",
"45 563 QCURVE",
"45 556 OFFCURVE",
"47 522 OFFCURVE",
"54 489 OFFCURVE",
"67 474 QCURVE SMOOTH",
"115 418 OFFCURVE",
"175 418 QCURVE SMOOTH",
"227 418 OFFCURVE",
"277 462 QCURVE",
"296 477 OFFCURVE",
"314 529 OFFCURVE",
"314 560 QCURVE SMOOTH",
"314 591 OFFCURVE",
"297 648 OFFCURVE",
"283 664 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"237 521 OFFCURVE",
"210 495 OFFCURVE",
"195 489 QCURVE",
"181 488 OFFCURVE",
"149 501 OFFCURVE",
"138 512 QCURVE SMOOTH",
"101 550 OFFCURVE",
"85 583 QCURVE SMOOTH",
"82 589 OFFCURVE",
"97 623 OFFCURVE",
"98 626 QCURVE",
"119 648 OFFCURVE",
"148 648 QCURVE SMOOTH",
"168 648 OFFCURVE",
"191 639 QCURVE SMOOTH",
"212 631 OFFCURVE",
"245 575 OFFCURVE",
"245 550 QCURVE SMOOTH",
"245 542 OFFCURVE",
"242 534 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
0 0 2 0 134 0 2 2 1 97 0 1 1 46 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 0 2 0 134 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
40 46 38 3 9 25 
CALL[ ]\011/* CallFunction */";
};
width = 364;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = onequarter;
lastChange = "2019-08-23 23:12:23 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"187 525 OFFCURVE",
"196 496 OFFCURVE",
"199 470 QCURVE SMOOTH",
"201 454 OFFCURVE",
"203 444 QCURVE SMOOTH",
"214 391 OFFCURVE",
"220 369 QCURVE",
"222 364 OFFCURVE",
"237 355 OFFCURVE",
"243 355 QCURVE",
"248 356 OFFCURVE",
"261 366 OFFCURVE",
"264 371 QCURVE",
"273 392 OFFCURVE",
"270 409 QCURVE",
"244 631 OFFCURVE",
"246 659 QCURVE",
"248 677 OFFCURVE",
"248 683 QCURVE SMOOTH",
"248 708 OFFCURVE",
"230 735 OFFCURVE",
"215 735 QCURVE SMOOTH",
"201 735 OFFCURVE",
"181 723 QCURVE SMOOTH",
"81 659 OFFCURVE",
"36 582 QCURVE SMOOTH",
"30 572 OFFCURVE",
"30 562 QCURVE SMOOTH",
"30 545 OFFCURVE",
"45 528 QCURVE",
"65 507 OFFCURVE",
"90 507 QCURVE SMOOTH",
"105 507 OFFCURVE",
"116 512 QCURVE",
"122 515 OFFCURVE",
"136 531 OFFCURVE",
"138 533 QCURVE",
"139 535 OFFCURVE",
"146 544 OFFCURVE",
"158 555 OFFCURVE",
"163 555 QCURVE SMOOTH",
"170 555 OFFCURVE",
"174 540 QCURVE"
);
},
{
closed = 1;
nodes = (
"613 658 OFFCURVE",
"593 658 QCURVE SMOOTH",
"581 658 OFFCURVE",
"576 657 QCURVE",
"555 654 OFFCURVE",
"527 626 OFFCURVE",
"508 598 QCURVE SMOOTH",
"493 576 OFFCURVE",
"489 571 QCURVE SMOOTH",
"393 450 OFFCURVE",
"282 295 QCURVE SMOOTH",
"227 220 OFFCURVE",
"164 122 QCURVE",
"159 116 OFFCURVE",
"153 106 OFFCURVE",
"150 102 QCURVE",
"144 93 OFFCURVE",
"144 78 QCURVE SMOOTH",
"144 72 OFFCURVE",
"145 69 QCURVE",
"146 65 OFFCURVE",
"162 56 OFFCURVE",
"167 52 QCURVE",
"174 56 OFFCURVE",
"199 70 OFFCURVE",
"206 78 QCURVE",
"304 182 OFFCURVE",
"350 238 QCURVE SMOOTH",
"433 343 OFFCURVE",
"522 458 QCURVE SMOOTH",
"633 600 LINE SMOOTH",
"643 613 OFFCURVE",
"643 625 QCURVE SMOOTH",
"643 642 OFFCURVE",
"626 651 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"735 148 OFFCURVE",
"719 155 OFFCURVE",
"695 153 OFFCURVE",
"688 154 QCURVE SMOOTH",
"659 159 OFFCURVE",
"639 175 OFFCURVE",
"638 201 QCURVE",
"638 226 OFFCURVE",
"615 305 OFFCURVE",
"588 373 OFFCURVE",
"585 375 QCURVE",
"566 383 OFFCURVE",
"561 383 QCURVE SMOOTH",
"558 383 LINE",
"535 375 OFFCURVE",
"461 295 OFFCURVE",
"398 203 OFFCURVE",
"392 184 QCURVE",
"391 180 OFFCURVE",
"391 172 QCURVE SMOOTH",
"391 159 OFFCURVE",
"394 147 QCURVE SMOOTH",
"400 124 OFFCURVE",
"434 99 OFFCURVE",
"460 99 QCURVE SMOOTH",
"477 99 OFFCURVE",
"492 102 QCURVE SMOOTH",
"497 103 OFFCURVE",
"518 105 OFFCURVE",
"526 105 QCURVE SMOOTH",
"548 105 OFFCURVE",
"566 96 QCURVE",
"577 71 OFFCURVE",
"585 51 QCURVE SMOOTH",
"589 41 OFFCURVE",
"597 29 OFFCURVE",
"604 29 QCURVE SMOOTH",
"608 29 OFFCURVE",
"610 30 QCURVE",
"624 34 OFFCURVE",
"634 55 QCURVE",
"637 63 OFFCURVE",
"642 93 OFFCURVE",
"644 103 QCURVE",
"688 108 LINE",
"747 117 OFFCURVE",
"740 137 QCURVE"
);
},
{
closed = 1;
nodes = (
"469 198 OFFCURVE",
"518 263 OFFCURVE",
"544 281 QCURVE",
"548 275 OFFCURVE",
"552 236 OFFCURVE",
"553 230 QCURVE",
"555 214 OFFCURVE",
"557 186 QCURVE",
"557 169 OFFCURVE",
"558 159 QCURVE",
"512 166 LINE SMOOTH",
"481 170 OFFCURVE",
"468 172 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 15 values pushed */
23 1 3 2 137 134 129 127 110 104 6 6 1 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 2 3 2 133 0 3 0 3 133 0 0 1 0 133 0 1 6 1 133 0 6 4 6 133 5 1 4 4 118 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 34 values pushed */
0 2 3 2 133 0 3 0 3 133 0 0 1 0 133 0 1 6 1 133 0 6 4 6 133 0 4 5 4 133 0 5 5 118 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
122 120 100 98 96 93 76 73 40 39 32 7 8 25 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 771;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = onehalf;
lastChange = "2019-08-23 23:12:37 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"185 549 OFFCURVE",
"188 507 QCURVE SMOOTH",
"191 475 OFFCURVE",
"195 459 QCURVE SMOOTH",
"200 438 OFFCURVE",
"211 402 OFFCURVE",
"214 390 QCURVE SMOOTH",
"216 383 OFFCURVE",
"219 373 OFFCURVE",
"220 369 QCURVE",
"222 364 OFFCURVE",
"237 355 OFFCURVE",
"243 355 QCURVE",
"248 356 OFFCURVE",
"261 366 OFFCURVE",
"264 371 QCURVE",
"273 392 OFFCURVE",
"270 409 QCURVE",
"244 631 OFFCURVE",
"246 659 QCURVE",
"248 677 OFFCURVE",
"248 683 QCURVE SMOOTH",
"248 708 OFFCURVE",
"230 735 OFFCURVE",
"215 735 QCURVE SMOOTH",
"201 735 OFFCURVE",
"181 723 QCURVE SMOOTH",
"81 659 OFFCURVE",
"36 582 QCURVE SMOOTH",
"30 572 OFFCURVE",
"30 562 QCURVE SMOOTH",
"30 545 OFFCURVE",
"45 528 QCURVE",
"55 518 OFFCURVE",
"62 518 QCURVE SMOOTH",
"68 518 OFFCURVE",
"91 532 OFFCURVE",
"99 535 QCURVE",
"108 538 OFFCURVE",
"133 569 QCURVE SMOOTH",
"144 582 OFFCURVE",
"165 603 OFFCURVE",
"170 603 QCURVE SMOOTH",
"175 603 OFFCURVE",
"175 595 QCURVE"
);
},
{
closed = 1;
nodes = (
"613 658 OFFCURVE",
"593 658 QCURVE SMOOTH",
"581 658 OFFCURVE",
"576 657 QCURVE",
"555 654 OFFCURVE",
"527 626 OFFCURVE",
"508 598 QCURVE SMOOTH",
"493 576 OFFCURVE",
"489 571 QCURVE SMOOTH",
"393 450 OFFCURVE",
"282 295 QCURVE SMOOTH",
"227 220 OFFCURVE",
"164 122 QCURVE",
"159 116 OFFCURVE",
"153 106 OFFCURVE",
"150 102 QCURVE",
"144 93 OFFCURVE",
"144 78 QCURVE SMOOTH",
"144 72 OFFCURVE",
"145 69 QCURVE",
"146 65 OFFCURVE",
"162 56 OFFCURVE",
"167 52 QCURVE",
"174 56 OFFCURVE",
"199 70 OFFCURVE",
"206 78 QCURVE",
"304 182 OFFCURVE",
"350 238 QCURVE SMOOTH",
"433 343 OFFCURVE",
"522 458 QCURVE SMOOTH",
"633 600 LINE SMOOTH",
"643 613 OFFCURVE",
"643 625 QCURVE SMOOTH",
"643 642 OFFCURVE",
"626 651 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"544 120 OFFCURVE",
"548 126 QCURVE SMOOTH",
"576 166 OFFCURVE",
"589 186 QCURVE SMOOTH",
"591 189 OFFCURVE",
"619 228 OFFCURVE",
"626 248 QCURVE SMOOTH",
"631 263 OFFCURVE",
"631 274 QCURVE SMOOTH",
"631 300 OFFCURVE",
"593 332 OFFCURVE",
"561 332 QCURVE SMOOTH",
"488 332 OFFCURVE",
"441 264 QCURVE SMOOTH",
"439 261 OFFCURVE",
"437 253 QCURVE SMOOTH",
"434 241 OFFCURVE",
"454 221 OFFCURVE",
"466 225 QCURVE",
"472 228 OFFCURVE",
"481 233 OFFCURVE",
"485 235 QCURVE",
"499 243 OFFCURVE",
"508 247 QCURVE",
"514 249 OFFCURVE",
"530 249 QCURVE SMOOTH",
"540 249 LINE",
"538 243 OFFCURVE",
"532 222 OFFCURVE",
"528 216 QCURVE SMOOTH",
"503 176 OFFCURVE",
"464 121 QCURVE",
"453 104 LINE",
"442 89 OFFCURVE",
"431 70 QCURVE",
"425 58 OFFCURVE",
"425 48 QCURVE SMOOTH",
"425 31 OFFCURVE",
"439 14 QCURVE SMOOTH",
"461 -11 OFFCURVE",
"487 -7 QCURVE SMOOTH",
"578 7 OFFCURVE",
"638 32 QCURVE SMOOTH",
"643 34 OFFCURVE",
"652 50 OFFCURVE",
"656 55 QCURVE",
"629 72 OFFCURVE",
"571 84 OFFCURVE",
"527 87 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 68 values pushed */
22 1 2 1 1 1 0 2 2 76 82 1 5 73 0 1 2 1 133 0 2 0 2 133 0 0 4 0 133 6 1 5 3 5 134 0 4 3 3 4 89 0 4 4 3 97 0 3 4 3 81 80 80 80 128 80 128 117 115 103 102 78 75 40 40 7 8 24 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 686;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = threequarters;
lastChange = "2019-08-23 23:12:47 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"188 394 OFFCURVE",
"214 428 QCURVE SMOOTH",
"247 472 OFFCURVE",
"247 503 QCURVE SMOOTH",
"247 524 OFFCURVE",
"222 566 OFFCURVE",
"195 592 QCURVE",
"206 610 LINE SMOOTH",
"221 633 OFFCURVE",
"229 652 QCURVE",
"231 656 OFFCURVE",
"231 664 QCURVE SMOOTH",
"231 679 OFFCURVE",
"209 709 OFFCURVE",
"193 716 QCURVE SMOOTH",
"174 724 OFFCURVE",
"149 724 QCURVE SMOOTH",
"120 724 OFFCURVE",
"63 707 OFFCURVE",
"48 693 QCURVE SMOOTH",
"43 688 OFFCURVE",
"43 681 QCURVE SMOOTH",
"43 674 OFFCURVE",
"54 662 OFFCURVE",
"63 661 QCURVE",
"91 655 OFFCURVE",
"126 651 QCURVE",
"125 645 OFFCURVE",
"123 627 OFFCURVE",
"119 623 QCURVE",
"102 608 LINE",
"88 598 OFFCURVE",
"84 593 QCURVE",
"77 586 OFFCURVE",
"77 577 QCURVE SMOOTH",
"77 569 OFFCURVE",
"88 556 OFFCURVE",
"98 553 QCURVE",
"124 548 LINE",
"142 546 OFFCURVE",
"149 544 QCURVE",
"171 540 OFFCURVE",
"194 519 OFFCURVE",
"194 505 QCURVE SMOOTH",
"194 495 OFFCURVE",
"186 481 QCURVE SMOOTH",
"167 450 OFFCURVE",
"141 431 QCURVE SMOOTH",
"118 415 OFFCURVE",
"83 397 QCURVE SMOOTH",
"77 394 OFFCURVE",
"68 389 OFFCURVE",
"64 387 QCURVE SMOOTH",
"60 385 OFFCURVE",
"42 376 OFFCURVE",
"28 362 OFFCURVE",
"30 348 QCURVE",
"56 340 OFFCURVE",
"78 340 QCURVE SMOOTH",
"115 340 OFFCURVE",
"142 360 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"517 658 OFFCURVE",
"497 658 QCURVE SMOOTH",
"486 658 OFFCURVE",
"480 657 QCURVE SMOOTH",
"459 654 OFFCURVE",
"431 626 OFFCURVE",
"412 598 QCURVE SMOOTH",
"397 576 OFFCURVE",
"393 571 QCURVE SMOOTH",
"314 472 OFFCURVE",
"186 295 QCURVE SMOOTH",
"149 245 OFFCURVE",
"81 141 QCURVE SMOOTH",
"55 102 LINE SMOOTH",
"49 93 OFFCURVE",
"49 78 QCURVE SMOOTH",
"49 72 OFFCURVE",
"50 69 QCURVE",
"51 64 OFFCURVE",
"67 55 OFFCURVE",
"72 52 QCURVE",
"79 57 OFFCURVE",
"104 71 OFFCURVE",
"111 78 QCURVE",
"138 107 LINE SMOOTH",
"151 121 OFFCURVE",
"225 202 OFFCURVE",
"254 238 QCURVE",
"233 212 OFFCURVE",
"484 531 QCURVE SMOOTH",
"501 554 OFFCURVE",
"537 600 QCURVE SMOOTH",
"547 613 OFFCURVE",
"547 625 QCURVE SMOOTH",
"547 641 OFFCURVE",
"531 651 QCURVE"
);
},
{
closed = 1;
nodes = (
"642 115 OFFCURVE",
"626 122 OFFCURVE",
"603 120 OFFCURVE",
"596 121 QCURVE SMOOTH",
"567 126 OFFCURVE",
"546 143 OFFCURVE",
"546 168 QCURVE SMOOTH",
"546 193 OFFCURVE",
"523 272 OFFCURVE",
"496 340 OFFCURVE",
"493 342 QCURVE",
"474 350 OFFCURVE",
"469 350 QCURVE SMOOTH",
"466 350 LINE",
"443 342 OFFCURVE",
"369 262 OFFCURVE",
"306 170 OFFCURVE",
"300 151 QCURVE",
"299 147 OFFCURVE",
"299 139 QCURVE SMOOTH",
"299 126 OFFCURVE",
"302 114 QCURVE SMOOTH",
"308 91 OFFCURVE",
"342 66 OFFCURVE",
"367 66 QCURVE SMOOTH",
"383 66 OFFCURVE",
"400 69 QCURVE SMOOTH",
"405 70 OFFCURVE",
"426 72 OFFCURVE",
"434 72 QCURVE SMOOTH",
"456 72 OFFCURVE",
"474 63 QCURVE",
"493 18 LINE",
"500 -4 OFFCURVE",
"512 -4 QCURVE SMOOTH",
"516 -4 OFFCURVE",
"518 -3 QCURVE",
"525 -1 OFFCURVE",
"538 14 OFFCURVE",
"541 22 QCURVE",
"546 32 OFFCURVE",
"550 64 OFFCURVE",
"551 70 QCURVE",
"596 75 LINE",
"656 84 OFFCURVE",
"647 104 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"421 132 LINE",
"376 139 LINE",
"377 165 OFFCURVE",
"426 230 OFFCURVE",
"452 248 QCURVE",
"457 241 OFFCURVE",
"460 200 OFFCURVE",
"460 197 QCURVE",
"461 193 OFFCURVE",
"463 161 QCURVE SMOOTH",
"466 126 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
48 1 2 1 128 53 2 0 2 152 149 144 122 68 5 6 0 75 1 3 4 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 23 values pushed */
48 1 2 1 128 53 2 0 2 152 149 144 122 68 5 6 0 75 1 3 5 4 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 1 2 1 133 0 2 0 2 133 0 0 6 0 133 0 6 4 6 133 5 1 4 3 4 133 0 3 3 118 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 34 values pushed */
0 1 2 1 133 0 2 0 2 133 0 0 6 0 133 0 6 4 6 133 0 4 5 4 133 0 5 3 5 133 0 3 3 118 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
140 138 118 116 114 111 108 105 95 92 44 42 32 7 8 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 678;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = questiondown;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"481 664 OFFCURVE",
"430 698 OFFCURVE",
"411 695 QCURVE",
"410 694 OFFCURVE",
"400 684 OFFCURVE",
"399 679 QCURVE",
"378 645 OFFCURVE",
"415 606 OFFCURVE",
"442 601 OFFCURVE",
"445 601 QCURVE",
"456 602 OFFCURVE",
"486 637 OFFCURVE",
"484 649 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"335 488 OFFCURVE",
"330 471 OFFCURVE",
"329 465 QCURVE",
"312 388 OFFCURVE",
"240 265 OFFCURVE",
"176 217 QCURVE SMOOTH",
"83 146 OFFCURVE",
"81 33 QCURVE SMOOTH",
"80 9 OFFCURVE",
"82 -15 QCURVE SMOOTH",
"87 -72 OFFCURVE",
"115 -111 QCURVE SMOOTH",
"177 -196 OFFCURVE",
"276 -230 QCURVE SMOOTH",
"279 -231 OFFCURVE",
"299 -239 OFFCURVE",
"323 -245 OFFCURVE",
"336 -244 QCURVE SMOOTH",
"359 -242 OFFCURVE",
"378 -224 QCURVE",
"357 -199 LINE",
"344 -179 OFFCURVE",
"310 -162 OFFCURVE",
"283 -164 QCURVE SMOOTH",
"255 -167 OFFCURVE",
"208 -140 OFFCURVE",
"193 -115 QCURVE SMOOTH",
"168 -72 OFFCURVE",
"165 -29 QCURVE SMOOTH",
"160 30 OFFCURVE",
"195 83 QCURVE SMOOTH",
"210 106 OFFCURVE",
"251 150 QCURVE SMOOTH",
"265 166 LINE SMOOTH",
"274 176 OFFCURVE",
"293 194 QCURVE SMOOTH",
"334 234 OFFCURVE",
"348 256 QCURVE",
"366 287 OFFCURVE",
"394 350 OFFCURVE",
"412 399 QCURVE SMOOTH",
"418 414 OFFCURVE",
"417 429 QCURVE SMOOTH",
"415 454 OFFCURVE",
"373 488 OFFCURVE",
"337 492 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
2 1 0 74 38 29 15 3 0 73 1 1 0 0 118 13 13 13 58 13 57 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 559;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = Agrave;
lastChange = "2019-10-02 09:53:24 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"440 726 OFFCURVE",
"446 739 QCURVE",
"462 744 OFFCURVE",
"462 770 QCURVE SMOOTH",
"462 796 OFFCURVE",
"437 815 QCURVE SMOOTH",
"356 879 OFFCURVE",
"295 917 QCURVE SMOOTH",
"282 925 OFFCURVE",
"252 936 OFFCURVE",
"242 936 QCURVE SMOOTH",
"234 936 OFFCURVE",
"231 934 QCURVE",
"222 929 OFFCURVE",
"221 935 OFFCURVE",
"214 918 QCURVE",
"202 892 LINE",
"204 890 OFFCURVE",
"214 869 QCURVE",
"237 854 OFFCURVE",
"248 844 QCURVE",
"276 828 OFFCURVE",
"342 772 OFFCURVE",
"395 738 OFFCURVE",
"417 726 QCURVE"
);
},
{
closed = 1;
nodes = (
"681 27 LINE",
"598 258 LINE SMOOTH",
"582 301 OFFCURVE",
"565 338 QCURVE SMOOTH",
"549 374 OFFCURVE",
"529 403 QCURVE",
"528 404 OFFCURVE",
"512 423 QCURVE",
"497 436 OFFCURVE",
"454 533 OFFCURVE",
"416 631 QCURVE SMOOTH",
"400 672 OFFCURVE",
"345 727 OFFCURVE",
"307 735 QCURVE",
"303 736 OFFCURVE",
"296 736 QCURVE SMOOTH",
"279 736 OFFCURVE",
"261 714 OFFCURVE",
"251 692 QCURVE",
"245 680 OFFCURVE",
"237 666 QCURVE",
"234 663 LINE",
"217 640 OFFCURVE",
"217 628 QCURVE SMOOTH",
"217 613 OFFCURVE",
"236 601 QCURVE SMOOTH",
"239 599 OFFCURVE",
"244 585 OFFCURVE",
"244 579 QCURVE SMOOTH",
"244 574 OFFCURVE",
"242 570 QCURVE",
"61 162 LINE SMOOTH",
"50 137 OFFCURVE",
"50 124 QCURVE SMOOTH",
"50 111 OFFCURVE",
"71 95 OFFCURVE",
"95 87 QCURVE SMOOTH",
"106 83 OFFCURVE",
"117 83 QCURVE SMOOTH",
"136 83 OFFCURVE",
"163 109 OFFCURVE",
"173 132 QCURVE SMOOTH",
"187 164 OFFCURVE",
"209 200 OFFCURVE",
"248 225 OFFCURVE",
"352 244 OFFCURVE",
"385 259 QCURVE",
"390 261 OFFCURVE",
"411 270 QCURVE SMOOTH",
"436 281 OFFCURVE",
"452 281 QCURVE SMOOTH",
"467 281 OFFCURVE",
"489 263 OFFCURVE",
"497 242 QCURVE",
"511 210 OFFCURVE",
"539 131 QCURVE SMOOTH",
"558 76 OFFCURVE",
"581 20 QCURVE SMOOTH",
"586 7 OFFCURVE",
"617 -17 OFFCURVE",
"631 -19 QCURVE",
"635 -19 OFFCURVE",
"645 -13 OFFCURVE",
"658 2 OFFCURVE",
"661 5 QCURVE"
);
},
{
closed = 1;
nodes = (
"334 522 LINE",
"359 493 OFFCURVE",
"411 380 OFFCURVE",
"411 368 QCURVE SMOOTH",
"411 351 OFFCURVE",
"308 327 OFFCURVE",
"251 319 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
11 1 4 0 96 95 61 3 2 1 2 76 0 0 4 0 133 0 4 1 4 133 0 1 2 1 133 0 2 3 2 133 0 3 3 118 74 73 42 46 25 29 5 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 731;
}
);
leftKerningGroup = A;
note = Agrave;
rightKerningGroup = A;
unicode = 00C0;
},
{
glyphname = Aacute;
lastChange = "2019-10-02 10:42:09 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"226 719 OFFCURVE",
"258 695 OFFCURVE",
"348 724 OFFCURVE",
"448 789 OFFCURVE",
"461 813 QCURVE",
"471 821 OFFCURVE",
"469 839 OFFCURVE",
"443 865 QCURVE SMOOTH",
"435 873 OFFCURVE",
"428 877 QCURVE SMOOTH",
"404 891 OFFCURVE",
"372 867 QCURVE SMOOTH",
"315 825 LINE SMOOTH",
"283 802 OFFCURVE",
"249 784 QCURVE SMOOTH",
"228 773 OFFCURVE",
"222 759 QCURVE",
"216 743 OFFCURVE",
"223 726 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"611 136 OFFCURVE",
"599 154 QCURVE SMOOTH",
"585 175 OFFCURVE",
"570 202 OFFCURVE",
"570 215 QCURVE SMOOTH",
"570 243 OFFCURVE",
"551 284 OFFCURVE",
"532 303 QCURVE SMOOTH",
"518 317 OFFCURVE",
"512 339 QCURVE SMOOTH",
"502 378 LINE SMOOTH",
"473 494 OFFCURVE",
"456 570 QCURVE SMOOTH",
"445 620 OFFCURVE",
"394 672 OFFCURVE",
"342 682 QCURVE SMOOTH",
"327 685 OFFCURVE",
"275 664 OFFCURVE",
"226 631 OFFCURVE",
"219 616 QCURVE SMOOTH",
"210 598 OFFCURVE",
"198 576 QCURVE SMOOTH",
"171 526 OFFCURVE",
"142 460 OFFCURVE",
"132 426 QCURVE SMOOTH",
"111 355 OFFCURVE",
"81 209 OFFCURVE",
"61 100 QCURVE SMOOTH",
"59 89 OFFCURVE",
"87 54 OFFCURVE",
"99 50 QCURVE SMOOTH",
"102 49 OFFCURVE",
"108 49 QCURVE SMOOTH",
"120 49 OFFCURVE",
"152 62 OFFCURVE",
"157 71 QCURVE SMOOTH",
"174 101 OFFCURVE",
"194 159 QCURVE",
"198 182 OFFCURVE",
"219 202 OFFCURVE",
"237 202 QCURVE SMOOTH",
"249 202 OFFCURVE",
"263 199 QCURVE SMOOTH",
"305 190 OFFCURVE",
"358 188 QCURVE SMOOTH",
"381 187 OFFCURVE",
"423 192 QCURVE SMOOTH",
"447 195 OFFCURVE",
"476 182 OFFCURVE",
"490 164 QCURVE",
"543 98 OFFCURVE",
"627 6 QCURVE",
"634 -3 OFFCURVE",
"658 -11 QCURVE",
"669 -13 OFFCURVE",
"679 -19 QCURVE",
"680 -11 OFFCURVE",
"683 1 OFFCURVE",
"683 7 QCURVE SMOOTH",
"683 10 OFFCURVE",
"682 12 QCURVE SMOOTH",
"651 74 OFFCURVE",
"618 125 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"228 298 LINE",
"227 304 OFFCURVE",
"237 352 OFFCURVE",
"263 426 OFFCURVE",
"296 514 OFFCURVE",
"342 514 QCURVE",
"378 402 OFFCURVE",
"417 295 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
25 1 2 73 0 3 4 3 133 0 0 1 2 1 0 114 0 2 2 132 0 4 1 1 4 87 0 4 4 1 97 0 1 4 1 81 89 87 84 83 48 47 41 39 37 35 5 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 740;
}
);
leftKerningGroup = A;
note = Aacute;
rightKerningGroup = A;
unicode = 00C1;
},
{
glyphname = Acircumflex;
lastChange = "2019-10-02 09:53:00 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"330 739 OFFCURVE",
"343 739 QCURVE SMOOTH",
"346 739 LINE",
"372 741 OFFCURVE",
"390 759 QCURVE SMOOTH",
"437 805 LINE",
"452 789 LINE",
"464 774 OFFCURVE",
"467 772 QCURVE",
"481 759 OFFCURVE",
"501 762 QCURVE",
"510 764 OFFCURVE",
"520 774 OFFCURVE",
"520 781 QCURVE SMOOTH",
"520 786 OFFCURVE",
"519 789 QCURVE SMOOTH",
"512 811 OFFCURVE",
"495 842 QCURVE SMOOTH",
"478 878 OFFCURVE",
"448 878 QCURVE SMOOTH",
"430 878 OFFCURVE",
"410 862 QCURVE",
"354 814 LINE",
"316 781 LINE",
"307 772 OFFCURVE",
"307 763 QCURVE SMOOTH",
"307 751 OFFCURVE",
"319 746 QCURVE"
);
},
{
closed = 1;
nodes = (
"574 211 LINE SMOOTH",
"564 263 OFFCURVE",
"560 289 QCURVE SMOOTH",
"535 441 LINE",
"504 622 LINE SMOOTH",
"499 654 OFFCURVE",
"475 694 OFFCURVE",
"449 702 QCURVE SMOOTH",
"431 707 OFFCURVE",
"418 707 QCURVE SMOOTH",
"374 707 OFFCURVE",
"346 661 QCURVE SMOOTH",
"341 651 OFFCURVE",
"331 637 OFFCURVE",
"328 631 QCURVE",
"317 614 LINE SMOOTH",
"288 571 OFFCURVE",
"278 552 QCURVE SMOOTH",
"212 421 LINE SMOOTH",
"167 329 OFFCURVE",
"134 269 QCURVE SMOOTH",
"118 240 OFFCURVE",
"79 213 QCURVE",
"74 209 LINE",
"61 200 OFFCURVE",
"50 190 OFFCURVE",
"50 184 QCURVE SMOOTH",
"50 175 OFFCURVE",
"60 163 QCURVE SMOOTH",
"62 159 OFFCURVE",
"62 152 QCURVE SMOOTH",
"62 148 OFFCURVE",
"61 139 QCURVE SMOOTH",
"59 129 OFFCURVE",
"59 125 QCURVE",
"60 115 LINE SMOOTH",
"61 105 OFFCURVE",
"63 86 OFFCURVE",
"68 81 QCURVE",
"86 60 OFFCURVE",
"115 60 QCURVE SMOOTH",
"123 60 OFFCURVE",
"126 61 QCURVE",
"144 63 OFFCURVE",
"172 84 OFFCURVE",
"180 100 QCURVE SMOOTH",
"187 115 OFFCURVE",
"199 154 QCURVE",
"206 180 OFFCURVE",
"221 205 OFFCURVE",
"258 219 OFFCURVE",
"296 219 QCURVE SMOOTH",
"306 219 OFFCURVE",
"341 217 QCURVE",
"350 217 OFFCURVE",
"378 220 QCURVE SMOOTH",
"418 224 OFFCURVE",
"436 224 QCURVE SMOOTH",
"446 224 OFFCURVE",
"450 222 QCURVE",
"468 209 OFFCURVE",
"472 175 QCURVE",
"484 101 OFFCURVE",
"490 74 QCURVE SMOOTH",
"497 35 LINE SMOOTH",
"502 7 OFFCURVE",
"528 -19 OFFCURVE",
"549 -19 QCURVE SMOOTH",
"577 -19 OFFCURVE",
"589 -2 QCURVE",
"602 12 OFFCURVE",
"602 36 QCURVE SMOOTH",
"602 44 OFFCURVE",
"601 49 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"405 558 LINE",
"450 287 LINE",
"256 281 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 20 values pushed */
21 13 2 1 0 104 1 7 6 74 66 2 5 3 29 1 2 5 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 20 values pushed */
21 13 2 1 0 104 1 7 6 74 66 2 5 4 29 1 2 5 4 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 0 1 0 133 0 1 6 1 133 0 6 7 6 133 0 5 3 2 3 5 2 128 0 7 4 1 3 5 7 3 105 0 2 2 31 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 44 values pushed */
0 0 1 0 133 0 1 6 1 133 0 6 7 6 133 0 3 7 4 4 3 114 0 5 4 2 4 5 2 128 0 7 0 4 5 7 4 105 0 2 2 31 2 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
103 102 92 90 61 60 50 46 44 43 34 32 26 24 38 8 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 677;
}
);
leftKerningGroup = A;
note = Acircumflex;
rightKerningGroup = A;
unicode = 00C2;
},
{
glyphname = Atilde;
lastChange = "2019-10-02 10:41:43 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"661 901 OFFCURVE",
"644 901 QCURVE SMOOTH",
"620 901 OFFCURVE",
"609 884 QCURVE SMOOTH",
"598 867 OFFCURVE",
"587 852 OFFCURVE",
"563 839 OFFCURVE",
"545 839 QCURVE SMOOTH",
"533 839 OFFCURVE",
"512 847 OFFCURVE",
"487 862 OFFCURVE",
"478 867 QCURVE",
"451 881 OFFCURVE",
"413 892 QCURVE SMOOTH",
"403 895 OFFCURVE",
"392 895 QCURVE SMOOTH",
"370 895 OFFCURVE",
"356 884 QCURVE SMOOTH",
"329 864 OFFCURVE",
"294 829 QCURVE SMOOTH",
"291 826 OFFCURVE",
"296 813 OFFCURVE",
"301 808 QCURVE SMOOTH",
"312 797 OFFCURVE",
"328 797 QCURVE SMOOTH",
"340 797 OFFCURVE",
"349 801 QCURVE",
"368 808 OFFCURVE",
"412 826 QCURVE",
"431 817 LINE",
"456 805 LINE",
"495 789 OFFCURVE",
"510 785 QCURVE SMOOTH",
"533 779 OFFCURVE",
"557 779 QCURVE SMOOTH",
"597 779 OFFCURVE",
"669 810 OFFCURVE",
"688 836 QCURVE SMOOTH",
"697 848 OFFCURVE",
"697 860 QCURVE SMOOTH",
"697 880 OFFCURVE",
"676 892 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"575 684 OFFCURVE",
"523 716 OFFCURVE",
"492 716 QCURVE SMOOTH",
"467 716 OFFCURVE",
"442 705 QCURVE SMOOTH",
"405 689 OFFCURVE",
"255 465 OFFCURVE",
"99 189 OFFCURVE",
"56 102 QCURVE SMOOTH",
"50 90 OFFCURVE",
"50 79 QCURVE SMOOTH",
"50 62 OFFCURVE",
"65 45 QCURVE SMOOTH",
"90 18 OFFCURVE",
"120 18 QCURVE SMOOTH",
"153 18 OFFCURVE",
"173 52 QCURVE SMOOTH",
"201 99 OFFCURVE",
"220 136 QCURVE SMOOTH",
"237 169 OFFCURVE",
"276 177 QCURVE SMOOTH",
"285 179 OFFCURVE",
"355 182 OFFCURVE",
"393 182 QCURVE SMOOTH",
"455 182 OFFCURVE",
"542 174 OFFCURVE",
"544 164 QCURVE",
"561 97 OFFCURVE",
"598 -12 OFFCURVE",
"622 -17 QCURVE SMOOTH",
"632 -19 OFFCURVE",
"636 -19 QCURVE SMOOTH",
"652 -19 OFFCURVE",
"674 0 OFFCURVE",
"675 17 QCURVE",
"676 24 OFFCURVE",
"665 100 OFFCURVE",
"662 123 QCURVE SMOOTH",
"648 215 OFFCURVE",
"634 328 OFFCURVE",
"634 363 QCURVE",
"629 425 OFFCURVE",
"600 632 OFFCURVE",
"589 655 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"297 308 OFFCURVE",
"393 465 OFFCURVE",
"486 594 OFFCURVE",
"505 597 QCURVE",
"523 508 OFFCURVE",
"525 301 QCURVE",
"526 291 OFFCURVE",
"526 272 QCURVE",
"508 269 OFFCURVE",
"491 269 QCURVE SMOOTH",
"469 269 OFFCURVE",
"417 277 OFFCURVE",
"410 278 QCURVE SMOOTH",
"354 288 OFFCURVE",
"326 288 QCURVE SMOOTH",
"307 288 OFFCURVE",
"287 285 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
12 1 1 3 98 96 44 3 9 8 102 94 2 10 9 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 54 values pushed */
4 1 2 3 2 133 0 1 3 0 3 1 0 128 0 10 9 6 9 10 6 128 0 3 0 0 8 3 0 105 0 9 0 6 7 9 6 105 0 8 8 36 77 0 7 7 34 77 0 5 5 31 5 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 57 values pushed */
4 1 2 3 2 133 0 1 3 0 3 1 0 128 0 8 0 9 0 8 9 128 0 10 9 6 9 10 6 128 0 3 0 0 8 3 0 105 0 9 0 6 7 9 6 105 0 7 7 34 77 0 5 5 31 5 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 61 values pushed */
0 4 2 4 133 0 2 3 2 133 0 1 3 0 3 1 0 128 0 8 0 9 0 8 9 128 0 10 9 6 9 10 6 128 0 3 0 0 8 3 0 105 0 9 0 6 7 9 6 105 0 7 7 34 77 0 5 5 31 5 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
93 91 88 86 42 38 55 28 36 38 39 40 37 11 8 31 
CALL[ ]\011/* CallFunction */";
};
width = 740;
}
);
leftKerningGroup = A;
note = Atilde;
rightKerningGroup = A;
unicode = 00C3;
},
{
glyphname = Adieresis;
lastChange = "2019-10-02 09:53:43 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"360 803 OFFCURVE",
"360 806 QCURVE SMOOTH",
"360 825 OFFCURVE",
"312 855 OFFCURVE",
"281 854 QCURVE",
"254 809 LINE",
"268 801 OFFCURVE",
"275 796 QCURVE SMOOTH",
"278 794 OFFCURVE",
"307 776 OFFCURVE",
"322 772 QCURVE SMOOTH",
"329 770 OFFCURVE",
"354 788 OFFCURVE",
"358 797 QCURVE"
);
},
{
closed = 1;
nodes = (
"592 823 OFFCURVE",
"571 815 OFFCURVE",
"559 809 QCURVE SMOOTH",
"533 796 OFFCURVE",
"523 792 QCURVE",
"531 787 OFFCURVE",
"556 767 QCURVE",
"582 744 OFFCURVE",
"599 738 QCURVE SMOOTH",
"607 735 OFFCURVE",
"615 735 QCURVE SMOOTH",
"630 735 OFFCURVE",
"650 754 OFFCURVE",
"650 772 QCURVE SMOOTH",
"650 794 OFFCURVE",
"622 821 OFFCURVE",
"600 823 QCURVE"
);
},
{
closed = 1;
nodes = (
"598 222 LINE SMOOTH",
"588 276 OFFCURVE",
"584 303 QCURVE SMOOTH",
"557 462 LINE",
"525 652 LINE SMOOTH",
"520 685 OFFCURVE",
"495 727 OFFCURVE",
"467 735 QCURVE SMOOTH",
"449 740 OFFCURVE",
"435 740 QCURVE SMOOTH",
"389 740 OFFCURVE",
"360 692 QCURVE SMOOTH",
"354 682 OFFCURVE",
"344 667 OFFCURVE",
"341 661 QCURVE",
"329 643 LINE SMOOTH",
"299 598 OFFCURVE",
"289 578 QCURVE SMOOTH",
"219 441 LINE SMOOTH",
"172 345 OFFCURVE",
"138 282 QCURVE SMOOTH",
"121 252 OFFCURVE",
"80 224 QCURVE",
"75 220 LINE",
"61 210 OFFCURVE",
"50 200 OFFCURVE",
"50 193 QCURVE SMOOTH",
"50 184 OFFCURVE",
"60 171 QCURVE SMOOTH",
"63 167 OFFCURVE",
"63 160 QCURVE SMOOTH",
"63 156 OFFCURVE",
"61 146 QCURVE SMOOTH",
"59 136 OFFCURVE",
"59 132 QCURVE",
"60 121 LINE SMOOTH",
"61 111 OFFCURVE",
"64 91 OFFCURVE",
"69 86 QCURVE",
"88 64 OFFCURVE",
"118 64 QCURVE SMOOTH",
"126 64 OFFCURVE",
"130 65 QCURVE",
"148 67 OFFCURVE",
"178 89 OFFCURVE",
"186 106 QCURVE SMOOTH",
"193 121 OFFCURVE",
"206 162 QCURVE",
"213 189 OFFCURVE",
"229 215 OFFCURVE",
"268 230 OFFCURVE",
"307 230 QCURVE SMOOTH",
"318 230 OFFCURVE",
"354 228 QCURVE",
"364 228 OFFCURVE",
"393 231 QCURVE SMOOTH",
"435 235 OFFCURVE",
"454 235 QCURVE SMOOTH",
"464 235 OFFCURVE",
"468 233 QCURVE",
"487 219 OFFCURVE",
"491 184 QCURVE",
"504 107 OFFCURVE",
"510 78 QCURVE SMOOTH",
"518 37 LINE SMOOTH",
"523 8 OFFCURVE",
"550 -19 OFFCURVE",
"572 -19 QCURVE SMOOTH",
"601 -19 OFFCURVE",
"614 -1 QCURVE",
"627 13 OFFCURVE",
"627 39 QCURVE SMOOTH",
"627 47 OFFCURVE",
"626 52 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"421 585 LINE",
"468 301 LINE",
"265 295 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
25 11 7 3 7 2 107 1 8 1 77 69 2 6 4 32 1 3 6 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
25 11 7 3 7 2 107 1 8 1 77 69 2 6 5 32 1 3 6 4 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
0 0 2 0 133 0 7 2 1 2 7 1 128 0 6 4 3 4 6 3 128 9 1 2 0 1 8 2 1 105 0 8 5 1 4 6 8 4 105 0 3 3 31 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 51 values pushed */
0 0 2 0 133 0 7 2 1 2 7 1 128 0 4 8 5 5 4 114 0 6 5 3 5 6 3 128 9 1 2 0 1 8 2 1 105 0 8 0 5 6 8 5 105 0 3 3 31 3 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 23 values pushed */
14 14 106 105 95 93 64 63 53 49 47 46 37 35 14 30 14 29 25 24 10 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 700;
}
);
leftKerningGroup = A;
note = Adieresis;
rightKerningGroup = A;
unicode = 00C4;
},
{
glyphname = Aring;
lastChange = "2019-10-02 09:53:58 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"585 693 OFFCURVE",
"607 728 QCURVE",
"620 750 OFFCURVE",
"620 775 QCURVE SMOOTH",
"620 792 OFFCURVE",
"612 827 QCURVE",
"611 832 OFFCURVE",
"596 844 OFFCURVE",
"588 848 QCURVE SMOOTH",
"581 851 OFFCURVE",
"556 861 OFFCURVE",
"549 866 QCURVE SMOOTH",
"523 885 OFFCURVE",
"503 885 QCURVE SMOOTH",
"494 885 OFFCURVE",
"486 882 QCURVE SMOOTH",
"451 869 OFFCURVE",
"414 821 OFFCURVE",
"414 789 QCURVE SMOOTH",
"414 766 OFFCURVE",
"423 741 QCURVE",
"432 714 OFFCURVE",
"499 679 OFFCURVE",
"532 679 QCURVE SMOOTH",
"547 679 OFFCURVE",
"560 684 QCURVE"
);
},
{
closed = 1;
nodes = (
"528 833 OFFCURVE",
"551 833 QCURVE",
"555 834 OFFCURVE",
"571 818 OFFCURVE",
"574 816 QCURVE",
"579 805 OFFCURVE",
"579 798 QCURVE SMOOTH",
"579 781 OFFCURVE",
"561 759 QCURVE",
"554 753 OFFCURVE",
"529 744 OFFCURVE",
"517 744 QCURVE SMOOTH",
"496 744 OFFCURVE",
"488 753 QCURVE SMOOTH",
"483 759 OFFCURVE",
"472 780 OFFCURVE",
"471 790 QCURVE",
"475 798 OFFCURVE",
"490 814 OFFCURVE",
"498 818 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"615 393 OFFCURVE",
"587 589 OFFCURVE",
"577 611 QCURVE SMOOTH",
"564 639 OFFCURVE",
"514 669 OFFCURVE",
"485 669 QCURVE SMOOTH",
"461 669 OFFCURVE",
"437 659 QCURVE SMOOTH",
"401 644 OFFCURVE",
"260 431 OFFCURVE",
"115 167 OFFCURVE",
"71 86 QCURVE SMOOTH",
"65 75 OFFCURVE",
"65 64 QCURVE SMOOTH",
"65 48 OFFCURVE",
"79 32 QCURVE SMOOTH",
"102 5 OFFCURVE",
"131 6 QCURVE SMOOTH",
"163 7 OFFCURVE",
"182 38 QCURVE SMOOTH",
"209 82 OFFCURVE",
"226 118 QCURVE SMOOTH",
"242 152 OFFCURVE",
"280 157 QCURVE SMOOTH",
"288 158 OFFCURVE",
"355 162 OFFCURVE",
"391 162 QCURVE SMOOTH",
"450 162 OFFCURVE",
"532 154 OFFCURVE",
"534 145 QCURVE",
"550 81 OFFCURVE",
"585 -22 OFFCURVE",
"608 -27 QCURVE SMOOTH",
"618 -29 OFFCURVE",
"622 -29 QCURVE SMOOTH",
"637 -29 OFFCURVE",
"658 -11 OFFCURVE",
"659 5 QCURVE",
"660 12 OFFCURVE",
"649 84 OFFCURVE",
"646 106 QCURVE SMOOTH",
"634 193 OFFCURVE",
"620 301 OFFCURVE",
"620 334 QCURVE"
);
},
{
closed = 1;
nodes = (
"300 282 OFFCURVE",
"391 431 OFFCURVE",
"479 553 OFFCURVE",
"497 556 QCURVE",
"514 471 OFFCURVE",
"516 275 QCURVE",
"517 265 OFFCURVE",
"517 247 QCURVE",
"500 245 OFFCURVE",
"484 245 QCURVE SMOOTH",
"463 245 OFFCURVE",
"414 252 OFFCURVE",
"407 253 QCURVE SMOOTH",
"354 261 OFFCURVE",
"327 263 QCURVE SMOOTH",
"309 264 OFFCURVE",
"290 260 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
38 28 2 2 1 102 100 89 3 7 6 106 98 2 8 7 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
0 1 2 1 133 0 8 7 4 7 8 4 128 0 2 0 0 6 2 0 106 0 7 0 4 5 7 4 105 0 6 6 36 77 0 5 5 34 77 0 3 3 31 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 48 values pushed */
0 1 2 1 133 0 6 0 7 0 6 7 128 0 8 7 4 7 8 4 128 0 2 0 0 6 2 0 106 0 7 0 4 5 7 4 105 0 5 5 34 77 0 3 3 31 3 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 19 values pushed */
97 95 92 90 84 82 72 70 64 61 54 53 34 32 40 32 9 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 725;
}
);
leftKerningGroup = A;
note = Aring;
rightKerningGroup = A;
unicode = 00C5;
},
{
glyphname = AE;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"887 117 LINE SMOOTH",
"879 117 OFFCURVE",
"821 115 OFFCURVE",
"797 111 QCURVE",
"773 108 OFFCURVE",
"725 98 QCURVE SMOOTH",
"688 90 OFFCURVE",
"634 81 OFFCURVE",
"608 81 QCURVE SMOOTH",
"579 81 OFFCURVE",
"558 86 QCURVE",
"553 87 OFFCURVE",
"541 163 OFFCURVE",
"542 170 QCURVE SMOOTH",
"543 179 OFFCURVE",
"553 199 OFFCURVE",
"560 202 QCURVE",
"566 205 OFFCURVE",
"717 229 QCURVE SMOOTH",
"895 256 OFFCURVE",
"912 262 QCURVE",
"919 264 OFFCURVE",
"931 286 OFFCURVE",
"929 294 QCURVE",
"928 302 OFFCURVE",
"914 319 OFFCURVE",
"905 325 QCURVE",
"898 331 OFFCURVE",
"881 331 QCURVE SMOOTH",
"874 331 LINE",
"820 327 LINE SMOOTH",
"654 314 OFFCURVE",
"586 314 QCURVE SMOOTH",
"542 314 OFFCURVE",
"521 318 QCURVE",
"492 425 OFFCURVE",
"492 528 QCURVE SMOOTH",
"492 546 OFFCURVE",
"494 580 QCURVE",
"530 596 LINE SMOOTH",
"592 625 OFFCURVE",
"631 639 QCURVE SMOOTH",
"660 649 OFFCURVE",
"745 671 QCURVE SMOOTH",
"783 680 LINE",
"809 686 LINE",
"835 690 OFFCURVE",
"845 695 QCURVE SMOOTH",
"853 699 OFFCURVE",
"868 717 OFFCURVE",
"868 725 QCURVE",
"869 733 OFFCURVE",
"857 752 OFFCURVE",
"849 758 QCURVE SMOOTH",
"821 779 OFFCURVE",
"781 779 QCURVE SMOOTH",
"767 779 OFFCURVE",
"737 775 QCURVE SMOOTH",
"705 770 OFFCURVE",
"657 760 OFFCURVE",
"641 757 QCURVE",
"615 751 OFFCURVE",
"561 741 QCURVE",
"552 739 OFFCURVE",
"497 727 OFFCURVE",
"473 727 QCURVE SMOOTH",
"458 727 OFFCURVE",
"436 732 QCURVE",
"424 736 OFFCURVE",
"410 736 QCURVE SMOOTH",
"364 736 OFFCURVE",
"333 680 QCURVE SMOOTH",
"268 566 OFFCURVE",
"160 335 OFFCURVE",
"87 166 QCURVE SMOOTH",
"60 104 LINE SMOOTH",
"50 79 OFFCURVE",
"50 62 QCURVE SMOOTH",
"50 34 OFFCURVE",
"69 10 QCURVE",
"82 9 OFFCURVE",
"100 5 QCURVE SMOOTH",
"116 1 OFFCURVE",
"123 1 QCURVE SMOOTH",
"142 1 OFFCURVE",
"165 14 QCURVE",
"169 22 OFFCURVE",
"184 52 OFFCURVE",
"185 63 QCURVE SMOOTH",
"188 113 OFFCURVE",
"208 161 OFFCURVE",
"238 176 OFFCURVE",
"264 176 QCURVE SMOOTH",
"311 176 LINE SMOOTH",
"320 176 OFFCURVE",
"344 182 OFFCURVE",
"352 183 QCURVE SMOOTH",
"362 184 OFFCURVE",
"389 190 OFFCURVE",
"397 190 QCURVE SMOOTH",
"410 190 OFFCURVE",
"428 174 OFFCURVE",
"432 153 QCURVE SMOOTH",
"464 -19 OFFCURVE",
"525 -19 QCURVE SMOOTH",
"533 -19 OFFCURVE",
"542 -16 QCURVE SMOOTH",
"570 -7 OFFCURVE",
"623 -1 OFFCURVE",
"670 1 QCURVE",
"709 1 OFFCURVE",
"740 5 QCURVE SMOOTH",
"761 8 OFFCURVE",
"803 12 QCURVE SMOOTH",
"887 22 OFFCURVE",
"929 29 QCURVE SMOOTH",
"955 33 OFFCURVE",
"987 51 OFFCURVE",
"992 75 QCURVE",
"981 99 OFFCURVE",
"941 117 OFFCURVE",
"913 117 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 305 OFFCURVE",
"301 423 OFFCURVE",
"352 534 OFFCURVE",
"372 554 QCURVE",
"379 534 OFFCURVE",
"402 367 OFFCURVE",
"404 353 QCURVE SMOOTH",
"410 309 LINE",
"414 289 OFFCURVE",
"372 268 OFFCURVE",
"336 268 QCURVE SMOOTH",
"299 268 OFFCURVE",
"253 279 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
130 82 2 9 6 134 1 12 8 107 1 11 3 32 2 2 0 10 4 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 72 values pushed */
0 7 5 7 133 0 5 6 5 133 0 9 6 8 6 9 8 128 0 8 12 6 8 12 126 0 2 12 3 12 2 3 128 13 1 11 3 10 3 11 10 128 0 12 0 3 11 12 3 105 0 6 6 36 77 0 10 10 0 98 4 1 0 0 40 77 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 67 values pushed */
0 7 5 7 133 0 5 6 5 133 0 6 9 6 133 0 9 8 9 133 0 8 12 8 133 0 2 12 3 12 2 3 128 13 1 11 3 10 3 11 10 128 0 12 0 3 11 12 3 105 0 10 10 0 98 4 1 0 0 40 77 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 65 values pushed */
0 7 5 7 133 0 5 6 5 133 0 6 9 6 133 0 9 8 9 133 0 8 12 8 133 0 2 12 3 12 2 3 128 13 1 11 3 10 3 11 10 128 0 12 0 3 11 12 3 105 0 10 4 1 0 1 10 0 106 0 1 1 31 1 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 25 values pushed */
0 0 124 122 0 121 0 118 113 111 93 91 89 87 40 34 45 23 53 19 35 42 14 8 30 
CALL[ ]\011/* CallFunction */";
};
width = 1042;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = Ccedilla;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"557 179 OFFCURVE",
"535 168 QCURVE SMOOTH",
"509 156 LINE",
"460 136 OFFCURVE",
"378 114 OFFCURVE",
"336 114 QCURVE SMOOTH",
"238 114 OFFCURVE",
"201 189 QCURVE SMOOTH",
"149 300 OFFCURVE",
"149 420 QCURVE SMOOTH",
"149 473 OFFCURVE",
"160 533 QCURVE SMOOTH",
"168 577 OFFCURVE",
"271 623 OFFCURVE",
"335 623 QCURVE SMOOTH",
"372 623 OFFCURVE",
"397 616 QCURVE SMOOTH",
"401 615 OFFCURVE",
"432 604 OFFCURVE",
"444 604 QCURVE SMOOTH",
"453 604 OFFCURVE",
"474 618 OFFCURVE",
"480 627 QCURVE",
"483 632 OFFCURVE",
"483 638 QCURVE SMOOTH",
"483 646 OFFCURVE",
"479 660 QCURVE",
"476 667 OFFCURVE",
"463 680 QCURVE SMOOTH",
"440 703 OFFCURVE",
"340 729 OFFCURVE",
"283 729 QCURVE SMOOTH",
"231 729 OFFCURVE",
"147 706 OFFCURVE",
"127 684 QCURVE SMOOTH",
"71 621 OFFCURVE",
"61 562 QCURVE SMOOTH",
"50 498 OFFCURVE",
"50 440 QCURVE SMOOTH",
"50 299 OFFCURVE",
"111 177 QCURVE SMOOTH",
"141 115 OFFCURVE",
"176 96 QCURVE SMOOTH",
"198 85 OFFCURVE",
"233 56 OFFCURVE",
"261 30 QCURVE SMOOTH",
"299 -6 OFFCURVE",
"326 -24 QCURVE SMOOTH",
"375 -57 OFFCURVE",
"375 -107 QCURVE SMOOTH",
"375 -141 OFFCURVE",
"352 -178 QCURVE SMOOTH",
"345 -190 OFFCURVE",
"321 -213 OFFCURVE",
"317 -217 QCURVE",
"312 -223 OFFCURVE",
"296 -237 OFFCURVE",
"292 -242 QCURVE",
"287 -247 OFFCURVE",
"287 -257 QCURVE SMOOTH",
"287 -266 OFFCURVE",
"297 -283 OFFCURVE",
"306 -285 QCURVE",
"328 -292 OFFCURVE",
"354 -292 QCURVE SMOOTH",
"384 -292 OFFCURVE",
"408 -278 QCURVE SMOOTH",
"449 -254 OFFCURVE",
"502 -179 OFFCURVE",
"502 -132 QCURVE SMOOTH",
"502 -108 OFFCURVE",
"495 -86 QCURVE SMOOTH",
"489 -65 OFFCURVE",
"468 -15 QCURVE SMOOTH",
"464 -6 OFFCURVE",
"454 17 OFFCURVE",
"449 31 QCURVE",
"489 50 LINE SMOOTH",
"532 69 OFFCURVE",
"572 90 QCURVE SMOOTH",
"607 108 OFFCURVE",
"614 144 QCURVE SMOOTH",
"617 161 OFFCURVE",
"599 186 OFFCURVE",
"584 186 QCURVE SMOOTH",
"581 186 OFFCURVE",
"573 184 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
9 1 1 5 1 76 0 3 4 0 4 3 0 128 0 0 5 4 0 5 126 0 2 0 4 3 2 4 105 0 5 1 1 5 89 0 5 5 1 97 0 1 5 1 81 81 79 72 70 67 65 55 53 22 20 32 6 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 665;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Egrave;
lastChange = "2019-10-02 09:54:31 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"340 795 OFFCURVE",
"417 769 QCURVE SMOOTH",
"437 763 OFFCURVE",
"452 763 QCURVE SMOOTH",
"486 763 OFFCURVE",
"507 789 QCURVE",
"513 797 OFFCURVE",
"526 807 QCURVE",
"533 812 OFFCURVE",
"543 823 OFFCURVE",
"543 828 QCURVE SMOOTH",
"543 836 OFFCURVE",
"522 849 QCURVE SMOOTH",
"470 880 OFFCURVE",
"372 921 QCURVE SMOOTH",
"317 945 LINE",
"308 932 LINE",
"270 934 OFFCURVE",
"232 921 OFFCURVE",
"217 901 OFFCURVE",
"207 877 QCURVE SMOOTH",
"204 870 OFFCURVE",
"204 862 QCURVE SMOOTH",
"204 844 OFFCURVE",
"238 816 OFFCURVE",
"269 810 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"348 597 OFFCURVE",
"418 597 QCURVE SMOOTH",
"427 597 OFFCURVE",
"447 595 QCURVE SMOOTH",
"456 594 OFFCURVE",
"475 594 QCURVE SMOOTH",
"502 594 OFFCURVE",
"552 600 QCURVE SMOOTH",
"596 604 LINE",
"603 628 LINE",
"599 631 OFFCURVE",
"589 639 OFFCURVE",
"581 644 QCURVE",
"547 672 OFFCURVE",
"527 676 QCURVE SMOOTH",
"404 701 OFFCURVE",
"303 701 QCURVE SMOOTH",
"252 701 OFFCURVE",
"171 674 OFFCURVE",
"144 638 QCURVE SMOOTH",
"133 624 OFFCURVE",
"133 601 QCURVE SMOOTH",
"133 589 OFFCURVE",
"137 584 QCURVE",
"151 565 OFFCURVE",
"195 544 OFFCURVE",
"219 544 QCURVE SMOOTH",
"245 544 OFFCURVE",
"269 556 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"706 191 OFFCURVE",
"689 191 QCURVE SMOOTH",
"679 191 OFFCURVE",
"657 181 OFFCURVE",
"654 180 QCURVE SMOOTH",
"573 151 LINE SMOOTH",
"435 101 OFFCURVE",
"364 79 QCURVE SMOOTH",
"334 69 OFFCURVE",
"314 69 QCURVE SMOOTH",
"276 69 OFFCURVE",
"262 105 QCURVE SMOOTH",
"224 202 OFFCURVE",
"205 280 QCURVE",
"203 290 OFFCURVE",
"203 295 QCURVE SMOOTH",
"203 300 LINE SMOOTH",
"203 348 OFFCURVE",
"265 351 QCURVE SMOOTH",
"396 358 OFFCURVE",
"497 375 QCURVE SMOOTH",
"515 378 OFFCURVE",
"559 411 OFFCURVE",
"558 422 QCURVE SMOOTH",
"556 450 OFFCURVE",
"517 483 OFFCURVE",
"485 481 QCURVE SMOOTH",
"434 478 LINE SMOOTH",
"357 476 OFFCURVE",
"311 467 QCURVE SMOOTH",
"296 464 OFFCURVE",
"282 464 QCURVE SMOOTH",
"258 464 OFFCURVE",
"216 483 OFFCURVE",
"192 504 QCURVE",
"175 520 OFFCURVE",
"123 531 OFFCURVE",
"81 534 QCURVE",
"74 534 OFFCURVE",
"57 455 QCURVE",
"56 449 OFFCURVE",
"56 438 QCURVE SMOOTH",
"57 402 LINE",
"52 402 OFFCURVE",
"50 401 QCURVE",
"55 349 LINE",
"59 279 OFFCURVE",
"69 237 QCURVE SMOOTH",
"86 164 OFFCURVE",
"180 40 OFFCURVE",
"311 -31 OFFCURVE",
"380 -27 QCURVE SMOOTH",
"440 -24 OFFCURVE",
"545 18 OFFCURVE",
"623 58 QCURVE SMOOTH",
"670 83 OFFCURVE",
"703 98 QCURVE SMOOTH",
"716 104 OFFCURVE",
"732 123 OFFCURVE",
"732 136 QCURVE SMOOTH",
"732 152 OFFCURVE",
"721 168 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
2 1 1 0 74 71 2 10 8 70 1 12 10 3 76 9 1 0 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 69 values pushed */
0 0 1 0 133 0 1 3 1 133 0 2 4 7 4 2 7 128 0 7 9 4 7 9 126 0 9 8 8 9 112 0 12 10 11 10 12 11 128 0 8 0 10 12 8 10 106 5 1 4 4 3 97 0 3 3 36 77 0 11 11 6 97 0 6 6 31 6 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 67 values pushed */
0 0 1 0 133 0 1 3 1 133 0 2 4 7 4 2 7 128 0 7 9 4 7 9 126 0 9 8 8 9 112 0 12 10 11 10 12 11 128 0 3 5 1 4 2 3 4 105 0 8 0 10 12 8 10 106 0 11 11 6 97 0 6 6 31 6 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 72 values pushed */
0 0 1 0 133 0 1 3 1 133 0 2 4 7 4 2 7 128 0 7 9 4 7 9 126 0 9 8 8 9 112 0 12 10 11 10 12 11 128 0 3 5 1 4 2 3 4 105 0 8 0 10 12 8 10 106 0 11 6 6 11 89 0 11 11 6 97 0 6 11 6 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 20 values pushed */
115 113 107 105 98 96 90 87 36 44 42 34 41 40 36 44 23 13 8 31 
CALL[ ]\011/* CallFunction */";
};
width = 782;
}
);
leftKerningGroup = E;
note = Egrave;
unicode = 00C8;
},
{
glyphname = Eacute;
lastChange = "2019-10-02 09:55:02 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"403 658 OFFCURVE",
"470 733 OFFCURVE",
"521 825 OFFCURVE",
"520 851 QCURVE",
"509 861 OFFCURVE",
"502 867 QCURVE",
"465 901 OFFCURVE",
"440 913 QCURVE",
"428 917 OFFCURVE",
"424 917 QCURVE SMOOTH",
"407 917 OFFCURVE",
"387 888 OFFCURVE",
"377 864 QCURVE SMOOTH",
"349 793 LINE SMOOTH",
"333 753 OFFCURVE",
"324 734 QCURVE",
"320 725 OFFCURVE",
"320 714 QCURVE SMOOTH",
"320 688 OFFCURVE",
"360 650 OFFCURVE",
"386 655 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"505 116 LINE SMOOTH",
"373 82 OFFCURVE",
"298 66 QCURVE SMOOTH",
"291 64 OFFCURVE",
"277 64 QCURVE SMOOTH",
"246 64 OFFCURVE",
"206 100 OFFCURVE",
"200 134 QCURVE",
"187 187 OFFCURVE",
"187 219 QCURVE",
"187 226 OFFCURVE",
"203 247 OFFCURVE",
"211 250 QCURVE SMOOTH",
"333 289 LINE SMOOTH",
"409 311 OFFCURVE",
"478 334 QCURVE SMOOTH",
"488 338 OFFCURVE",
"508 369 OFFCURVE",
"506 380 QCURVE SMOOTH",
"502 402 OFFCURVE",
"461 429 OFFCURVE",
"436 429 QCURVE SMOOTH",
"430 429 OFFCURVE",
"419 427 QCURVE",
"208 380 LINE",
"192 391 LINE",
"199 404 OFFCURVE",
"203 416 QCURVE",
"210 435 OFFCURVE",
"222 454 OFFCURVE",
"229 456 QCURVE SMOOTH",
"280 470 OFFCURVE",
"384 491 OFFCURVE",
"464 504 QCURVE SMOOTH",
"493 509 OFFCURVE",
"546 512 QCURVE SMOOTH",
"595 516 OFFCURVE",
"619 520 QCURVE",
"628 522 OFFCURVE",
"651 544 OFFCURVE",
"658 549 QCURVE",
"643 566 LINE",
"633 578 OFFCURVE",
"618 591 OFFCURVE",
"610 591 QCURVE",
"522 595 OFFCURVE",
"409 595 QCURVE SMOOTH",
"271 594 LINE SMOOTH",
"254 594 OFFCURVE",
"220 588 QCURVE",
"212 587 OFFCURVE",
"177 584 OFFCURVE",
"164 584 QCURVE SMOOTH",
"150 584 OFFCURVE",
"143 585 QCURVE SMOOTH",
"136 585 OFFCURVE",
"124 585 QCURVE SMOOTH",
"90 585 OFFCURVE",
"51 549 OFFCURVE",
"51 515 QCURVE SMOOTH",
"51 506 OFFCURVE",
"52 500 QCURVE",
"54 479 OFFCURVE",
"54 470 QCURVE SMOOTH",
"53 433 LINE",
"51 406 OFFCURVE",
"51 394 QCURVE SMOOTH",
"50 300 LINE SMOOTH",
"50 255 OFFCURVE",
"54 218 QCURVE SMOOTH",
"61 147 OFFCURVE",
"136 35 OFFCURVE",
"252 -27 OFFCURVE",
"319 -27 QCURVE SMOOTH",
"337 -27 OFFCURVE",
"346 -26 QCURVE SMOOTH",
"492 -12 OFFCURVE",
"594 45 QCURVE SMOOTH",
"650 76 OFFCURVE",
"650 105 QCURVE SMOOTH",
"650 127 OFFCURVE",
"618 145 QCURVE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
16 1 2 0 61 40 37 3 5 2 102 92 77 3 6 5 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 18 values pushed */
16 1 4 0 61 40 37 3 5 2 102 92 77 3 6 5 3 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 0 2 0 133 0 5 2 6 2 5 6 128 4 3 2 2 2 32 77 0 6 6 1 97 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 0 4 0 133 3 1 2 4 5 4 2 5 128 0 5 6 4 5 6 126 0 4 4 32 77 0 6 6 1 97 0 1 1 31 1 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
98 96 81 79 57 53 50 48 46 44 29 27 25 7 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 741;
}
);
leftKerningGroup = E;
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ecircumflex;
lastChange = "2019-10-02 09:54:17 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"266 692 OFFCURVE",
"282 708 QCURVE SMOOTH",
"285 711 OFFCURVE",
"298 726 QCURVE",
"316 745 LINE",
"356 707 OFFCURVE",
"371 691 QCURVE",
"394 669 OFFCURVE",
"424 668 QCURVE",
"437 667 OFFCURVE",
"456 676 QCURVE",
"469 683 OFFCURVE",
"469 697 QCURVE SMOOTH",
"469 708 OFFCURVE",
"459 717 QCURVE SMOOTH",
"422 749 LINE SMOOTH",
"398 771 OFFCURVE",
"348 813 QCURVE SMOOTH",
"328 830 OFFCURVE",
"304 830 QCURVE SMOOTH",
"287 830 OFFCURVE",
"257 809 OFFCURVE",
"247 789 QCURVE SMOOTH",
"232 759 OFFCURVE",
"220 726 QCURVE SMOOTH",
"218 720 OFFCURVE",
"218 717 QCURVE SMOOTH",
"218 709 OFFCURVE",
"231 696 OFFCURVE",
"241 695 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"530 124 LINE SMOOTH",
"391 88 OFFCURVE",
"312 71 QCURVE SMOOTH",
"304 69 OFFCURVE",
"289 69 QCURVE SMOOTH",
"257 69 OFFCURVE",
"215 107 OFFCURVE",
"208 143 QCURVE",
"195 199 OFFCURVE",
"195 232 QCURVE",
"194 240 OFFCURVE",
"211 262 OFFCURVE",
"220 265 QCURVE SMOOTH",
"349 306 LINE SMOOTH",
"429 330 OFFCURVE",
"501 354 QCURVE SMOOTH",
"512 358 OFFCURVE",
"533 391 OFFCURVE",
"531 402 QCURVE SMOOTH",
"527 425 OFFCURVE",
"483 454 OFFCURVE",
"457 454 QCURVE SMOOTH",
"451 454 OFFCURVE",
"439 452 QCURVE",
"217 402 LINE",
"200 414 LINE",
"207 428 OFFCURVE",
"211 440 QCURVE",
"219 460 OFFCURVE",
"231 480 OFFCURVE",
"239 482 QCURVE SMOOTH",
"293 497 OFFCURVE",
"402 519 OFFCURVE",
"487 533 QCURVE SMOOTH",
"517 538 OFFCURVE",
"573 542 QCURVE SMOOTH",
"625 546 OFFCURVE",
"650 550 QCURVE",
"660 552 OFFCURVE",
"684 575 OFFCURVE",
"691 580 QCURVE",
"675 598 LINE",
"665 611 OFFCURVE",
"649 625 OFFCURVE",
"641 625 QCURVE",
"548 629 OFFCURVE",
"429 629 QCURVE SMOOTH",
"283 628 LINE SMOOTH",
"265 628 OFFCURVE",
"229 622 QCURVE",
"221 621 OFFCURVE",
"184 617 OFFCURVE",
"170 617 QCURVE SMOOTH",
"155 617 OFFCURVE",
"148 618 QCURVE SMOOTH",
"141 619 OFFCURVE",
"128 619 QCURVE SMOOTH",
"92 619 OFFCURVE",
"51 580 OFFCURVE",
"51 545 QCURVE SMOOTH",
"51 535 OFFCURVE",
"52 529 QCURVE",
"54 507 OFFCURVE",
"54 497 QCURVE SMOOTH",
"53 458 LINE",
"51 430 OFFCURVE",
"51 417 QCURVE SMOOTH",
"50 318 LINE SMOOTH",
"50 270 OFFCURVE",
"54 231 QCURVE SMOOTH",
"62 156 OFFCURVE",
"141 38 OFFCURVE",
"263 -27 OFFCURVE",
"334 -27 QCURVE SMOOTH",
"353 -27 OFFCURVE",
"362 -26 QCURVE SMOOTH",
"516 -11 OFFCURVE",
"624 49 QCURVE SMOOTH",
"683 82 OFFCURVE",
"683 112 QCURVE SMOOTH",
"683 135 OFFCURVE",
"649 154 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
24 1 1 0 70 49 46 3 6 3 111 101 86 3 7 6 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 0 1 0 133 0 1 3 1 133 0 6 3 7 3 6 7 128 5 4 2 3 3 32 77 0 7 7 2 97 0 2 2 31 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 42 values pushed */
0 0 1 0 133 0 1 5 1 133 4 1 3 5 6 5 3 6 128 0 6 7 5 6 7 126 0 5 5 32 77 0 7 7 2 97 0 2 2 31 2 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 13 values pushed */
107 105 90 88 67 34 47 47 26 40 8 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 741;
}
);
leftKerningGroup = E;
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Edieresis;
lastChange = "2019-10-02 09:54:41 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"203 763 OFFCURVE",
"221 763 QCURVE SMOOTH",
"252 763 OFFCURVE",
"277 788 QCURVE",
"272 806 OFFCURVE",
"255 828 OFFCURVE",
"241 833 QCURVE SMOOTH",
"213 845 OFFCURVE",
"192 845 QCURVE SMOOTH",
"182 845 OFFCURVE",
"170 842 QCURVE",
"161 839 OFFCURVE",
"157 829 QCURVE",
"154 822 OFFCURVE",
"154 813 QCURVE SMOOTH",
"154 800 OFFCURVE",
"168 776 OFFCURVE",
"177 772 QCURVE"
);
},
{
closed = 1;
nodes = (
"478 732 OFFCURVE",
"502 734 OFFCURVE",
"528 743 OFFCURVE",
"539 755 QCURVE",
"533 786 OFFCURVE",
"496 808 OFFCURVE",
"463 814 QCURVE",
"460 815 OFFCURVE",
"453 815 QCURVE SMOOTH",
"436 815 OFFCURVE",
"426 802 QCURVE SMOOTH",
"420 793 OFFCURVE",
"420 780 QCURVE SMOOTH",
"420 766 OFFCURVE",
"428 756 QCURVE SMOOTH",
"451 729 OFFCURVE",
"473 731 QCURVE"
);
},
{
closed = 1;
nodes = (
"631 141 OFFCURVE",
"585 174 OFFCURVE",
"565 175 QCURVE SMOOTH",
"531 177 OFFCURVE",
"457 167 OFFCURVE",
"450 166 QCURVE SMOOTH",
"412 160 OFFCURVE",
"388 158 QCURVE",
"360 154 LINE SMOOTH",
"324 149 OFFCURVE",
"308 149 QCURVE SMOOTH",
"285 149 OFFCURVE",
"276 157 QCURVE",
"264 166 OFFCURVE",
"256 201 OFFCURVE",
"253 234 QCURVE",
"253 240 OFFCURVE",
"251 260 OFFCURVE",
"251 267 QCURVE SMOOTH",
"249 283 OFFCURVE",
"249 291 QCURVE SMOOTH",
"249 303 OFFCURVE",
"251 308 QCURVE",
"253 316 OFFCURVE",
"268 333 OFFCURVE",
"275 334 QCURVE SMOOTH",
"308 339 OFFCURVE",
"376 346 QCURVE SMOOTH",
"452 355 LINE",
"492 360 LINE SMOOTH",
"500 361 OFFCURVE",
"576 370 OFFCURVE",
"607 378 QCURVE SMOOTH",
"619 381 OFFCURVE",
"633 408 QCURVE",
"644 426 LINE",
"627 439 LINE SMOOTH",
"592 464 OFFCURVE",
"576 472 QCURVE SMOOTH",
"570 475 OFFCURVE",
"544 466 OFFCURVE",
"536 465 QCURVE SMOOTH",
"482 457 OFFCURVE",
"455 457 QCURVE",
"428 456 OFFCURVE",
"387 457 OFFCURVE",
"373 457 QCURVE",
"355 458 OFFCURVE",
"318 458 QCURVE SMOOTH",
"286 458 OFFCURVE",
"270 457 QCURVE SMOOTH",
"248 456 OFFCURVE",
"226 471 OFFCURVE",
"226 490 QCURVE SMOOTH",
"226 496 OFFCURVE",
"227 527 OFFCURVE",
"224 538 QCURVE SMOOTH",
"224 542 OFFCURVE",
"224 549 QCURVE SMOOTH",
"224 566 OFFCURVE",
"244 580 OFFCURVE",
"265 582 QCURVE",
"300 583 OFFCURVE",
"351 587 OFFCURVE",
"367 587 QCURVE SMOOTH",
"418 590 LINE",
"419 589 OFFCURVE",
"419 587 QCURVE",
"462 590 OFFCURVE",
"547 598 QCURVE SMOOTH",
"601 603 OFFCURVE",
"601 644 QCURVE SMOOTH",
"601 698 OFFCURVE",
"540 700 QCURVE SMOOTH",
"520 700 OFFCURVE",
"481 702 QCURVE",
"470 702 OFFCURVE",
"410 705 OFFCURVE",
"386 704 QCURVE SMOOTH",
"324 703 LINE SMOOTH",
"208 703 OFFCURVE",
"142 694 QCURVE SMOOTH",
"100 688 OFFCURVE",
"71 673 OFFCURVE",
"71 655 QCURVE SMOOTH",
"71 642 OFFCURVE",
"83 598 QCURVE",
"85 592 OFFCURVE",
"87 567 QCURVE SMOOTH",
"95 475 LINE SMOOTH",
"107 349 OFFCURVE",
"115 287 QCURVE SMOOTH",
"134 150 OFFCURVE",
"157 49 QCURVE SMOOTH",
"164 16 OFFCURVE",
"218 -27 OFFCURVE",
"247 -27 QCURVE SMOOTH",
"270 -27 OFFCURVE",
"285 -12 QCURVE SMOOTH",
"313 18 OFFCURVE",
"382 41 OFFCURVE",
"431 46 QCURVE SMOOTH",
"515 56 OFFCURVE",
"600 72 QCURVE SMOOTH",
"619 76 OFFCURVE",
"647 93 OFFCURVE",
"647 106 QCURVE SMOOTH",
"647 112 OFFCURVE",
"642 122 QCURVE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
13 1 1 2 30 1 4 1 84 1 7 5 122 107 2 9 7 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 19 values pushed */
13 1 1 2 30 1 4 1 84 1 7 6 122 107 2 9 7 4 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 52 values pushed */
0 2 0 1 4 2 114 0 7 5 9 5 7 9 128 0 9 8 5 9 8 126 0 8 3 5 8 3 126 0 0 0 1 4 0 1 105 0 4 6 1 5 7 4 5 106 0 3 3 31 3 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 53 values pushed */
0 2 0 1 0 2 1 128 0 7 5 9 5 7 9 128 0 9 8 5 9 8 126 0 8 3 5 8 3 126 0 0 0 1 4 0 1 105 0 4 6 1 5 7 4 5 106 0 3 3 31 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 58 values pushed */
0 2 0 1 0 2 1 128 0 6 5 7 5 6 114 0 7 9 5 7 9 126 0 9 8 5 9 8 126 0 8 3 5 8 3 126 0 0 0 1 4 0 1 105 0 4 0 5 6 4 5 106 0 3 3 31 3 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 20 values pushed */
141 139 133 131 100 91 81 80 79 74 70 62 47 45 24 37 39 10 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 697;
}
);
leftKerningGroup = E;
note = Edieresis;
rightKerningGroup = E;
unicode = 00CB;
},
{
glyphname = Igrave;
lastChange = "2019-10-02 11:00:09 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"211 736 QCURVE SMOOTH",
"221 756 OFFCURVE",
"194 781 OFFCURVE",
"188 785 QCURVE SMOOTH",
"94 845 OFFCURVE",
"9 899 QCURVE SMOOTH",
"4 902 OFFCURVE",
"-4 901 QCURVE",
"-26 901 OFFCURVE",
"-63 860 OFFCURVE",
"-70 831 QCURVE SMOOTH",
"-71 827 OFFCURVE",
"-70 818 QCURVE",
"-70 798 OFFCURVE",
"-47 773 OFFCURVE",
"-24 765 QCURVE SMOOTH",
"38 742 LINE",
"48 738 OFFCURVE",
"123 710 OFFCURVE",
"153 696 QCURVE SMOOTH",
"166 690 OFFCURVE",
"174 690 QCURVE",
"188 690 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"229 270 LINE",
"229 305 LINE",
"229 338 LINE",
"228 382 OFFCURVE",
"215 469 QCURVE",
"212 489 OFFCURVE",
"198 512 QCURVE SMOOTH",
"185 534 OFFCURVE",
"143 554 OFFCURVE",
"120 554 QCURVE",
"107 554 OFFCURVE",
"96 551 QCURVE",
"70 544 OFFCURVE",
"70 522 QCURVE",
"70 514 OFFCURVE",
"78 485 OFFCURVE",
"79 476 QCURVE SMOOTH",
"81 458 OFFCURVE",
"84 430 QCURVE SMOOTH",
"115 164 OFFCURVE",
"126 13 QCURVE SMOOTH",
"127 -1 OFFCURVE",
"137 -26 OFFCURVE",
"144 -28 QCURVE",
"155 -31 OFFCURVE",
"167 -31 QCURVE",
"188 -31 OFFCURVE",
"203 -22 QCURVE",
"213 -16 OFFCURVE",
"228 12 OFFCURVE",
"228 24 QCURVE",
"229 94 OFFCURVE",
"229 129 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
23 1 0 1 58 43 2 2 3 2 76 0 1 0 1 133 0 0 3 0 133 0 3 2 3 133 0 2 2 118 51 49 35 33 45 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 230;
}
);
leftKerningGroup = I;
note = Igrave;
rightKerningGroup = I;
unicode = 00CC;
},
{
glyphname = Iacute;
lastChange = "2019-10-02 11:01:11 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"366 830 OFFCURVE",
"349 830 QCURVE SMOOTH",
"343 830 OFFCURVE",
"335 828 QCURVE",
"282 812 OFFCURVE",
"193 747 OFFCURVE",
"148 696 QCURVE SMOOTH",
"141 688 OFFCURVE",
"141 674 QCURVE SMOOTH",
"141 654 OFFCURVE",
"154 645 QCURVE SMOOTH",
"166 637 OFFCURVE",
"195 624 QCURVE",
"239 627 OFFCURVE",
"261 649 QCURVE SMOOTH",
"310 696 OFFCURVE",
"351 748 QCURVE SMOOTH",
"367 768 OFFCURVE",
"373 783 QCURVE",
"376 791 OFFCURVE",
"376 799 QCURVE SMOOTH",
"376 810 OFFCURVE",
"372 817 QCURVE"
);
},
{
closed = 1;
nodes = (
"253 471 OFFCURVE",
"244 510 QCURVE SMOOTH",
"237 539 OFFCURVE",
"219 570 QCURVE SMOOTH",
"206 592 OFFCURVE",
"177 592 QCURVE SMOOTH",
"134 592 OFFCURVE",
"133 546 QCURVE",
"134 497 LINE",
"134 292 LINE",
"135 292 LINE",
"135 139 LINE",
"135 62 LINE",
"137 22 OFFCURVE",
"145 -1 QCURVE SMOOTH",
"160 -43 OFFCURVE",
"198 -43 QCURVE SMOOTH",
"225 -43 OFFCURVE",
"257 -15 OFFCURVE",
"260 11 QCURVE SMOOTH",
"266 60 OFFCURVE",
"266 93 QCURVE SMOOTH",
"272 205 OFFCURVE",
"256 429 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
1 1 0 1 1 76 0 1 0 1 133 0 0 3 0 133 0 3 2 3 133 0 2 2 118 41 39 42 24 4 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 343;
}
);
leftKerningGroup = I;
note = Iacute;
rightKerningGroup = I;
unicode = 00CD;
},
{
glyphname = Icircumflex;
lastChange = "2019-10-02 10:48:36 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"413 646 LINE",
"390 681 LINE SMOOTH",
"370 712 OFFCURVE",
"352 740 QCURVE SMOOTH",
"338 762 OFFCURVE",
"332 773 QCURVE SMOOTH",
"319 796 LINE",
"306 817 OFFCURVE",
"270 839 OFFCURVE",
"250 839 QCURVE SMOOTH",
"228 839 OFFCURVE",
"206 827 QCURVE SMOOTH",
"180 813 OFFCURVE",
"137 772 OFFCURVE",
"105 741 QCURVE SMOOTH",
"51 688 LINE SMOOTH",
"38 675 OFFCURVE",
"38 658 QCURVE SMOOTH",
"38 647 OFFCURVE",
"50 629 OFFCURVE",
"61 625 QCURVE SMOOTH",
"75 620 OFFCURVE",
"101 616 QCURVE SMOOTH",
"121 613 LINE",
"155 658 LINE",
"161 665 OFFCURVE",
"171 679 QCURVE",
"221 738 OFFCURVE",
"218 735 QCURVE",
"222 739 OFFCURVE",
"242 748 OFFCURVE",
"248 751 QCURVE",
"265 728 OFFCURVE",
"276 710 QCURVE",
"297 679 LINE SMOOTH",
"329 631 OFFCURVE",
"339 617 QCURVE SMOOTH",
"361 586 OFFCURVE",
"404 588 QCURVE",
"415 588 OFFCURVE",
"429 603 OFFCURVE",
"429 614 QCURVE SMOOTH",
"429 620 OFFCURVE",
"426 626 QCURVE"
);
},
{
closed = 1;
nodes = (
"228 591 OFFCURVE",
"219 591 QCURVE SMOOTH",
"193 591 OFFCURVE",
"161 560 OFFCURVE",
"161 533 QCURVE SMOOTH",
"161 528 OFFCURVE",
"163 514 QCURVE",
"178 447 OFFCURVE",
"178 338 QCURVE SMOOTH",
"178 264 LINE",
"178 231 LINE",
"178 127 LINE",
"178 75 LINE SMOOTH",
"178 19 OFFCURVE",
"181 -8 QCURVE SMOOTH",
"183 -24 OFFCURVE",
"202 -43 OFFCURVE",
"214 -43 QCURVE SMOOTH",
"227 -43 OFFCURVE",
"239 -34 QCURVE SMOOTH",
"262 -17 OFFCURVE",
"267 -2 QCURVE",
"294 69 OFFCURVE",
"298 119 QCURVE SMOOTH",
"315 324 OFFCURVE",
"311 498 QCURVE SMOOTH",
"310 541 OFFCURVE",
"273 585 OFFCURVE",
"232 590 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
19 11 2 3 1 48 1 2 0 2 76 0 1 3 1 133 0 3 0 3 133 0 0 2 0 133 0 2 2 118 71 69 55 53 34 32 35 4 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 491;
}
);
leftKerningGroup = I;
note = Icircumflex;
rightKerningGroup = I;
unicode = 00CE;
},
{
glyphname = Idieresis;
lastChange = "2019-10-02 10:48:28 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"141 713 OFFCURVE",
"112 723 QCURVE SMOOTH",
"101 727 OFFCURVE",
"88 727 QCURVE SMOOTH",
"59 727 OFFCURVE",
"37 705 QCURVE",
"24 693 OFFCURVE",
"24 677 QCURVE SMOOTH",
"24 669 OFFCURVE",
"27 661 QCURVE SMOOTH",
"37 635 OFFCURVE",
"85 603 OFFCURVE",
"113 603 QCURVE SMOOTH",
"145 603 OFFCURVE",
"168 623 QCURVE SMOOTH",
"174 628 OFFCURVE",
"186 651 OFFCURVE",
"189 657 QCURVE",
"186 663 OFFCURVE",
"175 687 OFFCURVE",
"168 692 QCURVE"
);
},
{
closed = 1;
nodes = (
"461 668 OFFCURVE",
"407 711 OFFCURVE",
"377 709 QCURVE",
"375 709 OFFCURVE",
"363 707 OFFCURVE",
"357 704 QCURVE",
"324 690 OFFCURVE",
"319 666 QCURVE",
"318 663 OFFCURVE",
"318 657 QCURVE SMOOTH",
"318 635 OFFCURVE",
"344 618 QCURVE",
"359 609 OFFCURVE",
"397 594 OFFCURVE",
"402 592 QCURVE",
"406 590 OFFCURVE",
"415 590 QCURVE SMOOTH",
"432 590 OFFCURVE",
"446 606 QCURVE",
"461 621 OFFCURVE",
"461 641 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"326 52 LINE",
"326 257 LINE",
"325 257 LINE",
"325 410 LINE",
"325 487 LINE SMOOTH",
"325 521 OFFCURVE",
"315 550 QCURVE SMOOTH",
"300 592 OFFCURVE",
"262 592 QCURVE SMOOTH",
"235 592 OFFCURVE",
"203 564 OFFCURVE",
"200 538 QCURVE SMOOTH",
"194 489 OFFCURVE",
"194 456 QCURVE SMOOTH",
"193 344 OFFCURVE",
"204 120 QCURVE SMOOTH",
"206 80 OFFCURVE",
"216 39 QCURVE SMOOTH",
"223 10 OFFCURVE",
"241 -21 QCURVE SMOOTH",
"254 -43 OFFCURVE",
"283 -43 QCURVE SMOOTH",
"326 -43 OFFCURVE",
"327 3 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
31 2 2 0 3 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
0 5 0 2 0 5 2 128 0 2 4 0 2 4 126 0 4 4 132 0 3 3 36 77 0 0 0 1 97 0 1 1 36 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 43 values pushed */
0 3 1 0 1 3 0 128 0 5 0 2 0 5 2 128 0 2 4 0 2 4 126 0 4 4 132 0 1 3 0 1 89 0 1 1 0 97 0 0 1 0 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
43 36 44 38 39 38 6 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 500;
}
);
leftKerningGroup = I;
note = Idieresis;
rightKerningGroup = I;
unicode = 00CF;
},
{
glyphname = Eth;
lastChange = "2019-06-18 23:10:04 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"695 656 OFFCURVE",
"638 672 QCURVE SMOOTH",
"478 717 OFFCURVE",
"347 724 QCURVE SMOOTH",
"307 726 OFFCURVE",
"287 726 QCURVE SMOOTH",
"232 726 OFFCURVE",
"180 720 QCURVE SMOOTH",
"150 716 OFFCURVE",
"117 674 OFFCURVE",
"117 649 QCURVE SMOOTH",
"134 627 OFFCURVE",
"148 611 QCURVE SMOOTH",
"167 578 OFFCURVE",
"171 483 OFFCURVE",
"182 407 OFFCURVE",
"178 384 QCURVE",
"156 379 OFFCURVE",
"138 374 QCURVE SMOOTH",
"130 372 OFFCURVE",
"108 367 OFFCURVE",
"93 364 QCURVE SMOOTH",
"50 356 OFFCURVE",
"50 329 QCURVE SMOOTH",
"50 317 OFFCURVE",
"62 290 OFFCURVE",
"71 280 QCURVE",
"86 265 OFFCURVE",
"122 253 QCURVE",
"162 242 LINE",
"182 238 OFFCURVE",
"192 235 QCURVE",
"198 203 LINE SMOOTH",
"201 184 OFFCURVE",
"209 148 QCURVE SMOOTH",
"210 144 OFFCURVE",
"217 106 OFFCURVE",
"226 92 QCURVE",
"248 54 OFFCURVE",
"284 54 QCURVE SMOOTH",
"307 54 OFFCURVE",
"332 91 OFFCURVE",
"332 124 QCURVE",
"331 171 LINE",
"331 190 OFFCURVE",
"323 248 OFFCURVE",
"324 258 QCURVE",
"349 258 OFFCURVE",
"416 269 OFFCURVE",
"453 272 QCURVE",
"462 272 OFFCURVE",
"480 274 QCURVE SMOOTH",
"548 280 OFFCURVE",
"587 336 QCURVE",
"558 355 OFFCURVE",
"494 365 OFFCURVE",
"449 365 QCURVE SMOOTH",
"407 366 OFFCURVE",
"326 369 OFFCURVE",
"302 380 QCURVE",
"295 436 OFFCURVE",
"297 518 OFFCURVE",
"297 553 QCURVE SMOOTH",
"297 575 OFFCURVE",
"310 586 QCURVE",
"316 589 OFFCURVE",
"333 601 OFFCURVE",
"339 601 QCURVE SMOOTH",
"375 602 LINE SMOOTH",
"516 602 OFFCURVE",
"620 561 QCURVE SMOOTH",
"656 548 OFFCURVE",
"693 494 OFFCURVE",
"693 458 QCURVE SMOOTH",
"693 441 OFFCURVE",
"689 425 QCURVE SMOOTH",
"680 384 OFFCURVE",
"665 361 QCURVE SMOOTH",
"593 245 OFFCURVE",
"463 94 OFFCURVE",
"373 46 QCURVE",
"358 39 OFFCURVE",
"324 13 OFFCURVE",
"316 8 QCURVE",
"341 -11 OFFCURVE",
"371 -27 OFFCURVE",
"386 -27 QCURVE SMOOTH",
"399 -27 OFFCURVE",
"415 -21 QCURVE SMOOTH",
"435 -13 OFFCURVE",
"466 8 QCURVE SMOOTH",
"600 100 OFFCURVE",
"724 252 QCURVE SMOOTH",
"771 310 OFFCURVE",
"812 405 QCURVE SMOOTH",
"827 443 OFFCURVE",
"827 478 QCURVE SMOOTH",
"827 518 OFFCURVE",
"789 588 OFFCURVE",
"752 616 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
45 1 3 2 15 1 0 4 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 32 values pushed */
0 4 3 0 3 4 0 128 0 2 0 3 4 2 3 105 0 1 1 5 97 0 5 5 36 77 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 30 values pushed */
0 4 3 0 3 4 0 128 0 5 0 1 2 5 1 105 0 2 0 3 4 2 3 105 0 0 0 31 0 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
97 93 60 58 49 48 43 41 31 29 43 6 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 877;
}
);
note = Eth;
unicode = 00D0;
},
{
glyphname = Ntilde;
lastChange = "2019-06-19 01:31:08 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"514 910 OFFCURVE",
"494 910 QCURVE SMOOTH",
"482 910 OFFCURVE",
"472 907 QCURVE",
"458 902 OFFCURVE",
"407 831 OFFCURVE",
"391 804 QCURVE SMOOTH",
"375 778 LINE",
"370 768 LINE",
"362 775 LINE",
"301 846 OFFCURVE",
"239 846 QCURVE SMOOTH",
"204 846 OFFCURVE",
"182 829 QCURVE SMOOTH",
"100 765 OFFCURVE",
"76 658 QCURVE",
"74 650 OFFCURVE",
"98 616 OFFCURVE",
"110 611 QCURVE SMOOTH",
"120 607 OFFCURVE",
"126 607 QCURVE SMOOTH",
"153 607 OFFCURVE",
"179 651 QCURVE",
"189 670 OFFCURVE",
"236 746 QCURVE",
"272 709 OFFCURVE",
"371 654 OFFCURVE",
"422 651 QCURVE",
"432 651 OFFCURVE",
"472 670 OFFCURVE",
"475 677 QCURVE",
"490 706 OFFCURVE",
"514 769 OFFCURVE",
"524 798 QCURVE SMOOTH",
"536 832 OFFCURVE",
"546 860 QCURVE",
"548 867 OFFCURVE",
"537 895 OFFCURVE",
"530 900 QCURVE"
);
},
{
closed = 1;
nodes = (
"461 636 OFFCURVE",
"434 613 OFFCURVE",
"430 593 QCURVE SMOOTH",
"423 560 OFFCURVE",
"418 523 QCURVE",
"380 304 LINE",
"379 268 LINE",
"352 298 LINE",
"288 438 OFFCURVE",
"270 478 QCURVE SMOOTH",
"259 503 OFFCURVE",
"216 531 OFFCURVE",
"180 536 QCURVE",
"175 536 LINE SMOOTH",
"152 536 OFFCURVE",
"101 492 OFFCURVE",
"92 464 QCURVE SMOOTH",
"17 234 OFFCURVE",
"17 49 QCURVE SMOOTH",
"17 12 OFFCURVE",
"43 -15 OFFCURVE",
"78 -15 QCURVE SMOOTH",
"106 -15 OFFCURVE",
"133 10 OFFCURVE",
"137 40 QCURVE SMOOTH",
"145 97 LINE SMOOTH",
"164 235 OFFCURVE",
"171 278 QCURVE",
"181 378 LINE",
"255 276 OFFCURVE",
"264 260 QCURVE SMOOTH",
"321 159 OFFCURVE",
"347 123 QCURVE SMOOTH",
"360 105 OFFCURVE",
"395 86 OFFCURVE",
"416 86 QCURVE SMOOTH",
"428 86 OFFCURVE",
"445 91 QCURVE",
"457 95 OFFCURVE",
"483 128 OFFCURVE",
"484 143 QCURVE",
"500 264 OFFCURVE",
"515 423 QCURVE",
"519 450 OFFCURVE",
"525 514 QCURVE SMOOTH",
"531 579 LINE SMOOTH",
"533 604 OFFCURVE",
"521 620 QCURVE",
"507 636 OFFCURVE",
"480 636 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 79 values pushed */
29 13 2 0 2 82 81 59 47 4 4 6 2 76 0 3 2 3 133 0 2 0 2 133 0 0 7 0 133 0 1 7 6 7 1 6 128 0 6 4 7 6 4 126 0 4 5 7 4 5 126 8 1 7 7 32 77 0 5 5 31 5 78 39 39 39 88 39 87 22 44 46 40 40 21 41 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 629;
}
);
note = Ntilde;
rightKerningGroup = N;
unicode = 00D1;
},
{
glyphname = Ograve;
lastChange = "2019-10-02 10:52:13 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"385 613 OFFCURVE",
"425 613 QCURVE SMOOTH",
"438 613 OFFCURVE",
"458 624 OFFCURVE",
"465 639 QCURVE",
"449 673 LINE SMOOTH",
"428 718 OFFCURVE",
"417 741 QCURVE SMOOTH",
"401 775 OFFCURVE",
"345 781 QCURVE",
"342 782 OFFCURVE",
"337 782 QCURVE SMOOTH",
"308 782 OFFCURVE",
"291 753 QCURVE",
"285 741 OFFCURVE",
"285 732 QCURVE SMOOTH",
"285 715 OFFCURVE",
"300 699 QCURVE SMOOTH",
"337 660 OFFCURVE",
"354 641 QCURVE"
);
},
{
closed = 1;
nodes = (
"704 339 LINE",
"684 384 LINE SMOOTH",
"670 416 OFFCURVE",
"650 462 OFFCURVE",
"636 482 QCURVE SMOOTH",
"602 531 OFFCURVE",
"523 593 OFFCURVE",
"472 598 QCURVE SMOOTH",
"444 601 OFFCURVE",
"388 603 QCURVE",
"378 603 OFFCURVE",
"313 606 OFFCURVE",
"287 610 QCURVE",
"278 612 OFFCURVE",
"259 612 QCURVE SMOOTH",
"212 612 OFFCURVE",
"143 562 OFFCURVE",
"117 518 QCURVE SMOOTH",
"73 444 OFFCURVE",
"73 348 QCURVE SMOOTH",
"73 304 OFFCURVE",
"81 262 QCURVE SMOOTH",
"90 215 OFFCURVE",
"130 126 OFFCURVE",
"158 96 QCURVE SMOOTH",
"246 2 OFFCURVE",
"365 2 QCURVE SMOOTH",
"422 2 OFFCURVE",
"482 24 QCURVE SMOOTH",
"541 46 OFFCURVE",
"639 148 OFFCURVE",
"694 275 OFFCURVE",
"691 332 QCURVE"
);
},
{
closed = 1;
nodes = (
"353 95 OFFCURVE",
"329 96 QCURVE SMOOTH",
"280 98 OFFCURVE",
"216 161 OFFCURVE",
"213 218 QCURVE",
"211 237 OFFCURVE",
"211 273 QCURVE SMOOTH",
"212 382 OFFCURVE",
"253 460 QCURVE SMOOTH",
"262 477 OFFCURVE",
"288 506 QCURVE SMOOTH",
"296 515 OFFCURVE",
"311 532 OFFCURVE",
"319 541 QCURVE",
"338 561 OFFCURVE",
"350 574 QCURVE",
"359 574 OFFCURVE",
"367 573 QCURVE",
"447 567 OFFCURVE",
"524 534 OFFCURVE",
"558 449 OFFCURVE",
"565 360 QCURVE SMOOTH",
"569 306 OFFCURVE",
"521 202 OFFCURVE",
"437 123 OFFCURVE",
"386 106 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
14 1 1 0 73 52 2 8 6 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 0 1 0 133 0 1 3 1 133 4 1 3 3 30 77 7 1 6 6 5 97 0 5 5 32 77 0 8 8 2 97 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
24 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 0 1 0 133 0 1 3 1 133 4 1 3 3 32 77 7 1 6 6 5 97 0 5 5 32 77 0 8 8 2 97 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 0 1 0 133 0 1 3 1 133 4 1 3 5 5 3 112 7 1 6 6 5 97 0 5 5 32 77 0 8 8 2 97 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
41 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 0 1 0 133 0 1 3 1 133 0 3 4 3 133 7 1 6 6 4 97 5 1 4 4 32 77 0 8 8 2 97 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 36 values pushed */
0 0 1 0 133 0 1 3 1 133 0 3 4 3 133 5 1 4 7 1 6 8 4 6 105 0 8 8 2 97 0 2 2 40 2 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
77 75 62 61 60 59 17 18 42 38 41 22 9 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 777;
}
);
leftKerningGroup = O;
note = Ograve;
rightKerningGroup = O;
unicode = 00D2;
},
{
glyphname = Oacute;
lastChange = "2019-06-19 01:05:39 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"226 655 OFFCURVE",
"248 655 QCURVE SMOOTH",
"268 655 OFFCURVE",
"288 671 QCURVE SMOOTH",
"316 692 OFFCURVE",
"391 759 QCURVE",
"396 765 OFFCURVE",
"408 775 QCURVE SMOOTH",
"414 780 OFFCURVE",
"419 788 QCURVE",
"430 804 OFFCURVE",
"430 821 QCURVE SMOOTH",
"430 836 OFFCURVE",
"423 846 QCURVE",
"418 855 OFFCURVE",
"392 870 OFFCURVE",
"384 875 QCURVE",
"365 868 OFFCURVE",
"362 867 QCURVE SMOOTH",
"359 866 OFFCURVE",
"332 857 OFFCURVE",
"323 850 QCURVE",
"244 795 OFFCURVE",
"197 755 QCURVE SMOOTH",
"176 737 OFFCURVE",
"176 718 QCURVE SMOOTH",
"176 696 OFFCURVE",
"200 676 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"552 412 OFFCURVE",
"432 568 OFFCURVE",
"334 616 QCURVE SMOOTH",
"302 632 OFFCURVE",
"268 632 QCURVE SMOOTH",
"218 632 OFFCURVE",
"173 593 QCURVE SMOOTH",
"111 539 OFFCURVE",
"49 400 OFFCURVE",
"50 300 QCURVE SMOOTH",
"54 209 OFFCURVE",
"124 68 OFFCURVE",
"208 32 QCURVE",
"232 20 OFFCURVE",
"290 7 OFFCURVE",
"295 6 QCURVE SMOOTH",
"317 1 OFFCURVE",
"336 1 QCURVE SMOOTH",
"393 1 OFFCURVE",
"500 69 OFFCURVE",
"567 190 OFFCURVE",
"567 264 QCURVE SMOOTH",
"567 290 OFFCURVE",
"565 303 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"465 219 OFFCURVE",
"386 124 OFFCURVE",
"342 112 QCURVE",
"336 110 OFFCURVE",
"322 110 QCURVE SMOOTH",
"294 110 OFFCURVE",
"223 139 OFFCURVE",
"168 186 OFFCURVE",
"161 211 QCURVE SMOOTH",
"150 249 OFFCURVE",
"150 288 QCURVE SMOOTH",
"150 348 OFFCURVE",
"194 462 OFFCURVE",
"233 498 QCURVE",
"238 503 OFFCURVE",
"271 510 OFFCURVE",
"290 513 QCURVE SMOOTH",
"338 519 OFFCURVE",
"351 528 QCURVE",
"415 485 OFFCURVE",
"483 380 OFFCURVE",
"483 320 QCURVE SMOOTH",
"483 296 OFFCURVE",
"477 270 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
56 1 3 2 1 76 10 1 0 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
0 0 2 0 133 0 2 2 32 77 0 3 3 1 97 0 1 1 40 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 18 values pushed */
0 0 2 0 133 0 3 0 1 3 1 101 0 2 2 32 2 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
71 69 47 45 34 32 26 24 4 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 617;
}
);
leftKerningGroup = O;
note = Oacute;
rightKerningGroup = O;
unicode = 00D3;
},
{
glyphname = Ocircumflex;
lastChange = "2019-06-19 01:05:39 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"142 670 OFFCURVE",
"148 670 QCURVE SMOOTH",
"182 670 OFFCURVE",
"205 693 QCURVE SMOOTH",
"220 709 OFFCURVE",
"242 738 QCURVE",
"264 764 LINE",
"270 771 LINE",
"276 764 LINE",
"297 740 LINE",
"313 720 OFFCURVE",
"325 709 QCURVE",
"345 686 OFFCURVE",
"364 667 QCURVE SMOOTH",
"385 646 OFFCURVE",
"413 646 QCURVE SMOOTH",
"419 646 OFFCURVE",
"433 648 QCURVE",
"447 653 OFFCURVE",
"452 662 QCURVE",
"455 670 OFFCURVE",
"449 679 QCURVE SMOOTH",
"422 717 LINE SMOOTH",
"418 723 OFFCURVE",
"371 790 OFFCURVE",
"344 816 QCURVE SMOOTH",
"301 857 OFFCURVE",
"263 857 QCURVE SMOOTH",
"230 857 OFFCURVE",
"194 823 QCURVE SMOOTH",
"155 784 OFFCURVE",
"105 726 QCURVE SMOOTH",
"95 715 OFFCURVE",
"95 701 QCURVE SMOOTH",
"95 696 OFFCURVE",
"96 693 QCURVE",
"102 677 OFFCURVE",
"128 672 QCURVE"
);
},
{
closed = 1;
nodes = (
"362 632 OFFCURVE",
"272 653 QCURVE SMOOTH",
"253 657 OFFCURVE",
"235 657 QCURVE SMOOTH",
"210 657 OFFCURVE",
"177 633 OFFCURVE",
"163 605 QCURVE SMOOTH",
"147 573 OFFCURVE",
"115 538 OFFCURVE",
"88 530 QCURVE SMOOTH",
"56 520 OFFCURVE",
"53 474 QCURVE SMOOTH",
"52 460 OFFCURVE",
"52 432 QCURVE SMOOTH",
"52 413 LINE",
"52 404 LINE",
"50 404 LINE",
"56 363 LINE SMOOTH",
"67 282 OFFCURVE",
"72 250 QCURVE SMOOTH",
"78 210 OFFCURVE",
"114 132 OFFCURVE",
"146 87 QCURVE SMOOTH",
"195 18 OFFCURVE",
"277 6 QCURVE SMOOTH",
"300 2 OFFCURVE",
"323 2 QCURVE SMOOTH",
"389 2 OFFCURVE",
"428 48 QCURVE SMOOTH",
"475 104 OFFCURVE",
"524 238 OFFCURVE",
"524 309 QCURVE SMOOTH",
"524 382 OFFCURVE",
"470 518 OFFCURVE",
"419 572 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"392 164 OFFCURVE",
"298 98 QCURVE SMOOTH",
"294 95 LINE",
"289 97 LINE",
"258 108 OFFCURVE",
"229 145 OFFCURVE",
"216 174 QCURVE SMOOTH",
"177 267 OFFCURVE",
"177 352 QCURVE SMOOTH",
"177 364 OFFCURVE",
"179 390 QCURVE",
"181 404 OFFCURVE",
"181 432 QCURVE SMOOTH",
"181 460 OFFCURVE",
"180 473 QCURVE",
"180 509 LINE",
"180 513 LINE",
"182 516 LINE",
"190 526 LINE",
"205 543 LINE",
"241 580 OFFCURVE",
"272 580 QCURVE SMOOTH",
"305 580 OFFCURVE",
"338 541 QCURVE SMOOTH",
"408 456 OFFCURVE",
"408 342 QCURVE SMOOTH",
"408 315 OFFCURVE",
"406 301 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
29 3 2 2 0 96 85 84 60 57 5 3 5 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
0 0 2 0 133 0 2 4 2 133 0 1 4 5 4 1 5 128 0 5 5 4 97 0 4 4 30 77 0 3 3 40 3 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
24 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
0 0 2 0 133 0 2 4 2 133 0 1 4 5 4 1 5 128 0 5 5 4 97 0 4 4 32 77 0 3 3 40 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 32 values pushed */
0 0 2 0 133 0 2 4 2 133 0 1 4 5 4 1 5 128 0 4 0 5 3 4 5 106 0 3 3 40 3 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
79 77 69 67 41 28 42 40 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 574;
}
);
leftKerningGroup = O;
note = Ocircumflex;
rightKerningGroup = O;
unicode = 00D4;
},
{
glyphname = Otilde;
lastChange = "2019-06-19 01:05:39 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"571 851 OFFCURVE",
"552 851 QCURVE SMOOTH",
"541 851 OFFCURVE",
"532 847 QCURVE",
"529 844 OFFCURVE",
"521 837 OFFCURVE",
"520 835 QCURVE SMOOTH",
"501 798 OFFCURVE",
"474 770 OFFCURVE",
"452 770 QCURVE SMOOTH",
"435 770 OFFCURVE",
"393 783 QCURVE SMOOTH",
"353 795 OFFCURVE",
"311 795 QCURVE SMOOTH",
"252 795 OFFCURVE",
"196 770 QCURVE SMOOTH",
"160 754 OFFCURVE",
"116 717 QCURVE SMOOTH",
"99 703 OFFCURVE",
"99 679 QCURVE SMOOTH",
"99 664 OFFCURVE",
"107 651 QCURVE",
"121 631 OFFCURVE",
"148 631 QCURVE SMOOTH",
"159 631 OFFCURVE",
"164 632 QCURVE",
"194 634 OFFCURVE",
"226 665 QCURVE SMOOTH",
"278 714 OFFCURVE",
"338 714 QCURVE SMOOTH",
"369 714 OFFCURVE",
"405 700 QCURVE SMOOTH",
"423 693 OFFCURVE",
"459 685 QCURVE",
"476 682 OFFCURVE",
"491 682 QCURVE SMOOTH",
"531 682 OFFCURVE",
"593 724 OFFCURVE",
"609 764 QCURVE SMOOTH",
"615 779 OFFCURVE",
"615 792 QCURVE SMOOTH",
"615 818 OFFCURVE",
"591 836 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"263 593 OFFCURVE",
"210 551 OFFCURVE",
"178 509 QCURVE SMOOTH",
"164 491 LINE",
"163 489 OFFCURVE",
"161 485 OFFCURVE",
"159 483 QCURVE",
"140 453 OFFCURVE",
"117 427 OFFCURVE",
"95 419 QCURVE SMOOTH",
"53 404 OFFCURVE",
"51 344 QCURVE SMOOTH",
"51 293 LINE",
"50 286 OFFCURVE",
"50 271 QCURVE SMOOTH",
"50 216 OFFCURVE",
"80 144 QCURVE SMOOTH",
"108 80 OFFCURVE",
"214 2 OFFCURVE",
"279 2 QCURVE SMOOTH",
"354 2 OFFCURVE",
"428 55 QCURVE SMOOTH",
"523 122 OFFCURVE",
"578 247 QCURVE SMOOTH",
"601 297 OFFCURVE",
"601 348 QCURVE SMOOTH",
"601 424 OFFCURVE",
"545 497 QCURVE SMOOTH",
"503 552 OFFCURVE",
"385 593 OFFCURVE",
"306 593 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"466 280 LINE SMOOTH",
"437 217 OFFCURVE",
"389 139 OFFCURVE",
"352 108 QCURVE SMOOTH",
"326 87 OFFCURVE",
"301 73 QCURVE SMOOTH",
"287 65 OFFCURVE",
"271 65 QCURVE SMOOTH",
"256 65 OFFCURVE",
"231 79 OFFCURVE",
"224 91 QCURVE",
"212 114 OFFCURVE",
"184 177 QCURVE SMOOTH",
"170 209 LINE",
"169 226 OFFCURVE",
"167 248 OFFCURVE",
"167 256 QCURVE SMOOTH",
"167 263 OFFCURVE",
"168 266 QCURVE",
"189 352 OFFCURVE",
"265 488 OFFCURVE",
"328 538 QCURVE SMOOTH",
"351 556 OFFCURVE",
"375 556 QCURVE SMOOTH",
"401 556 OFFCURVE",
"420 537 QCURVE SMOOTH",
"500 461 OFFCURVE",
"500 387 QCURVE SMOOTH",
"500 352 OFFCURVE",
"483 317 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 83 values pushed */
89 86 2 9 8 1 76 0 5 3 5 133 0 4 3 1 3 4 1 128 0 0 1 2 1 0 2 128 0 2 7 1 2 7 126 0 3 0 1 0 3 1 105 10 1 7 0 8 9 7 8 105 0 9 9 6 97 0 6 6 40 6 78 43 43 96 94 80 78 43 73 43 72 43 38 34 40 66 36 37 11 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 665;
}
);
leftKerningGroup = O;
note = Otilde;
rightKerningGroup = O;
unicode = 00D5;
},
{
glyphname = Odieresis;
lastChange = "2019-06-19 01:05:39 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"186 650 OFFCURVE",
"193 651 OFFCURVE",
"198 652 QCURVE",
"212 659 OFFCURVE",
"226 673 OFFCURVE",
"226 686 QCURVE SMOOTH",
"226 703 OFFCURVE",
"207 714 QCURVE",
"198 720 OFFCURVE",
"171 731 OFFCURVE",
"166 733 QCURVE",
"160 735 OFFCURVE",
"157 735 QCURVE SMOOTH",
"148 735 OFFCURVE",
"134 723 QCURVE",
"124 713 OFFCURVE",
"124 698 QCURVE SMOOTH",
"124 689 OFFCURVE",
"126 685 QCURVE",
"132 670 OFFCURVE",
"166 648 OFFCURVE",
"184 649 QCURVE"
);
},
{
closed = 1;
nodes = (
"391 646 OFFCURVE",
"411 639 QCURVE SMOOTH",
"420 636 OFFCURVE",
"428 636 QCURVE SMOOTH",
"449 636 OFFCURVE",
"465 652 QCURVE SMOOTH",
"474 661 OFFCURVE",
"474 673 QCURVE SMOOTH",
"474 676 OFFCURVE",
"472 684 QCURVE",
"465 703 OFFCURVE",
"431 725 OFFCURVE",
"411 725 QCURVE SMOOTH",
"388 725 OFFCURVE",
"371 711 QCURVE SMOOTH",
"366 707 OFFCURVE",
"358 690 OFFCURVE",
"356 686 QCURVE",
"358 682 OFFCURVE",
"366 664 OFFCURVE",
"371 661 QCURVE"
);
},
{
closed = 1;
nodes = (
"552 412 OFFCURVE",
"432 568 OFFCURVE",
"334 616 QCURVE SMOOTH",
"302 632 OFFCURVE",
"268 632 QCURVE SMOOTH",
"218 632 OFFCURVE",
"173 593 QCURVE SMOOTH",
"111 539 OFFCURVE",
"49 400 OFFCURVE",
"50 300 QCURVE SMOOTH",
"54 209 OFFCURVE",
"124 68 OFFCURVE",
"208 32 QCURVE",
"232 20 OFFCURVE",
"290 7 OFFCURVE",
"295 6 QCURVE SMOOTH",
"317 1 OFFCURVE",
"336 1 QCURVE SMOOTH",
"393 1 OFFCURVE",
"500 69 OFFCURVE",
"567 190 OFFCURVE",
"567 264 QCURVE SMOOTH",
"567 290 OFFCURVE",
"565 303 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"465 219 OFFCURVE",
"386 124 OFFCURVE",
"342 112 QCURVE",
"336 110 OFFCURVE",
"322 110 QCURVE SMOOTH",
"294 110 OFFCURVE",
"223 139 OFFCURVE",
"168 186 OFFCURVE",
"161 211 QCURVE SMOOTH",
"150 249 OFFCURVE",
"150 288 QCURVE SMOOTH",
"150 348 OFFCURVE",
"194 462 OFFCURVE",
"233 498 QCURVE",
"238 503 OFFCURVE",
"271 510 OFFCURVE",
"290 513 QCURVE SMOOTH",
"338 519 OFFCURVE",
"351 528 QCURVE",
"415 485 OFFCURVE",
"483 380 OFFCURVE",
"483 320 QCURVE SMOOTH",
"483 296 OFFCURVE",
"477 270 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
4 1 2 1 71 1 5 4 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 0 1 0 133 0 2 2 1 97 0 1 1 36 77 0 4 4 32 77 0 5 5 3 97 0 3 3 40 3 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 0 1 0 133 0 1 0 2 4 1 2 105 0 4 4 32 77 0 5 5 3 97 0 3 3 40 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 26 values pushed */
0 0 1 0 133 0 1 0 2 4 1 2 105 0 5 0 3 5 3 101 0 4 4 32 4 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
86 84 62 60 49 47 38 37 30 28 23 6 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 618;
}
);
leftKerningGroup = O;
note = Odieresis;
rightKerningGroup = O;
unicode = 00D6;
},
{
glyphname = multiply;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"472 389 LINE SMOOTH",
"518 433 OFFCURVE",
"530 446 QCURVE",
"543 459 OFFCURVE",
"543 475 QCURVE SMOOTH",
"543 496 OFFCURVE",
"525 509 QCURVE",
"515 517 OFFCURVE",
"498 526 OFFCURVE",
"491 526 QCURVE SMOOTH",
"481 526 OFFCURVE",
"457 510 QCURVE SMOOTH",
"451 506 OFFCURVE",
"427 490 OFFCURVE",
"419 483 QCURVE",
"417 482 OFFCURVE",
"405 472 OFFCURVE",
"393 459 OFFCURVE",
"391 451 QCURVE SMOOTH",
"385 429 OFFCURVE",
"360 396 OFFCURVE",
"337 373 QCURVE SMOOTH",
"317 353 OFFCURVE",
"308 342 QCURVE",
"296 348 OFFCURVE",
"276 367 OFFCURVE",
"258 393 OFFCURVE",
"254 398 QCURVE",
"230 432 LINE SMOOTH",
"201 476 OFFCURVE",
"178 501 QCURVE SMOOTH",
"155 527 OFFCURVE",
"103 561 QCURVE",
"93 567 OFFCURVE",
"79 567 QCURVE SMOOTH",
"60 567 OFFCURVE",
"54 556 QCURVE SMOOTH",
"50 549 OFFCURVE",
"50 543 QCURVE SMOOTH",
"50 537 OFFCURVE",
"56 527 OFFCURVE",
"66 516 OFFCURVE",
"69 512 QCURVE",
"122 451 LINE",
"242 309 LINE",
"250 297 OFFCURVE",
"255 291 QCURVE",
"173 183 LINE",
"200 165 OFFCURVE",
"212 165 QCURVE SMOOTH",
"224 165 OFFCURVE",
"242 180 QCURVE",
"291 218 LINE SMOOTH",
"308 231 OFFCURVE",
"319 231 QCURVE SMOOTH",
"329 231 OFFCURVE",
"345 221 QCURVE SMOOTH",
"378 201 OFFCURVE",
"444 163 QCURVE SMOOTH",
"505 128 LINE",
"507 127 OFFCURVE",
"520 119 OFFCURVE",
"526 118 QCURVE",
"531 118 OFFCURVE",
"546 123 OFFCURVE",
"552 125 QCURVE",
"535 147 OFFCURVE",
"497 177 OFFCURVE",
"459 203 QCURVE SMOOTH",
"424 226 OFFCURVE",
"380 261 OFFCURVE",
"363 284 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
71 47 24 3 0 3 23 1 1 0 2 76 5 1 1 73 0 2 3 2 133 0 3 0 3 133 0 0 1 0 133 0 1 1 118 61 60 45 35 47 4 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 602;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = Oslash;
lastChange = "2019-06-19 01:05:39 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"441 461 OFFCURVE",
"430 482 OFFCURVE",
"423 489 QCURVE",
"407 508 OFFCURVE",
"407 531 QCURVE SMOOTH",
"407 547 OFFCURVE",
"415 568 QCURVE SMOOTH",
"443 638 LINE",
"445 642 OFFCURVE",
"445 651 QCURVE SMOOTH",
"445 668 OFFCURVE",
"431 680 QCURVE",
"416 694 OFFCURVE",
"393 694 QCURVE SMOOTH",
"374 694 OFFCURVE",
"344 673 OFFCURVE",
"338 655 QCURVE",
"335 647 OFFCURVE",
"328 621 QCURVE SMOOTH",
"321 597 LINE SMOOTH",
"310 563 OFFCURVE",
"276 562 QCURVE SMOOTH",
"243 562 OFFCURVE",
"224 556 QCURVE SMOOTH",
"162 538 OFFCURVE",
"70 429 OFFCURVE",
"61 363 QCURVE SMOOTH",
"60 355 OFFCURVE",
"58 332 OFFCURVE",
"56 325 QCURVE",
"50 295 OFFCURVE",
"50 267 QCURVE SMOOTH",
"50 178 OFFCURVE",
"107 93 QCURVE SMOOTH",
"125 66 OFFCURVE",
"143 20 OFFCURVE",
"143 -5 QCURVE SMOOTH",
"143 -25 OFFCURVE",
"137 -47 QCURVE SMOOTH",
"135 -55 OFFCURVE",
"135 -59 QCURVE SMOOTH",
"135 -71 OFFCURVE",
"151 -86 OFFCURVE",
"163 -86 QCURVE SMOOTH",
"174 -86 OFFCURVE",
"183 -81 QCURVE",
"202 -72 OFFCURVE",
"217 -52 QCURVE",
"224 -41 OFFCURVE",
"233 -22 QCURVE SMOOTH",
"242 -4 LINE",
"264 2 LINE",
"287 5 LINE SMOOTH",
"401 20 OFFCURVE",
"449 127 QCURVE SMOOTH",
"489 212 OFFCURVE",
"489 292 QCURVE SMOOTH",
"489 378 OFFCURVE",
"443 457 QCURVE"
);
},
{
closed = 1;
nodes = (
"191 167 LINE",
"190 164 OFFCURVE",
"178 160 OFFCURVE",
"174 158 QCURVE",
"158 176 OFFCURVE",
"145 223 OFFCURVE",
"143 254 QCURVE",
"142 289 OFFCURVE",
"142 358 QCURVE SMOOTH",
"142 415 OFFCURVE",
"208 489 OFFCURVE",
"267 500 QCURVE",
"268 501 OFFCURVE",
"274 496 OFFCURVE",
"277 494 QCURVE",
"277 491 OFFCURVE",
"277 470 OFFCURVE",
"275 460 QCURVE"
);
},
{
closed = 1;
nodes = (
"357 149 OFFCURVE",
"317 97 OFFCURVE",
"279 87 QCURVE",
"278 91 OFFCURVE",
"272 104 OFFCURVE",
"272 107 QCURVE SMOOTH",
"272 109 LINE",
"291 199 OFFCURVE",
"346 348 OFFCURVE",
"374 389 QCURVE",
"395 350 OFFCURVE",
"395 306 QCURVE SMOOTH",
"395 280 OFFCURVE",
"383 227 OFFCURVE",
"371 190 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
81 72 17 3 0 1 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 1 2 0 2 1 0 128 0 0 0 132 0 2 2 36 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 14 values pushed */
0 2 1 2 133 0 1 0 1 133 0 0 0 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
45 43 37 35 45 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 539;
}
);
leftKerningGroup = O;
note = Oslash;
rightKerningGroup = O;
unicode = 00D8;
},
{
glyphname = Ugrave;
lastChange = "2019-10-02 10:55:21 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"319 547 OFFCURVE",
"324 570 OFFCURVE",
"324 583 QCURVE SMOOTH",
"324 603 OFFCURVE",
"320 612 QCURVE",
"314 631 OFFCURVE",
"290 674 QCURVE SMOOTH",
"286 681 OFFCURVE",
"275 700 OFFCURVE",
"269 713 QCURVE SMOOTH",
"256 741 OFFCURVE",
"226 760 OFFCURVE",
"204 760 QCURVE SMOOTH",
"195 760 OFFCURVE",
"175 758 OFFCURVE",
"164 758 QCURVE",
"153 757 OFFCURVE",
"132 748 QCURVE SMOOTH",
"109 739 LINE",
"145 683 LINE SMOOTH",
"166 648 OFFCURVE",
"213 576 OFFCURVE",
"236 549 QCURVE SMOOTH",
"244 540 OFFCURVE",
"270 540 QCURVE SMOOTH",
"296 540 OFFCURVE",
"316 546 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"553 504 OFFCURVE",
"470 592 OFFCURVE",
"417 595 QCURVE",
"422 570 OFFCURVE",
"431 534 QCURVE SMOOTH",
"442 488 OFFCURVE",
"453 430 OFFCURVE",
"454 401 QCURVE SMOOTH",
"457 294 OFFCURVE",
"405 146 OFFCURVE",
"322 99 QCURVE SMOOTH",
"290 80 OFFCURVE",
"266 80 QCURVE SMOOTH",
"246 80 OFFCURVE",
"216 108 OFFCURVE",
"203 139 QCURVE SMOOTH",
"176 203 OFFCURVE",
"176 276 QCURVE SMOOTH",
"176 318 OFFCURVE",
"186 373 QCURVE SMOOTH",
"188 385 OFFCURVE",
"188 394 QCURVE SMOOTH",
"188 406 OFFCURVE",
"184 409 QCURVE SMOOTH",
"180 412 OFFCURVE",
"153 430 OFFCURVE",
"121 446 OFFCURVE",
"106 445 QCURVE SMOOTH",
"93 444 OFFCURVE",
"60 406 OFFCURVE",
"57 389 QCURVE",
"50 357 OFFCURVE",
"50 318 QCURVE SMOOTH",
"50 240 OFFCURVE",
"119 98 OFFCURVE",
"189 49 QCURVE SMOOTH",
"251 5 OFFCURVE",
"318 5 QCURVE SMOOTH",
"381 5 OFFCURVE",
"491 84 OFFCURVE",
"526 146 QCURVE SMOOTH",
"568 222 OFFCURVE",
"568 326 QCURVE SMOOTH",
"568 380 OFFCURVE",
"560 439 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
7 1 6 1 1 76 2 1 1 6 1 133 0 6 0 6 133 0 0 4 0 133 0 4 5 4 133 0 5 5 3 97 0 3 3 40 3 78 69 68 59 57 44 43 34 32 33 24 32 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 618;
}
);
leftKerningGroup = U;
note = Ugrave;
rightKerningGroup = U;
unicode = 00D9;
},
{
glyphname = Uacute;
lastChange = "2019-10-02 10:55:15 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"328 574 OFFCURVE",
"354 563 OFFCURVE",
"357 561 QCURVE",
"381 562 OFFCURVE",
"412 574 OFFCURVE",
"424 586 QCURVE SMOOTH",
"470 634 OFFCURVE",
"514 685 QCURVE SMOOTH",
"531 704 OFFCURVE",
"536 720 QCURVE",
"539 726 OFFCURVE",
"539 735 QCURVE SMOOTH",
"539 743 OFFCURVE",
"535 753 QCURVE SMOOTH",
"529 767 OFFCURVE",
"513 767 QCURVE SMOOTH",
"508 767 OFFCURVE",
"501 765 OFFCURVE",
"498 764 QCURVE",
"445 749 OFFCURVE",
"357 683 OFFCURVE",
"311 632 QCURVE",
"303 622 OFFCURVE",
"303 611 QCURVE SMOOTH",
"303 602 OFFCURVE",
"310 586 OFFCURVE",
"317 582 QCURVE"
);
},
{
closed = 1;
nodes = (
"642 581 OFFCURVE",
"612 606 QCURVE",
"592 625 LINE",
"588 615 OFFCURVE",
"581 597 OFFCURVE",
"578 587 QCURVE SMOOTH",
"570 557 OFFCURVE",
"559 511 QCURVE SMOOTH",
"542 439 OFFCURVE",
"525 382 QCURVE SMOOTH",
"512 339 OFFCURVE",
"485 277 OFFCURVE",
"466 253 QCURVE SMOOTH",
"422 196 OFFCURVE",
"347 152 QCURVE SMOOTH",
"329 141 OFFCURVE",
"287 127 OFFCURVE",
"254 119 QCURVE SMOOTH",
"227 112 LINE SMOOTH",
"223 111 OFFCURVE",
"217 111 QCURVE SMOOTH",
"197 111 OFFCURVE",
"183 134 QCURVE SMOOTH",
"148 188 OFFCURVE",
"148 245 QCURVE",
"149 261 LINE SMOOTH",
"155 334 OFFCURVE",
"179 480 QCURVE SMOOTH",
"180 487 OFFCURVE",
"185 510 OFFCURVE",
"185 519 QCURVE SMOOTH",
"185 537 OFFCURVE",
"172 550 QCURVE",
"173 549 OFFCURVE",
"134 585 QCURVE SMOOTH",
"108 608 LINE",
"66 579 OFFCURVE",
"63 541 QCURVE SMOOTH",
"61 511 OFFCURVE",
"61 496 QCURVE",
"59 451 OFFCURVE",
"56 429 QCURVE SMOOTH",
"50 387 OFFCURVE",
"50 346 QCURVE SMOOTH",
"50 192 OFFCURVE",
"141 80 QCURVE SMOOTH",
"168 48 OFFCURVE",
"242 4 OFFCURVE",
"282 4 QCURVE SMOOTH",
"300 4 OFFCURVE",
"313 8 QCURVE",
"444 42 OFFCURVE",
"542 138 QCURVE SMOOTH",
"574 168 OFFCURVE",
"589 206 QCURVE SMOOTH",
"619 277 OFFCURVE",
"655 432 OFFCURVE",
"669 526 QCURVE SMOOTH",
"670 534 LINE",
"670 550 OFFCURVE",
"662 558 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
84 51 2 1 0 61 49 28 3 3 1 2 76 0 0 1 0 133 0 1 3 1 133 0 3 2 3 133 0 2 2 40 2 78 66 65 46 27 41 4 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 720;
}
);
leftKerningGroup = U;
note = Uacute;
rightKerningGroup = U;
unicode = 00DA;
},
{
glyphname = Ucircumflex;
lastChange = "2019-10-02 10:55:08 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"195 659 OFFCURVE",
"221 703 QCURVE SMOOTH",
"224 708 OFFCURVE",
"239 731 OFFCURVE",
"259 754 OFFCURVE",
"276 764 QCURVE",
"283 756 OFFCURVE",
"295 740 QCURVE",
"329 700 OFFCURVE",
"327 702 QCURVE",
"365 662 OFFCURVE",
"376 652 QCURVE",
"387 644 OFFCURVE",
"399 644 QCURVE SMOOTH",
"418 644 OFFCURVE",
"431 659 QCURVE SMOOTH",
"440 670 OFFCURVE",
"440 681 QCURVE SMOOTH",
"440 694 OFFCURVE",
"432 705 QCURVE",
"411 739 LINE SMOOTH",
"360 819 OFFCURVE",
"334 852 QCURVE SMOOTH",
"304 889 OFFCURVE",
"262 889 QCURVE SMOOTH",
"238 889 OFFCURVE",
"195 862 OFFCURVE",
"183 836 QCURVE",
"163 797 OFFCURVE",
"127 740 OFFCURVE",
"105 716 QCURVE SMOOTH",
"95 705 OFFCURVE",
"95 692 QCURVE SMOOTH",
"95 685 OFFCURVE",
"98 677 QCURVE SMOOTH",
"103 664 OFFCURVE",
"124 652 OFFCURVE",
"137 654 QCURVE"
);
},
{
closed = 1;
nodes = (
"556 602 OFFCURVE",
"537 631 OFFCURVE",
"517 654 QCURVE",
"512 659 OFFCURVE",
"498 659 QCURVE SMOOTH",
"485 659 OFFCURVE",
"478 655 QCURVE",
"472 652 OFFCURVE",
"465 631 OFFCURVE",
"465 621 QCURVE",
"464 607 OFFCURVE",
"464 577 QCURVE SMOOTH",
"464 533 LINE",
"476 531 LINE",
"464 449 LINE SMOOTH",
"445 314 OFFCURVE",
"424 239 QCURVE SMOOTH",
"416 211 OFFCURVE",
"380 161 OFFCURVE",
"346 123 QCURVE SMOOTH",
"330 105 LINE SMOOTH",
"325 99 OFFCURVE",
"301 91 OFFCURVE",
"289 91 QCURVE SMOOTH",
"280 91 OFFCURVE",
"274 94 QCURVE",
"258 103 OFFCURVE",
"230 135 OFFCURVE",
"222 152 QCURVE",
"175 267 OFFCURVE",
"175 411 QCURVE SMOOTH",
"175 445 OFFCURVE",
"176 462 QCURVE SMOOTH",
"178 505 OFFCURVE",
"156 554 OFFCURVE",
"121 571 QCURVE SMOOTH",
"101 581 OFFCURVE",
"84 581 QCURVE SMOOTH",
"47 581 OFFCURVE",
"50 523 QCURVE SMOOTH",
"58 417 OFFCURVE",
"60 364 QCURVE SMOOTH",
"70 167 OFFCURVE",
"229 47 QCURVE SMOOTH",
"286 4 OFFCURVE",
"333 4 QCURVE SMOOTH",
"361 4 OFFCURVE",
"389 19 QCURVE SMOOTH",
"451 53 OFFCURVE",
"533 158 OFFCURVE",
"549 226 QCURVE SMOOTH",
"573 327 OFFCURVE",
"573 427 QCURVE SMOOTH",
"573 504 OFFCURVE",
"559 586 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
31 1 5 0 82 1 3 1 79 52 2 4 3 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 0 5 0 133 0 1 5 3 5 1 3 128 0 3 4 5 3 4 126 0 5 5 30 77 0 4 4 2 97 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 0 5 0 133 0 5 1 5 133 0 1 3 1 133 0 3 4 3 133 0 4 4 2 97 0 2 2 40 2 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 13 values pushed */
88 86 69 67 55 53 47 45 41 43 6 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 623;
}
);
leftKerningGroup = U;
note = Ucircumflex;
rightKerningGroup = U;
unicode = 00DB;
},
{
glyphname = Udieresis;
lastChange = "2019-10-02 10:54:59 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"307 710 OFFCURVE",
"307 718 QCURVE SMOOTH",
"307 735 OFFCURVE",
"277 767 OFFCURVE",
"227 786 OFFCURVE",
"199 785 QCURVE",
"163 722 LINE",
"177 715 OFFCURVE",
"192 705 QCURVE SMOOTH",
"234 679 OFFCURVE",
"256 672 QCURVE SMOOTH",
"266 669 OFFCURVE",
"300 694 OFFCURVE",
"305 706 QCURVE"
);
},
{
closed = 1;
nodes = (
"566 703 OFFCURVE",
"525 741 OFFCURVE",
"494 741 QCURVE SMOOTH",
"483 741 OFFCURVE",
"458 731 OFFCURVE",
"438 721 QCURVE SMOOTH",
"421 712 OFFCURVE",
"392 699 QCURVE",
"433 667 LINE SMOOTH",
"438 663 OFFCURVE",
"457 649 OFFCURVE",
"484 630 OFFCURVE",
"496 626 QCURVE SMOOTH",
"507 622 OFFCURVE",
"520 622 QCURVE SMOOTH",
"540 622 OFFCURVE",
"566 647 OFFCURVE",
"566 672 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"642 581 OFFCURVE",
"612 606 QCURVE",
"592 625 LINE",
"588 615 OFFCURVE",
"581 597 OFFCURVE",
"578 587 QCURVE SMOOTH",
"570 557 OFFCURVE",
"559 511 QCURVE SMOOTH",
"542 439 OFFCURVE",
"525 382 QCURVE SMOOTH",
"512 339 OFFCURVE",
"485 277 OFFCURVE",
"466 253 QCURVE SMOOTH",
"422 196 OFFCURVE",
"347 152 QCURVE SMOOTH",
"329 141 OFFCURVE",
"287 127 OFFCURVE",
"254 119 QCURVE SMOOTH",
"227 112 LINE SMOOTH",
"223 111 OFFCURVE",
"217 111 QCURVE SMOOTH",
"198 111 OFFCURVE",
"183 134 QCURVE SMOOTH",
"148 188 OFFCURVE",
"148 245 QCURVE",
"149 261 LINE SMOOTH",
"155 334 OFFCURVE",
"179 480 QCURVE SMOOTH",
"180 487 OFFCURVE",
"185 510 OFFCURVE",
"185 519 QCURVE SMOOTH",
"185 537 OFFCURVE",
"172 550 QCURVE",
"173 549 OFFCURVE",
"134 585 QCURVE SMOOTH",
"108 608 LINE",
"66 579 OFFCURVE",
"63 541 QCURVE SMOOTH",
"61 511 OFFCURVE",
"61 496 QCURVE",
"59 451 OFFCURVE",
"56 429 QCURVE SMOOTH",
"50 387 OFFCURVE",
"50 346 QCURVE SMOOTH",
"50 192 OFFCURVE",
"141 80 QCURVE SMOOTH",
"168 48 OFFCURVE",
"242 4 OFFCURVE",
"282 4 QCURVE SMOOTH",
"300 4 OFFCURVE",
"313 8 QCURVE",
"444 42 OFFCURVE",
"542 138 QCURVE SMOOTH",
"574 168 OFFCURVE",
"589 206 QCURVE SMOOTH",
"619 277 OFFCURVE",
"655 432 OFFCURVE",
"669 526 QCURVE SMOOTH",
"670 534 LINE",
"670 550 OFFCURVE",
"662 558 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
89 23 11 6 4 1 2 66 56 54 33 4 4 1 2 76 0 0 2 0 133 0 4 1 3 1 4 3 128 0 2 0 1 4 2 1 105 0 3 3 40 3 78 71 70 45 42 39 23 5 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 720;
}
);
leftKerningGroup = U;
note = Udieresis;
rightKerningGroup = U;
unicode = 00DC;
},
{
glyphname = Yacute;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"325 614 OFFCURVE",
"349 616 OFFCURVE",
"374 622 OFFCURVE",
"383 629 QCURVE SMOOTH",
"473 699 OFFCURVE",
"556 778 QCURVE SMOOTH",
"574 795 OFFCURVE",
"574 815 QCURVE SMOOTH",
"574 832 OFFCURVE",
"549 861 OFFCURVE",
"527 871 QCURVE",
"509 867 OFFCURVE",
"503 862 QCURVE SMOOTH",
"486 848 OFFCURVE",
"458 814 QCURVE",
"420 772 LINE SMOOTH",
"344 690 OFFCURVE",
"308 648 QCURVE",
"301 641 OFFCURVE",
"301 632 QCURVE SMOOTH",
"301 624 OFFCURVE",
"313 613 OFFCURVE",
"322 614 QCURVE"
);
},
{
closed = 1;
nodes = (
"628 617 OFFCURVE",
"599 617 QCURVE SMOOTH",
"548 617 OFFCURVE",
"513 560 QCURVE SMOOTH",
"427 415 LINE",
"395 361 LINE SMOOTH",
"379 332 OFFCURVE",
"359 332 QCURVE SMOOTH",
"346 332 OFFCURVE",
"327 345 QCURVE",
"296 370 OFFCURVE",
"285 386 QCURVE SMOOTH",
"212 498 OFFCURVE",
"180 629 QCURVE SMOOTH",
"176 645 OFFCURVE",
"161 664 OFFCURVE",
"147 668 QCURVE",
"141 669 OFFCURVE",
"113 680 OFFCURVE",
"105 681 QCURVE",
"69 683 OFFCURVE",
"55 673 QCURVE",
"50 671 OFFCURVE",
"50 657 QCURVE SMOOTH",
"50 641 OFFCURVE",
"55 629 QCURVE SMOOTH",
"64 608 LINE SMOOTH",
"112 494 OFFCURVE",
"141 440 QCURVE SMOOTH",
"203 326 OFFCURVE",
"319 292 QCURVE",
"324 290 OFFCURVE",
"338 280 OFFCURVE",
"342 278 QCURVE",
"167 -127 LINE",
"174 -132 LINE",
"180 -128 OFFCURVE",
"203 -111 OFFCURVE",
"209 -113 QCURVE SMOOTH",
"215 -115 OFFCURVE",
"226 -115 QCURVE SMOOTH",
"240 -115 OFFCURVE",
"261 -99 OFFCURVE",
"277 -70 OFFCURVE",
"279 -66 QCURVE",
"340 38 OFFCURVE",
"458 250 QCURVE SMOOTH",
"471 274 LINE SMOOTH",
"524 370 OFFCURVE",
"609 495 OFFCURVE",
"667 547 QCURVE SMOOTH",
"679 558 OFFCURVE",
"679 570 QCURVE SMOOTH",
"679 588 OFFCURVE",
"659 599 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
43 1 0 2 1 76 11 1 1 74 41 1 0 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 2 3 0 3 2 0 128 0 0 0 132 0 1 1 30 77 0 3 3 32 3 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 1 3 1 133 0 2 3 0 3 2 0 128 0 0 0 132 0 3 3 32 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 19 values pushed */
0 1 3 1 133 0 3 2 3 133 0 2 0 2 133 0 0 0 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
76 74 70 68 57 56 37 35 4 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 729;
}
);
note = Yacute;
unicode = 00DD;
},
{
glyphname = Thorn;
lastChange = "2019-11-20 00:15:29 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"320 602 OFFCURVE",
"305 596 QCURVE",
"232 565 LINE",
"212 556 LINE",
"212 605 LINE",
"209 605 LINE",
"209 709 LINE SMOOTH",
"209 741 OFFCURVE",
"192 776 OFFCURVE",
"168 776 QCURVE SMOOTH",
"140 776 OFFCURVE",
"108 738 OFFCURVE",
"108 709 QCURVE SMOOTH",
"108 686 OFFCURVE",
"108 657 QCURVE",
"107 624 LINE",
"108 504 LINE",
"105 498 OFFCURVE",
"105 488 QCURVE SMOOTH",
"105 480 OFFCURVE",
"108 454 OFFCURVE",
"108 445 QCURVE SMOOTH",
"109 366 OFFCURVE",
"109 274 QCURVE SMOOTH",
"109 103 LINE",
"113 103 LINE",
"113 46 LINE",
"113 17 LINE SMOOTH",
"113 -70 OFFCURVE",
"129 -105 OFFCURVE",
"147 -105 QCURVE SMOOTH",
"175 -105 OFFCURVE",
"213 -67 OFFCURVE",
"213 19 QCURVE SMOOTH",
"213 40 OFFCURVE",
"214 50 QCURVE",
"215 84 LINE",
"214 127 OFFCURVE",
"212 136 OFFCURVE",
"212 138 QCURVE SMOOTH",
"212 206 LINE",
"216 220 OFFCURVE",
"231 220 QCURVE SMOOTH",
"241 220 OFFCURVE",
"251 216 QCURVE SMOOTH",
"277 208 OFFCURVE",
"302 208 QCURVE SMOOTH",
"372 208 OFFCURVE",
"409 278 QCURVE SMOOTH",
"431 316 OFFCURVE",
"457 374 OFFCURVE",
"464 403 QCURVE SMOOTH",
"476 451 OFFCURVE",
"476 483 QCURVE SMOOTH",
"476 537 OFFCURVE",
"415 595 OFFCURVE",
"346 600 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"247 270 OFFCURVE",
"232 270 QCURVE SMOOTH",
"220 270 OFFCURVE",
"212 280 QCURVE",
"211 353 OFFCURVE",
"211 461 QCURVE",
"246 489 OFFCURVE",
"338 526 OFFCURVE",
"361 464 OFFCURVE",
"360 458 QCURVE",
"346 323 OFFCURVE",
"264 284 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 73 values pushed */
50 41 2 4 3 66 64 58 52 39 5 5 4 20 16 15 3 2 0 3 76 0 3 4 3 133 0 2 0 2 134 6 1 4 5 0 4 89 0 5 0 1 0 5 1 105 6 1 4 4 0 97 0 0 4 0 81 0 0 69 67 0 56 0 55 47 45 42 34 40 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 526;
}
);
note = Thorn;
unicode = 00DE;
},
{
glyphname = germandbls;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"517 244 OFFCURVE",
"457 267 OFFCURVE",
"414 277 QCURVE",
"381 286 LINE",
"359 293 OFFCURVE",
"346 300 OFFCURVE",
"346 307 QCURVE SMOOTH",
"346 314 OFFCURVE",
"357 341 QCURVE SMOOTH",
"373 381 OFFCURVE",
"373 416 QCURVE SMOOTH",
"373 491 OFFCURVE",
"297 522 QCURVE SMOOTH",
"287 526 OFFCURVE",
"265 533 OFFCURVE",
"257 531 QCURVE SMOOTH",
"219 522 OFFCURVE",
"165 475 OFFCURVE",
"152 440 QCURVE SMOOTH",
"149 431 OFFCURVE",
"135 396 QCURVE SMOOTH",
"110 328 OFFCURVE",
"87 256 OFFCURVE",
"80 215 QCURVE",
"78 196 OFFCURVE",
"72 166 QCURVE",
"61 95 OFFCURVE",
"50 3 OFFCURVE",
"50 -44 QCURVE SMOOTH",
"50 -79 OFFCURVE",
"55 -122 QCURVE SMOOTH",
"60 -156 OFFCURVE",
"81 -185 OFFCURVE",
"105 -185 QCURVE SMOOTH",
"116 -185 OFFCURVE",
"131 -182 QCURVE",
"138 -181 OFFCURVE",
"155 -160 OFFCURVE",
"156 -152 QCURVE SMOOTH",
"157 -141 OFFCURVE",
"154 -114 OFFCURVE",
"154 -108 QCURVE",
"151 -92 OFFCURVE",
"151 -74 QCURVE",
"152 -51 OFFCURVE",
"151 -16 OFFCURVE",
"151 -4 QCURVE",
"150 12 OFFCURVE",
"150 43 QCURVE SMOOTH",
"150 110 OFFCURVE",
"159 158 QCURVE SMOOTH",
"168 203 OFFCURVE",
"199 295 OFFCURVE",
"222 355 QCURVE SMOOTH",
"241 404 OFFCURVE",
"245 417 QCURVE",
"248 425 OFFCURVE",
"266 447 OFFCURVE",
"271 454 QCURVE",
"282 449 LINE",
"282 442 OFFCURVE",
"284 429 OFFCURVE",
"284 422 QCURVE SMOOTH",
"284 415 OFFCURVE",
"281 407 QCURVE SMOOTH",
"271 380 OFFCURVE",
"254 340 OFFCURVE",
"248 326 QCURVE SMOOTH",
"225 271 LINE",
"221 259 OFFCURVE",
"221 252 QCURVE SMOOTH",
"221 244 OFFCURVE",
"224 239 QCURVE SMOOTH",
"244 205 OFFCURVE",
"273 205 QCURVE SMOOTH",
"285 205 OFFCURVE",
"298 211 QCURVE",
"333 225 OFFCURVE",
"373 225 QCURVE SMOOTH",
"398 225 OFFCURVE",
"431 220 QCURVE SMOOTH",
"457 216 OFFCURVE",
"486 193 OFFCURVE",
"486 175 QCURVE SMOOTH",
"486 160 OFFCURVE",
"474 140 QCURVE",
"444 94 OFFCURVE",
"416 81 QCURVE SMOOTH",
"380 63 OFFCURVE",
"310 44 QCURVE SMOOTH",
"286 37 LINE",
"272 34 OFFCURVE",
"259 28 OFFCURVE",
"259 22 QCURVE SMOOTH",
"259 19 OFFCURVE",
"264 12 QCURVE",
"275 -2 OFFCURVE",
"310 -24 OFFCURVE",
"325 -24 QCURVE SMOOTH",
"488 -29 OFFCURVE",
"566 103 QCURVE SMOOTH",
"582 129 OFFCURVE",
"582 153 QCURVE SMOOTH",
"582 188 OFFCURVE",
"543 222 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
45 33 2 1 74 0 1 2 1 133 0 2 0 2 133 0 3 0 3 134 0 0 0 31 0 78 71 69 30 28 26 24 36 4 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 632;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = agrave;
lastChange = "2019-06-19 00:47:48 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"198 602 OFFCURVE",
"304 551 OFFCURVE",
"370 547 QCURVE",
"373 547 OFFCURVE",
"385 552 OFFCURVE",
"386 556 QCURVE SMOOTH",
"388 564 OFFCURVE",
"388 570 QCURVE SMOOTH",
"388 583 OFFCURVE",
"382 589 QCURVE SMOOTH",
"364 607 OFFCURVE",
"338 617 QCURVE SMOOTH",
"254 651 OFFCURVE",
"211 706 QCURVE",
"205 715 OFFCURVE",
"180 728 OFFCURVE",
"167 730 QCURVE",
"158 732 OFFCURVE",
"135 725 OFFCURVE",
"126 718 QCURVE",
"118 710 OFFCURVE",
"118 701 QCURVE SMOOTH",
"118 692 OFFCURVE",
"126 676 QCURVE",
"138 656 OFFCURVE",
"148 647 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"450 177 LINE SMOOTH",
"450 276 OFFCURVE",
"449 326 QCURVE SMOOTH",
"448 374 OFFCURVE",
"382 457 OFFCURVE",
"319 471 QCURVE SMOOTH",
"300 475 OFFCURVE",
"278 475 QCURVE SMOOTH",
"247 475 OFFCURVE",
"184 459 OFFCURVE",
"144 444 QCURVE",
"132 440 OFFCURVE",
"119 421 OFFCURVE",
"119 410 QCURVE SMOOTH",
"119 405 OFFCURVE",
"120 402 QCURVE SMOOTH",
"131 370 OFFCURVE",
"156 369 QCURVE",
"164 368 OFFCURVE",
"180 368 QCURVE SMOOTH",
"202 368 OFFCURVE",
"223 371 QCURVE SMOOTH",
"232 372 OFFCURVE",
"258 379 QCURVE SMOOTH",
"278 385 OFFCURVE",
"296 388 QCURVE",
"300 389 OFFCURVE",
"308 389 QCURVE SMOOTH",
"341 389 OFFCURVE",
"347 349 QCURVE SMOOTH",
"348 341 LINE",
"348 332 OFFCURVE",
"346 319 OFFCURVE",
"345 314 QCURVE",
"334 313 OFFCURVE",
"314 313 QCURVE",
"273 311 OFFCURVE",
"253 308 QCURVE SMOOTH",
"160 292 OFFCURVE",
"83 206 QCURVE SMOOTH",
"66 187 OFFCURVE",
"50 159 OFFCURVE",
"50 146 QCURVE SMOOTH",
"50 116 OFFCURVE",
"103 80 QCURVE SMOOTH",
"118 70 OFFCURVE",
"159 60 OFFCURVE",
"179 60 QCURVE SMOOTH",
"224 60 OFFCURVE",
"285 67 QCURVE SMOOTH",
"296 68 OFFCURVE",
"323 74 OFFCURVE",
"328 75 QCURVE",
"346 27 OFFCURVE",
"365 -4 OFFCURVE",
"394 -15 OFFCURVE",
"436 -19 QCURVE",
"445 -7 OFFCURVE",
"450 19 OFFCURVE",
"449 49 OFFCURVE",
"449 58 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"187 134 OFFCURVE",
"161 145 OFFCURVE",
"152 148 QCURVE",
"185 197 OFFCURVE",
"235 231 QCURVE SMOOTH",
"254 243 OFFCURVE",
"275 243 QCURVE SMOOTH",
"281 243 OFFCURVE",
"293 241 QCURVE",
"332 232 OFFCURVE",
"341 196 QCURVE",
"323 176 OFFCURVE",
"270 149 OFFCURVE",
"201 136 OFFCURVE",
"195 135 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 85 values pushed */
72 1 3 6 55 1 2 4 98 90 33 3 1 7 3 76 17 1 0 74 29 1 1 73 0 0 6 0 133 0 6 3 6 133 0 3 4 3 133 5 1 4 2 4 133 0 1 7 1 134 0 2 7 7 2 89 0 2 2 7 98 0 7 2 7 82 95 93 79 77 69 68 67 65 58 57 51 49 39 37 23 21 8 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 500;
}
);
leftKerningGroup = a;
note = agrave;
rightKerningGroup = a;
unicode = 00E0;
},
{
glyphname = aacute;
lastChange = "2019-06-19 00:47:48 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"360 660 OFFCURVE",
"342 661 QCURVE SMOOTH",
"325 662 OFFCURVE",
"308 651 QCURVE",
"246 609 OFFCURVE",
"212 550 QCURVE SMOOTH",
"208 543 OFFCURVE",
"208 532 QCURVE SMOOTH",
"208 526 OFFCURVE",
"209 524 QCURVE",
"212 519 OFFCURVE",
"228 511 OFFCURVE",
"234 508 QCURVE",
"254 514 LINE SMOOTH",
"294 526 OFFCURVE",
"313 535 QCURVE",
"331 543 OFFCURVE",
"370 571 OFFCURVE",
"378 576 QCURVE SMOOTH",
"400 590 OFFCURVE",
"399 611 QCURVE SMOOTH",
"398 632 OFFCURVE",
"379 646 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 444 OFFCURVE",
"170 432 QCURVE",
"159 431 OFFCURVE",
"140 428 QCURVE",
"125 426 OFFCURVE",
"116 415 QCURVE",
"102 396 OFFCURVE",
"99 380 QCURVE",
"98 369 OFFCURVE",
"121 350 OFFCURVE",
"133 350 QCURVE",
"176 350 OFFCURVE",
"217 355 QCURVE SMOOTH",
"226 356 OFFCURVE",
"251 360 QCURVE",
"258 362 OFFCURVE",
"273 364 QCURVE",
"287 336 OFFCURVE",
"287 304 QCURVE SMOOTH",
"287 283 OFFCURVE",
"281 248 QCURVE",
"277 221 LINE",
"230 241 OFFCURVE",
"216 247 QCURVE",
"188 259 OFFCURVE",
"162 259 QCURVE SMOOTH",
"112 258 OFFCURVE",
"59 216 QCURVE SMOOTH",
"34 196 OFFCURVE",
"35 162 QCURVE SMOOTH",
"36 126 OFFCURVE",
"76 65 OFFCURVE",
"142 30 OFFCURVE",
"178 30 QCURVE SMOOTH",
"186 30 OFFCURVE",
"199 31 QCURVE",
"209 33 OFFCURVE",
"263 44 QCURVE",
"268 22 LINE",
"275 -6 LINE SMOOTH",
"279 -21 OFFCURVE",
"288 -41 OFFCURVE",
"299 -48 QCURVE",
"314 -58 OFFCURVE",
"329 -58 QCURVE SMOOTH",
"343 -58 OFFCURVE",
"361 -50 QCURVE",
"360 54 LINE",
"360 88 OFFCURVE",
"361 105 QCURVE SMOOTH",
"362 129 OFFCURVE",
"368 178 QCURVE SMOOTH",
"374 227 OFFCURVE",
"375 252 QCURVE SMOOTH",
"376 282 OFFCURVE",
"377 298 QCURVE SMOOTH",
"379 327 OFFCURVE",
"373 350 QCURVE SMOOTH",
"362 393 OFFCURVE",
"305 444 OFFCURVE",
"261 444 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"170 107 OFFCURVE",
"166 107 QCURVE SMOOTH",
"154 107 OFFCURVE",
"131 119 OFFCURVE",
"123 129 QCURVE",
"116 142 OFFCURVE",
"116 159 QCURVE SMOOTH",
"116 179 OFFCURVE",
"125 189 QCURVE SMOOTH",
"130 195 OFFCURVE",
"149 201 OFFCURVE",
"156 201 QCURVE SMOOTH",
"173 201 OFFCURVE",
"210 180 OFFCURVE",
"245 152 QCURVE",
"233 134 OFFCURVE",
"202 116 OFFCURVE",
"179 109 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 88 values pushed */
9 1 5 0 66 1 4 5 61 1 6 3 86 1 7 6 45 33 2 2 7 36 1 1 2 6 76 0 0 5 0 133 8 1 5 4 5 133 0 4 3 4 133 0 3 0 6 7 3 6 105 0 7 0 2 1 7 2 105 0 1 1 31 1 78 23 23 99 98 89 88 23 83 23 82 73 71 58 56 50 48 39 37 21 19 9 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 440;
}
);
leftKerningGroup = a;
note = aacute;
rightKerningGroup = a;
unicode = 00E1;
},
{
glyphname = acircumflex;
lastChange = "2019-06-19 00:47:48 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"283 534 OFFCURVE",
"300 551 OFFCURVE",
"317 560 OFFCURVE",
"330 560 QCURVE SMOOTH",
"337 560 OFFCURVE",
"341 559 QCURVE",
"342 558 OFFCURVE",
"349 544 OFFCURVE",
"355 537 QCURVE SMOOTH",
"366 524 OFFCURVE",
"384 513 QCURVE",
"394 506 OFFCURVE",
"407 506 QCURVE SMOOTH",
"426 506 OFFCURVE",
"438 520 QCURVE SMOOTH",
"446 529 OFFCURVE",
"446 540 QCURVE SMOOTH",
"446 551 OFFCURVE",
"440 561 QCURVE",
"407 621 OFFCURVE",
"358 656 QCURVE SMOOTH",
"330 676 OFFCURVE",
"305 676 QCURVE SMOOTH",
"275 676 OFFCURVE",
"250 651 QCURVE SMOOTH",
"223 623 OFFCURVE",
"191 575 OFFCURVE",
"187 545 QCURVE",
"216 517 OFFCURVE",
"238 517 QCURVE SMOOTH",
"252 517 OFFCURVE",
"279 532 QCURVE"
);
},
{
closed = 1;
nodes = (
"448 416 OFFCURVE",
"383 465 OFFCURVE",
"350 465 QCURVE",
"340 464 LINE",
"248 451 OFFCURVE",
"169 392 QCURVE SMOOTH",
"155 381 OFFCURVE",
"155 366 QCURVE SMOOTH",
"155 352 OFFCURVE",
"168 341 QCURVE",
"193 322 OFFCURVE",
"221 322 QCURVE SMOOTH",
"241 322 OFFCURVE",
"260 331 QCURVE",
"281 342 LINE",
"297 353 OFFCURVE",
"313 359 QCURVE",
"322 363 OFFCURVE",
"348 365 OFFCURVE",
"354 366 QCURVE",
"368 346 OFFCURVE",
"368 327 QCURVE SMOOTH",
"368 315 OFFCURVE",
"360 299 QCURVE",
"337 300 LINE",
"312 303 OFFCURVE",
"293 302 QCURVE",
"264 302 OFFCURVE",
"249 295 QCURVE SMOOTH",
"145 247 OFFCURVE",
"92 183 QCURVE SMOOTH",
"68 152 OFFCURVE",
"60 133 QCURVE",
"50 112 OFFCURVE",
"50 89 QCURVE SMOOTH",
"50 55 OFFCURVE",
"94 4 OFFCURVE",
"132 -2 QCURVE",
"150 -4 OFFCURVE",
"159 -4 QCURVE SMOOTH",
"186 -4 OFFCURVE",
"213 4 QCURVE SMOOTH",
"240 13 OFFCURVE",
"292 37 QCURVE SMOOTH",
"329 54 LINE SMOOTH",
"337 58 OFFCURVE",
"363 66 OFFCURVE",
"373 69 QCURVE",
"374 61 OFFCURVE",
"379 36 OFFCURVE",
"380 28 QCURVE SMOOTH",
"385 -12 LINE",
"419 -19 OFFCURVE",
"430 -19 QCURVE SMOOTH",
"441 -19 OFFCURVE",
"448 -13 QCURVE",
"467 0 OFFCURVE",
"469 32 QCURVE SMOOTH",
"472 122 LINE SMOOTH",
"477 213 OFFCURVE",
"478 301 QCURVE SMOOTH",
"478 332 OFFCURVE",
"461 381 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"165 80 OFFCURVE",
"151 92 QCURVE",
"149 94 OFFCURVE",
"150 109 OFFCURVE",
"152 112 QCURVE",
"182 151 OFFCURVE",
"205 175 QCURVE SMOOTH",
"237 209 OFFCURVE",
"281 219 QCURVE SMOOTH",
"285 220 OFFCURVE",
"291 220 QCURVE SMOOTH",
"300 220 OFFCURVE",
"318 213 OFFCURVE",
"327 208 QCURVE SMOOTH",
"349 196 OFFCURVE",
"364 194 QCURVE",
"318 151 OFFCURVE",
"214 90 OFFCURVE",
"176 83 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
3 1 0 3 74 1 8 9 97 46 2 5 10 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 59 values pushed */
0 0 3 2 3 0 2 128 0 2 9 3 2 9 126 0 9 8 3 9 8 126 0 8 6 3 8 6 126 7 1 6 0 10 5 6 10 105 0 3 3 1 97 0 1 1 30 77 0 5 5 31 77 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 57 values pushed */
0 0 3 2 3 0 2 128 0 2 9 3 2 9 126 0 9 8 3 9 8 126 0 8 6 3 8 6 126 0 1 0 3 0 1 3 105 7 1 6 0 10 5 6 10 105 0 5 5 31 77 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 60 values pushed */
0 0 3 2 3 0 2 128 0 2 9 3 2 9 126 0 9 8 3 9 8 126 0 8 6 3 8 6 126 0 5 10 4 10 5 4 128 0 1 0 3 0 1 3 105 7 1 6 0 10 5 6 10 105 0 4 4 31 4 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
102 101 92 91 43 17 43 44 43 24 40 37 32 11 8 31 
CALL[ ]\011/* CallFunction */";
};
width = 528;
}
);
leftKerningGroup = a;
note = acircumflex;
rightKerningGroup = a;
unicode = 00E2;
},
{
glyphname = atilde;
lastChange = "2019-06-19 00:47:48 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"425 560 LINE",
"419 558 OFFCURVE",
"381 546 OFFCURVE",
"365 546 QCURVE SMOOTH",
"348 546 OFFCURVE",
"330 555 QCURVE",
"311 566 OFFCURVE",
"273 596 QCURVE SMOOTH",
"249 614 OFFCURVE",
"224 614 QCURVE SMOOTH",
"195 614 OFFCURVE",
"166 591 QCURVE SMOOTH",
"143 572 OFFCURVE",
"133 529 QCURVE",
"134 516 OFFCURVE",
"147 516 QCURVE SMOOTH",
"156 516 OFFCURVE",
"188 529 OFFCURVE",
"192 531 QCURVE SMOOTH",
"217 543 OFFCURVE",
"231 546 QCURVE",
"251 545 OFFCURVE",
"285 528 OFFCURVE",
"305 514 QCURVE SMOOTH",
"328 498 OFFCURVE",
"344 493 QCURVE SMOOTH",
"361 488 OFFCURVE",
"384 488 QCURVE SMOOTH",
"425 488 OFFCURVE",
"462 509 QCURVE SMOOTH",
"489 524 OFFCURVE",
"490 553 QCURVE",
"475 573 OFFCURVE",
"459 573 QCURVE SMOOTH",
"451 573 OFFCURVE",
"440 567 QCURVE"
);
},
{
closed = 1;
nodes = (
"455 107 OFFCURVE",
"455 132 QCURVE SMOOTH",
"455 152 OFFCURVE",
"451 200 OFFCURVE",
"450 210 QCURVE SMOOTH",
"444 262 OFFCURVE",
"444 288 QCURVE SMOOTH",
"444 302 OFFCURVE",
"436 330 OFFCURVE",
"427 353 QCURVE SMOOTH",
"412 390 OFFCURVE",
"356 438 OFFCURVE",
"317 446 QCURVE SMOOTH",
"290 451 OFFCURVE",
"270 451 QCURVE SMOOTH",
"212 451 OFFCURVE",
"134 421 QCURVE SMOOTH",
"121 416 OFFCURVE",
"109 392 OFFCURVE",
"111 377 QCURVE SMOOTH",
"114 349 OFFCURVE",
"143 340 QCURVE SMOOTH",
"156 336 OFFCURVE",
"173 336 QCURVE SMOOTH",
"197 336 OFFCURVE",
"224 346 QCURVE",
"229 347 OFFCURVE",
"247 354 QCURVE SMOOTH",
"266 361 OFFCURVE",
"281 365 QCURVE SMOOTH",
"285 366 OFFCURVE",
"293 366 QCURVE SMOOTH",
"316 366 OFFCURVE",
"328 348 QCURVE",
"340 334 OFFCURVE",
"340 321 QCURVE SMOOTH",
"340 309 OFFCURVE",
"331 299 QCURVE",
"304 301 LINE SMOOTH",
"264 305 OFFCURVE",
"245 305 QCURVE SMOOTH",
"141 305 OFFCURVE",
"85 234 QCURVE SMOOTH",
"50 189 OFFCURVE",
"50 151 QCURVE SMOOTH",
"50 117 OFFCURVE",
"78 77 QCURVE SMOOTH",
"103 40 OFFCURVE",
"186 -2 OFFCURVE",
"233 -2 QCURVE SMOOTH",
"252 -2 OFFCURVE",
"277 3 QCURVE SMOOTH",
"294 6 OFFCURVE",
"336 19 QCURVE SMOOTH",
"357 25 LINE",
"382 1 OFFCURVE",
"410 -19 OFFCURVE",
"428 -19 QCURVE SMOOTH",
"445 -19 OFFCURVE",
"463 -8 QCURVE",
"462 8 OFFCURVE",
"458 43 QCURVE",
"458 50 OFFCURVE",
"456 60 OFFCURVE",
"455 64 QCURVE",
"452 90 OFFCURVE",
"453 95 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"283 81 OFFCURVE",
"224 82 QCURVE",
"197 81 OFFCURVE",
"158 96 OFFCURVE",
"148 117 QCURVE SMOOTH",
"143 127 OFFCURVE",
"143 140 QCURVE SMOOTH",
"143 166 OFFCURVE",
"170 199 QCURVE SMOOTH",
"198 233 OFFCURVE",
"243 233 QCURVE SMOOTH",
"290 233 OFFCURVE",
"332 199 QCURVE",
"350 186 OFFCURVE",
"350 163 QCURVE SMOOTH",
"350 145 OFFCURVE",
"337 133 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
3 1 5 0 64 1 12 8 102 1 13 12 47 37 2 7 13 42 1 6 7 5 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 80 values pushed */
0 0 4 5 4 0 5 128 0 3 2 1 2 3 1 128 0 11 1 9 1 11 9 128 0 9 10 1 9 10 126 0 10 8 1 10 8 126 0 5 0 1 11 5 1 105 0 8 0 12 13 8 12 106 0 2 2 4 97 0 4 4 32 77 0 13 13 7 97 0 7 7 40 77 0 6 6 31 6 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 78 values pushed */
0 0 4 5 4 0 5 128 0 3 2 1 2 3 1 128 0 11 1 9 1 11 9 128 0 9 10 1 9 10 126 0 10 8 1 10 8 126 0 4 0 2 3 4 2 105 0 5 0 1 11 5 1 105 0 8 0 12 13 8 12 106 0 13 13 7 97 0 7 7 40 77 0 6 6 31 6 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 76 values pushed */
0 0 4 5 4 0 5 128 0 3 2 1 2 3 1 128 0 11 1 9 1 11 9 128 0 9 10 1 9 10 126 0 10 8 1 10 8 126 0 4 0 2 3 4 2 105 0 5 0 1 11 5 1 105 0 8 0 12 13 8 12 106 0 13 0 7 6 13 7 105 0 6 6 31 6 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 22 values pushed */
118 116 109 107 88 86 79 77 70 69 39 38 43 36 36 36 21 36 32 14 8 31 
CALL[ ]\011/* CallFunction */";
};
width = 540;
}
);
leftKerningGroup = a;
note = atilde;
rightKerningGroup = a;
unicode = 00E3;
},
{
glyphname = adieresis;
lastChange = "2019-06-19 00:47:48 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"386 469 OFFCURVE",
"411 491 OFFCURVE",
"412 509 QCURVE",
"408 541 OFFCURVE",
"366 565 QCURVE",
"355 572 OFFCURVE",
"340 572 QCURVE SMOOTH",
"319 572 OFFCURVE",
"303 558 QCURVE SMOOTH",
"290 546 OFFCURVE",
"290 527 QCURVE SMOOTH",
"290 514 OFFCURVE",
"297 504 QCURVE",
"325 469 OFFCURVE",
"372 469 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"193 475 OFFCURVE",
"206 495 OFFCURVE",
"208 498 QCURVE",
"207 521 OFFCURVE",
"177 557 OFFCURVE",
"156 563 QCURVE SMOOTH",
"148 565 OFFCURVE",
"143 565 QCURVE SMOOTH",
"130 565 OFFCURVE",
"105 552 OFFCURVE",
"98 540 QCURVE",
"93 534 OFFCURVE",
"93 519 QCURVE SMOOTH",
"93 510 OFFCURVE",
"95 506 QCURVE SMOOTH",
"103 489 OFFCURVE",
"143 466 OFFCURVE",
"163 466 QCURVE SMOOTH",
"173 466 OFFCURVE",
"185 471 QCURVE"
);
},
{
closed = 1;
nodes = (
"407 281 LINE",
"401 300 OFFCURVE",
"392 306 QCURVE",
"380 315 OFFCURVE",
"360 341 OFFCURVE",
"342 376 OFFCURVE",
"337 384 QCURVE SMOOTH",
"324 406 OFFCURVE",
"281 430 OFFCURVE",
"255 430 QCURVE SMOOTH",
"237 430 OFFCURVE",
"219 424 QCURVE SMOOTH",
"130 392 OFFCURVE",
"94 323 QCURVE SMOOTH",
"50 240 OFFCURVE",
"50 159 QCURVE SMOOTH",
"50 144 OFFCURVE",
"51 136 QCURVE",
"54 96 OFFCURVE",
"77 44 QCURVE SMOOTH",
"91 12 OFFCURVE",
"151 -19 OFFCURVE",
"191 -19 QCURVE SMOOTH",
"255 -19 OFFCURVE",
"304 39 QCURVE",
"334 78 LINE",
"349 100 OFFCURVE",
"355 107 QCURVE",
"381 85 LINE",
"414 58 LINE",
"428 49 OFFCURVE",
"440 49 QCURVE SMOOTH",
"453 49 OFFCURVE",
"463 57 QCURVE SMOOTH",
"475 66 OFFCURVE",
"475 81 QCURVE SMOOTH",
"475 89 OFFCURVE",
"472 98 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"285 295 OFFCURVE",
"285 288 QCURVE SMOOTH",
"285 251 OFFCURVE",
"266 182 OFFCURVE",
"248 141 QCURVE SMOOTH",
"236 114 OFFCURVE",
"213 94 QCURVE SMOOTH",
"206 88 OFFCURVE",
"181 82 OFFCURVE",
"171 84 QCURVE SMOOTH",
"151 88 OFFCURVE",
"151 121 QCURVE SMOOTH",
"153 183 OFFCURVE",
"190 284 OFFCURVE",
"232 322 QCURVE SMOOTH",
"247 335 OFFCURVE",
"261 335 QCURVE SMOOTH",
"274 335 OFFCURVE",
"287 314 OFFCURVE",
"286 300 QCURVE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 13 values pushed */
31 21 11 3 1 0 90 44 2 4 7 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 13 values pushed */
31 21 11 3 1 3 90 44 2 4 7 2 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 33 values pushed */
0 4 7 5 7 4 5 128 3 1 0 2 8 2 1 6 0 1 105 0 6 0 7 4 6 7 105 0 5 5 31 5 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 40 values pushed */
0 3 0 1 0 3 1 128 0 4 7 5 7 4 5 128 0 0 2 8 2 1 6 0 1 105 0 6 0 7 4 6 7 105 0 5 5 31 5 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 22 values pushed */
0 0 76 74 63 61 50 48 41 39 26 25 17 15 0 14 0 13 38 9 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 525;
}
);
leftKerningGroup = a;
note = adieresis;
rightKerningGroup = a;
unicode = 00E4;
},
{
glyphname = aring;
lastChange = "2019-11-20 00:14:11 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"266 474 OFFCURVE",
"290 474 QCURVE SMOOTH",
"317 474 OFFCURVE",
"362 505 OFFCURVE",
"375 534 QCURVE",
"382 547 OFFCURVE",
"389 580 OFFCURVE",
"390 585 QCURVE",
"390 633 OFFCURVE",
"357 684 OFFCURVE",
"318 699 QCURVE SMOOTH",
"288 710 OFFCURVE",
"272 710 QCURVE SMOOTH",
"255 710 OFFCURVE",
"228 692 OFFCURVE",
"208 671 QCURVE SMOOTH",
"185 646 OFFCURVE",
"179 636 QCURVE SMOOTH",
"167 616 OFFCURVE",
"168 602 QCURVE SMOOTH",
"173 521 OFFCURVE",
"238 488 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"279 636 OFFCURVE",
"296 625 OFFCURVE",
"311 607 OFFCURVE",
"311 593 QCURVE",
"309 581 LINE",
"294 557 OFFCURVE",
"278 557 QCURVE SMOOTH",
"274 557 OFFCURVE",
"266 560 OFFCURVE",
"265 560 QCURVE",
"245 563 OFFCURVE",
"238 583 OFFCURVE",
"238 605 QCURVE SMOOTH",
"238 613 OFFCURVE",
"237 617 QCURVE",
"236 620 OFFCURVE",
"272 641 OFFCURVE",
"276 638 QCURVE"
);
},
{
closed = 1;
nodes = (
"398 320 OFFCURVE",
"361 393 OFFCURVE",
"326 417 QCURVE SMOOTH",
"252 470 OFFCURVE",
"159 470 QCURVE SMOOTH",
"149 470 OFFCURVE",
"127 468 QCURVE",
"112 466 OFFCURVE",
"85 442 OFFCURVE",
"86 430 QCURVE SMOOTH",
"87 416 OFFCURVE",
"107 399 OFFCURVE",
"122 397 QCURVE SMOOTH",
"155 393 OFFCURVE",
"175 392 QCURVE",
"210 389 LINE SMOOTH",
"258 384 OFFCURVE",
"299 339 OFFCURVE",
"296 282 QCURVE",
"262 297 OFFCURVE",
"229 295 OFFCURVE",
"216 295 QCURVE SMOOTH",
"179 295 OFFCURVE",
"101 241 OFFCURVE",
"50 160 OFFCURVE",
"50 123 QCURVE SMOOTH",
"50 93 OFFCURVE",
"81 42 OFFCURVE",
"132 11 OFFCURVE",
"160 11 QCURVE SMOOTH",
"184 11 OFFCURVE",
"239 19 OFFCURVE",
"245 20 QCURVE SMOOTH",
"293 28 LINE",
"295 25 OFFCURVE",
"301 15 OFFCURVE",
"305 9 QCURVE",
"308 5 OFFCURVE",
"321 -8 OFFCURVE",
"326 -12 QCURVE",
"337 -19 OFFCURVE",
"350 -19 QCURVE SMOOTH",
"363 -19 OFFCURVE",
"383 -4 OFFCURVE",
"387 9 QCURVE SMOOTH",
"397 41 OFFCURVE",
"398 60 QCURVE SMOOTH",
"399 111 LINE SMOOTH",
"401 179 OFFCURVE",
"401 213 QCURVE SMOOTH",
"401 255 OFFCURVE",
"400 276 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"225 91 OFFCURVE",
"182 91 QCURVE",
"167 88 OFFCURVE",
"145 107 OFFCURVE",
"145 122 QCURVE SMOOTH",
"145 130 OFFCURVE",
"147 134 QCURVE",
"172 200 OFFCURVE",
"230 213 QCURVE SMOOTH",
"273 222 LINE",
"290 224 OFFCURVE",
"308 228 QCURVE",
"313 193 OFFCURVE",
"313 179 QCURVE SMOOTH",
"304 151 OFFCURVE",
"259 117 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
35 13 1 3 2 0 103 96 72 3 4 5 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 2 0 1 7 2 1 106 0 7 0 6 5 7 6 105 0 0 0 36 77 0 5 5 4 97 0 4 4 40 77 0 3 3 31 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 0 2 0 133 0 2 0 1 7 2 1 106 0 7 0 6 5 7 6 105 0 5 5 4 97 0 4 4 40 77 0 3 3 31 3 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
40 22 38 42 47 43 41 39 8 8 30 
CALL[ ]\011/* CallFunction */";
};
width = 450;
}
);
leftKerningGroup = a;
note = aring;
rightKerningGroup = a;
unicode = 00E5;
},
{
glyphname = ae;
lastChange = "2019-11-20 00:13:48 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"609 183 OFFCURVE",
"598 183 QCURVE SMOOTH",
"589 183 OFFCURVE",
"572 174 QCURVE SMOOTH",
"570 173 LINE",
"561 169 OFFCURVE",
"543 159 QCURVE",
"532 154 OFFCURVE",
"485 137 OFFCURVE",
"460 128 QCURVE SMOOTH",
"457 134 OFFCURVE",
"423 121 QCURVE SMOOTH",
"417 134 OFFCURVE",
"386 131 QCURVE SMOOTH",
"358 148 OFFCURVE",
"337 177 QCURVE",
"409 192 OFFCURVE",
"428 197 QCURVE",
"460 208 OFFCURVE",
"510 251 OFFCURVE",
"542 287 QCURVE SMOOTH",
"562 310 LINE",
"570 318 OFFCURVE",
"570 338 QCURVE SMOOTH",
"570 347 OFFCURVE",
"566 361 QCURVE",
"559 382 OFFCURVE",
"509 424 OFFCURVE",
"476 435 QCURVE SMOOTH",
"449 444 OFFCURVE",
"426 444 QCURVE SMOOTH",
"395 442 OFFCURVE",
"372 429 QCURVE SMOOTH",
"352 418 OFFCURVE",
"326 369 QCURVE",
"323 399 LINE SMOOTH",
"321 419 OFFCURVE",
"309 428 QCURVE",
"255 476 OFFCURVE",
"180 476 QCURVE SMOOTH",
"145 476 OFFCURVE",
"99 465 QCURVE",
"84 462 OFFCURVE",
"54 438 OFFCURVE",
"55 427 QCURVE",
"59 409 OFFCURVE",
"100 387 OFFCURVE",
"116 387 QCURVE SMOOTH",
"132 387 OFFCURVE",
"171 397 OFFCURVE",
"175 398 QCURVE",
"183 401 LINE",
"198 405 OFFCURVE",
"210 405 QCURVE SMOOTH",
"223 405 OFFCURVE",
"232 399 QCURVE SMOOTH",
"248 388 OFFCURVE",
"249 365 QCURVE",
"251 350 OFFCURVE",
"251 301 QCURVE SMOOTH",
"251 291 OFFCURVE",
"246 287 QCURVE",
"239 284 OFFCURVE",
"220 293 OFFCURVE",
"214 294 QCURVE",
"200 297 OFFCURVE",
"190 297 QCURVE SMOOTH",
"165 297 OFFCURVE",
"122 271 OFFCURVE",
"96 246 QCURVE SMOOTH",
"76 228 OFFCURVE",
"50 151 OFFCURVE",
"50 116 QCURVE SMOOTH",
"50 90 OFFCURVE",
"57 75 QCURVE",
"69 43 OFFCURVE",
"122 6 OFFCURVE",
"156 6 QCURVE SMOOTH",
"201 6 OFFCURVE",
"235 42 QCURVE",
"239 47 LINE",
"258 69 OFFCURVE",
"263 77 QCURVE SMOOTH",
"269 87 OFFCURVE",
"283 128 QCURVE SMOOTH",
"287 139 LINE",
"294 130 LINE SMOOTH",
"329 82 OFFCURVE",
"379 69 QCURVE SMOOTH",
"414 61 OFFCURVE",
"443 61 QCURVE SMOOTH",
"535 61 OFFCURVE",
"610 131 QCURVE",
"624 143 OFFCURVE",
"624 155 QCURVE SMOOTH",
"624 164 OFFCURVE",
"617 172 QCURVE"
);
},
{
closed = 1;
nodes = (
"435 375 OFFCURVE",
"438 374 QCURVE SMOOTH",
"471 365 OFFCURVE",
"479 342 OFFCURVE",
"476 336 QCURVE",
"464 306 OFFCURVE",
"367 250 QCURVE",
"349 236 LINE",
"340 230 LINE",
"339 240 LINE",
"338 244 OFFCURVE",
"338 252 QCURVE SMOOTH",
"338 283 OFFCURVE",
"374 345 OFFCURVE",
"406 367 OFFCURVE",
"427 372 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"240 151 OFFCURVE",
"215 119 OFFCURVE",
"191 101 QCURVE",
"190 101 LINE",
"188 100 LINE",
"181 100 LINE SMOOTH",
"167 100 OFFCURVE",
"129 112 OFFCURVE",
"119 150 QCURVE SMOOTH",
"117 159 OFFCURVE",
"129 179 QCURVE SMOOTH",
"131 183 LINE SMOOTH",
"139 200 OFFCURVE",
"171 225 OFFCURVE",
"190 229 QCURVE",
"193 229 OFFCURVE",
"201 231 QCURVE SMOOTH",
"215 235 OFFCURVE",
"222 235 QCURVE SMOOTH",
"226 235 LINE",
"229 235 LINE",
"231 232 LINE SMOOTH",
"246 210 OFFCURVE",
"245 195 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 95 values pushed */
63 40 2 2 4 151 129 110 107 4 8 2 87 10 2 7 8 3 76 0 6 5 3 5 6 3 128 9 1 4 3 2 3 4 2 128 0 2 8 3 2 8 126 0 8 7 3 8 7 126 0 5 0 3 4 5 3 105 0 7 0 0 1 7 0 106 0 10 10 1 98 0 1 1 40 1 78 145 144 122 121 102 100 92 90 40 38 36 45 41 43 36 11 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 675;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = ccedilla;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"427 97 OFFCURVE",
"432 98 QCURVE",
"367 82 LINE",
"346 76 OFFCURVE",
"324 76 QCURVE SMOOTH",
"306 76 OFFCURVE",
"290 80 QCURVE SMOOTH",
"273 84 OFFCURVE",
"253 86 QCURVE",
"226 90 OFFCURVE",
"202 113 OFFCURVE",
"198 138 QCURVE SMOOTH",
"196 154 OFFCURVE",
"196 163 QCURVE SMOOTH",
"196 171 OFFCURVE",
"198 187 QCURVE",
"212 254 OFFCURVE",
"275 306 QCURVE SMOOTH",
"283 313 OFFCURVE",
"300 315 QCURVE",
"304 316 OFFCURVE",
"311 316 QCURVE SMOOTH",
"322 316 LINE",
"328 316 LINE",
"338 317 OFFCURVE",
"350 330 OFFCURVE",
"350 339 QCURVE SMOOTH",
"350 345 OFFCURVE",
"349 348 QCURVE",
"342 374 OFFCURVE",
"302 402 OFFCURVE",
"275 400 QCURVE",
"253 400 OFFCURVE",
"235 384 QCURVE",
"228 377 OFFCURVE",
"202 355 OFFCURVE",
"194 346 QCURVE SMOOTH",
"123 264 OFFCURVE",
"123 191 QCURVE SMOOTH",
"123 140 OFFCURVE",
"157 83 QCURVE SMOOTH",
"169 63 OFFCURVE",
"193 35 OFFCURVE",
"210 27 QCURVE SMOOTH",
"233 16 OFFCURVE",
"233 -13 QCURVE",
"231 -46 OFFCURVE",
"236 -68 QCURVE",
"243 -108 OFFCURVE",
"279 -112 QCURVE",
"311 -117 LINE",
"303 -137 OFFCURVE",
"296 -147 OFFCURVE",
"286 -155 QCURVE SMOOTH",
"197 -222 OFFCURVE",
"77 -254 QCURVE",
"72 -256 OFFCURVE",
"55 -264 OFFCURVE",
"50 -267 QCURVE",
"54 -303 OFFCURVE",
"87 -305 QCURVE SMOOTH",
"109 -307 OFFCURVE",
"121 -307 QCURVE SMOOTH",
"143 -307 OFFCURVE",
"158 -302 QCURVE SMOOTH",
"215 -285 OFFCURVE",
"293 -251 QCURVE SMOOTH",
"348 -226 OFFCURVE",
"389 -169 QCURVE SMOOTH",
"404 -148 OFFCURVE",
"404 -130 QCURVE SMOOTH",
"404 -109 OFFCURVE",
"385 -89 QCURVE",
"376 -78 OFFCURVE",
"348 -53 OFFCURVE",
"341 -47 QCURVE SMOOTH",
"325 -33 OFFCURVE",
"319 -26 QCURVE",
"323 -12 OFFCURVE",
"337 3 OFFCURVE",
"350 4 QCURVE",
"372 7 OFFCURVE",
"416 17 QCURVE SMOOTH",
"459 27 OFFCURVE",
"483 58 QCURVE",
"473 84 LINE",
"472 87 OFFCURVE",
"465 106 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
60 1 3 2 87 1 4 3 36 9 2 3 0 4 3 76 0 3 2 4 2 3 4 128 0 4 0 2 4 0 126 1 1 0 0 132 0 2 2 33 2 78 83 81 65 63 55 54 27 26 25 23 5 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 533;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = egrave;
lastChange = "2019-11-20 00:11:49 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"277 462 OFFCURVE",
"279 463 QCURVE",
"284 466 OFFCURVE",
"303 478 OFFCURVE",
"306 484 QCURVE",
"308 489 OFFCURVE",
"302 506 OFFCURVE",
"297 510 QCURVE SMOOTH",
"248 547 OFFCURVE",
"216 596 QCURVE SMOOTH",
"208 608 OFFCURVE",
"180 621 QCURVE SMOOTH",
"166 627 OFFCURVE",
"158 627 QCURVE SMOOTH",
"146 627 OFFCURVE",
"139 617 QCURVE SMOOTH",
"126 598 OFFCURVE",
"129 584 QCURVE",
"132 555 OFFCURVE",
"177 498 OFFCURVE",
"241 462 OFFCURVE",
"271 462 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"443 137 OFFCURVE",
"427 137 QCURVE SMOOTH",
"414 137 OFFCURVE",
"397 125 QCURVE",
"336 78 OFFCURVE",
"274 51 QCURVE",
"260 44 OFFCURVE",
"235 44 QCURVE SMOOTH",
"211 44 OFFCURVE",
"203 52 QCURVE",
"193 61 OFFCURVE",
"179 89 OFFCURVE",
"168 127 OFFCURVE",
"166 134 QCURVE",
"165 139 OFFCURVE",
"180 157 OFFCURVE",
"186 158 QCURVE SMOOTH",
"228 165 OFFCURVE",
"299 203 OFFCURVE",
"350 238 QCURVE SMOOTH",
"388 264 OFFCURVE",
"408 276 QCURVE SMOOTH",
"440 296 OFFCURVE",
"440 318 QCURVE SMOOTH",
"440 340 OFFCURVE",
"409 359 QCURVE SMOOTH",
"338 400 OFFCURVE",
"265 400 QCURVE SMOOTH",
"250 400 OFFCURVE",
"243 399 QCURVE",
"238 399 OFFCURVE",
"224 400 OFFCURVE",
"215 399 QCURVE SMOOTH",
"111 391 OFFCURVE",
"70 311 QCURVE SMOOTH",
"61 294 OFFCURVE",
"54 247 OFFCURVE",
"53 240 QCURVE SMOOTH",
"50 218 OFFCURVE",
"50 195 QCURVE SMOOTH",
"50 119 OFFCURVE",
"122 0 OFFCURVE",
"190 -18 QCURVE SMOOTH",
"226 -27 OFFCURVE",
"260 -27 QCURVE SMOOTH",
"366 -27 OFFCURVE",
"454 61 QCURVE SMOOTH",
"474 81 OFFCURVE",
"474 95 QCURVE SMOOTH",
"474 107 OFFCURVE",
"461 119 QCURVE"
);
},
{
closed = 1;
nodes = (
"291 299 OFFCURVE",
"194 247 OFFCURVE",
"168 250 QCURVE",
"175 282 OFFCURVE",
"218 328 OFFCURVE",
"242 328 QCURVE SMOOTH",
"286 328 OFFCURVE",
"302 323 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 70 values pushed */
80 77 2 5 6 1 76 7 1 1 0 3 0 1 3 128 0 5 6 4 6 5 4 128 0 0 0 32 77 0 6 6 3 97 0 3 3 33 77 0 4 4 2 97 0 2 2 31 2 78 0 0 75 73 71 69 65 63 45 43 28 26 0 21 0 20 22 8 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 524;
}
);
leftKerningGroup = e;
note = egrave;
rightKerningGroup = e;
unicode = 00E8;
},
{
glyphname = eacute;
lastChange = "2019-11-20 00:10:17 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"214 483 OFFCURVE",
"292 536 QCURVE",
"316 554 OFFCURVE",
"329 562 QCURVE SMOOTH",
"343 571 OFFCURVE",
"343 587 QCURVE SMOOTH",
"343 599 OFFCURVE",
"336 607 QCURVE",
"317 632 OFFCURVE",
"295 632 QCURVE SMOOTH",
"282 632 OFFCURVE",
"264 623 QCURVE SMOOTH",
"202 591 OFFCURVE",
"105 514 OFFCURVE",
"71 464 QCURVE",
"70 463 OFFCURVE",
"64 442 QCURVE",
"78 437 OFFCURVE",
"96 437 QCURVE SMOOTH",
"117 437 OFFCURVE",
"154 451 OFFCURVE",
"180 465 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"477 153 OFFCURVE",
"463 153 QCURVE SMOOTH",
"448 153 OFFCURVE",
"427 137 QCURVE SMOOTH",
"348 81 OFFCURVE",
"291 51 QCURVE SMOOTH",
"263 37 OFFCURVE",
"241 37 QCURVE SMOOTH",
"214 37 OFFCURVE",
"175 71 OFFCURVE",
"168 102 QCURVE",
"180 106 OFFCURVE",
"197 109 QCURVE",
"201 110 OFFCURVE",
"247 121 OFFCURVE",
"265 130 QCURVE SMOOTH",
"302 147 OFFCURVE",
"354 205 OFFCURVE",
"387 254 QCURVE SMOOTH",
"406 282 LINE",
"413 290 OFFCURVE",
"413 308 QCURVE SMOOTH",
"413 328 OFFCURVE",
"404 348 QCURVE SMOOTH",
"388 381 OFFCURVE",
"292 428 OFFCURVE",
"242 428 QCURVE SMOOTH",
"189 428 OFFCURVE",
"158 400 QCURVE SMOOTH",
"126 371 OFFCURVE",
"84 299 OFFCURVE",
"63 249 QCURVE SMOOTH",
"50 219 OFFCURVE",
"50 183 QCURVE SMOOTH",
"50 134 OFFCURVE",
"99 41 OFFCURVE",
"179 -20 OFFCURVE",
"224 -25 QCURVE",
"237 -27 OFFCURVE",
"263 -27 QCURVE SMOOTH",
"401 -27 OFFCURVE",
"487 83 QCURVE SMOOTH",
"502 102 OFFCURVE",
"502 115 QCURVE SMOOTH",
"502 129 OFFCURVE",
"489 141 QCURVE"
);
},
{
closed = 1;
nodes = (
"262 364 OFFCURVE",
"268 364 QCURVE SMOOTH",
"277 364 OFFCURVE",
"289 350 OFFCURVE",
"289 340 QCURVE SMOOTH",
"289 335 OFFCURVE",
"288 332 QCURVE",
"279 297 OFFCURVE",
"254 269 QCURVE SMOOTH",
"233 246 OFFCURVE",
"201 215 QCURVE SMOOTH",
"169 184 LINE",
"165 197 OFFCURVE",
"165 214 QCURVE SMOOTH",
"165 245 OFFCURVE",
"194 306 OFFCURVE",
"236 351 OFFCURVE",
"256 361 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 68 values pushed */
4 1 0 1 80 73 2 5 6 56 1 4 5 3 76 0 0 1 3 1 0 3 128 0 5 6 4 6 5 4 128 0 3 0 6 5 3 6 105 0 1 1 32 77 0 4 4 2 97 0 2 2 31 2 78 83 82 66 64 60 58 43 46 39 33 7 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 552;
}
);
leftKerningGroup = e;
note = eacute;
rightKerningGroup = e;
unicode = 00E9;
},
{
glyphname = ecircumflex;
lastChange = "2019-11-20 00:11:22 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"256 510 LINE",
"272 496 OFFCURVE",
"280 490 QCURVE",
"300 472 OFFCURVE",
"310 465 QCURVE SMOOTH",
"335 448 OFFCURVE",
"363 437 QCURVE",
"372 434 OFFCURVE",
"391 442 OFFCURVE",
"394 452 QCURVE SMOOTH",
"396 458 OFFCURVE",
"393 475 OFFCURVE",
"389 480 QCURVE SMOOTH",
"358 517 OFFCURVE",
"312 568 QCURVE SMOOTH",
"302 579 OFFCURVE",
"278 593 QCURVE",
"258 603 OFFCURVE",
"243 603 QCURVE SMOOTH",
"224 603 OFFCURVE",
"208 591 QCURVE SMOOTH",
"140 540 OFFCURVE",
"120 472 QCURVE",
"153 445 OFFCURVE",
"175 445 QCURVE SMOOTH",
"197 445 OFFCURVE",
"221 472 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"463 136 OFFCURVE",
"454 136 QCURVE SMOOTH",
"440 136 OFFCURVE",
"421 119 QCURVE",
"385 89 OFFCURVE",
"315 47 QCURVE",
"309 42 OFFCURVE",
"297 42 QCURVE SMOOTH",
"283 42 OFFCURVE",
"254 60 OFFCURVE",
"243 75 QCURVE",
"238 83 OFFCURVE",
"238 90 QCURVE SMOOTH",
"238 98 OFFCURVE",
"258 116 OFFCURVE",
"261 120 QCURVE SMOOTH",
"331 216 OFFCURVE",
"372 279 QCURVE SMOOTH",
"381 293 OFFCURVE",
"381 313 QCURVE SMOOTH",
"381 338 OFFCURVE",
"344 386 OFFCURVE",
"288 418 OFFCURVE",
"261 420 QCURVE",
"254 418 OFFCURVE",
"241 414 OFFCURVE",
"235 412 QCURVE",
"215 407 OFFCURVE",
"189 396 OFFCURVE",
"182 387 QCURVE SMOOTH",
"147 341 OFFCURVE",
"108 261 OFFCURVE",
"108 217 QCURVE SMOOTH",
"108 193 OFFCURVE",
"116 163 QCURVE",
"119 156 OFFCURVE",
"119 149 QCURVE SMOOTH",
"119 132 OFFCURVE",
"99 132 QCURVE SMOOTH",
"91 132 OFFCURVE",
"87 133 QCURVE",
"69 136 OFFCURVE",
"51 136 QCURVE SMOOTH",
"41 136 OFFCURVE",
"25 134 QCURVE SMOOTH",
"16 133 OFFCURVE",
"6 123 OFFCURVE",
"6 117 QCURVE SMOOTH",
"6 108 OFFCURVE",
"16 101 QCURVE SMOOTH",
"44 79 OFFCURVE",
"95 61 QCURVE SMOOTH",
"106 57 OFFCURVE",
"128 53 QCURVE SMOOTH",
"150 49 OFFCURVE",
"175 40 OFFCURVE",
"188 29 QCURVE SMOOTH",
"256 -28 OFFCURVE",
"317 -28 QCURVE SMOOTH",
"353 -28 OFFCURVE",
"391 -6 QCURVE SMOOTH",
"434 19 OFFCURVE",
"478 67 QCURVE",
"489 80 OFFCURVE",
"489 92 QCURVE SMOOTH",
"489 112 OFFCURVE",
"470 129 QCURVE"
);
},
{
closed = 1;
nodes = (
"212 272 OFFCURVE",
"240 323 OFFCURVE",
"267 347 QCURVE",
"271 339 OFFCURVE",
"271 327 QCURVE SMOOTH",
"271 305 OFFCURVE",
"240 257 OFFCURVE",
"213 239 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
25 3 2 0 1 101 98 69 56 4 3 0 45 1 5 3 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 28 values pushed */
0 1 0 1 133 0 0 3 0 133 6 4 2 3 5 3 133 0 5 5 2 97 0 2 2 31 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 33 values pushed */
0 1 0 1 133 0 0 3 0 133 6 4 2 3 5 3 133 0 5 2 2 5 89 0 5 5 2 97 0 2 5 2 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
92 90 86 84 55 54 51 49 35 33 36 32 7 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 530;
}
);
leftKerningGroup = e;
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = edieresis;
lastChange = "2019-11-20 00:10:42 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"171 506 OFFCURVE",
"183 522 OFFCURVE",
"183 532 QCURVE SMOOTH",
"183 542 OFFCURVE",
"177 551 QCURVE SMOOTH",
"151 589 OFFCURVE",
"96 593 QCURVE",
"93 592 OFFCURVE",
"69 582 OFFCURVE",
"61 576 QCURVE SMOOTH",
"51 569 OFFCURVE",
"51 556 QCURVE SMOOTH",
"51 549 OFFCURVE",
"55 542 QCURVE SMOOTH",
"65 524 OFFCURVE",
"115 500 OFFCURVE",
"140 500 QCURVE SMOOTH",
"150 500 OFFCURVE",
"161 503 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"376 470 OFFCURVE",
"396 477 OFFCURVE",
"401 490 QCURVE",
"405 498 OFFCURVE",
"405 507 QCURVE SMOOTH",
"405 523 OFFCURVE",
"393 538 QCURVE SMOOTH",
"380 554 OFFCURVE",
"344 572 OFFCURVE",
"324 572 QCURVE SMOOTH",
"311 572 OFFCURVE",
"299 569 QCURVE",
"287 565 OFFCURVE",
"272 543 OFFCURVE",
"272 530 QCURVE SMOOTH",
"272 516 OFFCURVE",
"280 508 QCURVE",
"311 469 OFFCURVE",
"359 469 QCURVE"
);
},
{
closed = 1;
nodes = (
"279 70 OFFCURVE",
"235 63 QCURVE",
"231 62 OFFCURVE",
"224 62 QCURVE SMOOTH",
"193 62 OFFCURVE",
"172 95 QCURVE SMOOTH",
"167 103 OFFCURVE",
"167 112 QCURVE SMOOTH",
"167 120 OFFCURVE",
"177 134 OFFCURVE",
"187 137 QCURVE",
"198 141 OFFCURVE",
"207 142 QCURVE",
"223 146 OFFCURVE",
"231 149 QCURVE SMOOTH",
"281 168 OFFCURVE",
"352 222 OFFCURVE",
"375 262 QCURVE SMOOTH",
"388 285 OFFCURVE",
"388 307 QCURVE SMOOTH",
"388 339 OFFCURVE",
"363 364 QCURVE SMOOTH",
"321 405 OFFCURVE",
"259 420 QCURVE SMOOTH",
"247 423 OFFCURVE",
"235 423 QCURVE SMOOTH",
"206 424 OFFCURVE",
"172 405 QCURVE SMOOTH",
"154 395 OFFCURVE",
"127 368 OFFCURVE",
"107 343 QCURVE SMOOTH",
"89 321 LINE SMOOTH",
"48 271 OFFCURVE",
"47 195 QCURVE SMOOTH",
"47 120 OFFCURVE",
"91 49 QCURVE SMOOTH",
"114 12 OFFCURVE",
"190 -27 OFFCURVE",
"232 -27 QCURVE SMOOTH",
"269 -27 OFFCURVE",
"336 3 OFFCURVE",
"359 33 QCURVE SMOOTH",
"392 76 OFFCURVE",
"409 139 QCURVE",
"375 119 LINE SMOOTH",
"337 96 OFFCURVE",
"313 85 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249 334 OFFCURVE",
"257 330 OFFCURVE",
"260 328 QCURVE",
"264 324 OFFCURVE",
"264 319 QCURVE SMOOTH",
"264 316 OFFCURVE",
"263 315 QCURVE",
"254 294 OFFCURVE",
"218 272 OFFCURVE",
"188 260 QCURVE",
"195 313 OFFCURVE",
"247 333 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
86 40 2 6 5 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 33 values pushed */
0 1 0 0 3 1 0 105 0 2 7 1 3 5 2 3 105 0 5 5 33 77 0 6 6 4 98 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 36 values pushed */
0 5 3 6 3 5 6 128 0 1 0 0 3 1 0 105 0 2 7 1 3 5 2 3 105 0 6 6 4 98 0 4 4 31 4 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
19 19 80 79 59 57 46 44 19 37 19 36 46 40 32 8 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 462;
}
);
leftKerningGroup = e;
note = edieresis;
rightKerningGroup = e;
unicode = 00EB;
},
{
glyphname = igrave;
lastChange = "2019-10-02 11:01:36 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"96 541 LINE",
"42 582 LINE SMOOTH",
"38 585 OFFCURVE",
"24 590 QCURVE",
"8 594 OFFCURVE",
"2 594 QCURVE SMOOTH",
"-19 594 OFFCURVE",
"-30 576 QCURVE",
"-34 571 OFFCURVE",
"-34 562 QCURVE SMOOTH",
"-34 546 OFFCURVE",
"-16 529 QCURVE SMOOTH",
"46 466 OFFCURVE",
"148 428 QCURVE SMOOTH",
"156 425 OFFCURVE",
"165 425 QCURVE SMOOTH",
"171 425 OFFCURVE",
"181 427 QCURVE SMOOTH",
"187 428 OFFCURVE",
"198 441 OFFCURVE",
"202 444 QCURVE",
"200 449 OFFCURVE",
"195 466 OFFCURVE",
"191 469 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 396 OFFCURVE",
"113 396 QCURVE SMOOTH",
"94 396 OFFCURVE",
"68 369 OFFCURVE",
"68 348 QCURVE SMOOTH",
"68 326 OFFCURVE",
"70 293 OFFCURVE",
"71 282 QCURVE SMOOTH",
"73 259 LINE SMOOTH",
"85 121 OFFCURVE",
"87 52 QCURVE",
"88 31 OFFCURVE",
"101 8 QCURVE SMOOTH",
"112 -12 OFFCURVE",
"132 -12 QCURVE SMOOTH",
"153 -12 OFFCURVE",
"165 11 QCURVE SMOOTH",
"175 30 OFFCURVE",
"175 55 QCURVE",
"176 78 OFFCURVE",
"176 122 QCURVE SMOOTH",
"176 189 LINE",
"178 189 LINE",
"178 330 LINE SMOOTH",
"178 374 OFFCURVE",
"136 391 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
40 38 2 2 3 1 76 0 1 0 1 133 0 0 3 0 133 0 3 2 2 3 89 0 3 3 2 97 0 2 3 2 81 48 46 35 33 24 38 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 230;
}
);
leftKerningGroup = i;
note = igrave;
rightKerningGroup = i;
unicode = 00EC;
},
{
glyphname = iacute;
lastChange = "2019-10-02 11:01:24 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"213 615 OFFCURVE",
"194 602 QCURVE",
"157 579 OFFCURVE",
"105 517 OFFCURVE",
"63 459 QCURVE",
"58 453 OFFCURVE",
"58 441 QCURVE SMOOTH",
"58 428 OFFCURVE",
"75 402 OFFCURVE",
"87 398 QCURVE",
"95 395 OFFCURVE",
"112 392 OFFCURVE",
"114 392 QCURVE SMOOTH",
"141 392 OFFCURVE",
"168 406 OFFCURVE",
"181 426 QCURVE SMOOTH",
"266 555 LINE SMOOTH",
"270 561 OFFCURVE",
"276 573 QCURVE SMOOTH",
"278 577 OFFCURVE",
"278 585 QCURVE SMOOTH",
"278 600 OFFCURVE",
"253 623 OFFCURVE",
"237 620 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 361 OFFCURVE",
"36 339 OFFCURVE",
"37 321 QCURVE SMOOTH",
"47 151 OFFCURVE",
"47 66 QCURVE SMOOTH",
"47 39 OFFCURVE",
"60 7 QCURVE SMOOTH",
"66 -8 OFFCURVE",
"92 -26 OFFCURVE",
"106 -26 QCURVE SMOOTH",
"140 -26 OFFCURVE",
"143 23 QCURVE SMOOTH",
"145 61 OFFCURVE",
"145 78 QCURVE",
"148 145 LINE",
"149 237 LINE SMOOTH",
"148 258 OFFCURVE",
"147 298 QCURVE SMOOTH",
"146 327 OFFCURVE",
"107 361 OFFCURVE",
"79 361 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
2 1 0 74 0 0 2 0 133 3 1 2 1 1 2 89 3 1 2 2 1 97 0 1 2 1 81 24 24 24 44 24 43 35 33 25 4 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 230;
}
);
leftKerningGroup = i;
note = iacute;
rightKerningGroup = i;
unicode = 00ED;
},
{
glyphname = icircumflex;
lastChange = "2019-10-02 11:00:43 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"318 444 OFFCURVE",
"291 502 QCURVE SMOOTH",
"279 528 OFFCURVE",
"240 555 OFFCURVE",
"217 555 QCURVE SMOOTH",
"188 555 OFFCURVE",
"160 532 QCURVE SMOOTH",
"109 496 OFFCURVE",
"14 408 QCURVE SMOOTH",
"1 396 OFFCURVE",
"1 381 QCURVE SMOOTH",
"1 363 OFFCURVE",
"18 354 QCURVE",
"38 343 OFFCURVE",
"57 343 QCURVE SMOOTH",
"98 343 OFFCURVE",
"128 374 QCURVE",
"174 418 OFFCURVE",
"201 445 QCURVE",
"224 419 LINE SMOOTH",
"244 396 OFFCURVE",
"245 395 QCURVE",
"264 378 OFFCURVE",
"289 378 QCURVE SMOOTH",
"306 378 OFFCURVE",
"328 395 OFFCURVE",
"328 408 QCURVE SMOOTH",
"328 415 OFFCURVE",
"326 420 QCURVE"
);
},
{
closed = 1;
nodes = (
"258 245 OFFCURVE",
"249 272 QCURVE",
"244 292 OFFCURVE",
"212 314 OFFCURVE",
"190 314 QCURVE SMOOTH",
"126 314 OFFCURVE",
"126 248 QCURVE SMOOTH",
"126 237 OFFCURVE",
"128 213 QCURVE SMOOTH",
"143 60 LINE",
"148 30 OFFCURVE",
"152 18 QCURVE SMOOTH",
"158 0 OFFCURVE",
"187 -17 OFFCURVE",
"206 -17 QCURVE SMOOTH",
"213 -17 OFFCURVE",
"218 -16 QCURVE",
"253 -9 OFFCURVE",
"254 32 QCURVE",
"255 50 OFFCURVE",
"255 83 QCURVE SMOOTH",
"255 136 LINE",
"256 146 OFFCURVE",
"258 183 OFFCURVE",
"258 197 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
9 1 2 0 2 31 1 3 4 2 76 0 2 0 2 133 0 0 1 0 133 0 1 4 1 133 0 4 3 3 4 89 0 4 4 3 97 0 3 4 3 81 40 30 40 39 35 5 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 230;
}
);
leftKerningGroup = i;
note = icircumflex;
rightKerningGroup = i;
unicode = 00EE;
},
{
glyphname = idieresis;
lastChange = "2019-10-02 11:02:16 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"264 503 OFFCURVE",
"224 506 QCURVE",
"220 505 OFFCURVE",
"200 498 OFFCURVE",
"193 493 QCURVE SMOOTH",
"172 478 OFFCURVE",
"172 460 QCURVE SMOOTH",
"172 443 OFFCURVE",
"198 431 QCURVE",
"206 428 OFFCURVE",
"227 416 OFFCURVE",
"234 414 QCURVE",
"242 411 OFFCURVE",
"251 411 QCURVE SMOOTH",
"261 411 OFFCURVE",
"279 419 OFFCURVE",
"283 426 QCURVE",
"290 436 OFFCURVE",
"290 449 QCURVE SMOOTH",
"290 465 OFFCURVE",
"281 477 QCURVE"
);
},
{
closed = 1;
nodes = (
"53 478 OFFCURVE",
"29 481 QCURVE SMOOTH",
"10 483 OFFCURVE",
"-14 468 QCURVE SMOOTH",
"-30 458 OFFCURVE",
"-30 440 QCURVE SMOOTH",
"-30 431 OFFCURVE",
"-19 413 OFFCURVE",
"-9 409 QCURVE",
"3 403 OFFCURVE",
"34 395 OFFCURVE",
"41 393 QCURVE",
"49 396 OFFCURVE",
"82 405 OFFCURVE",
"93 410 QCURVE",
"101 413 OFFCURVE",
"110 428 OFFCURVE",
"110 436 QCURVE SMOOTH",
"110 452 OFFCURVE",
"97 458 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"115 350 OFFCURVE",
"115 308 QCURVE SMOOTH",
"115 272 LINE",
"115 201 LINE",
"116 201 LINE",
"115 147 LINE SMOOTH",
"115 133 OFFCURVE",
"117 107 QCURVE SMOOTH",
"120 74 OFFCURVE",
"131 8 QCURVE",
"135 -20 OFFCURVE",
"169 -20 QCURVE SMOOTH",
"197 -20 OFFCURVE",
"203 0 QCURVE SMOOTH",
"215 39 OFFCURVE",
"217 64 QCURVE",
"225 164 OFFCURVE",
"226 265 QCURVE",
"228 298 OFFCURVE",
"219 324 QCURVE SMOOTH",
"214 339 OFFCURVE",
"184 357 OFFCURVE",
"165 357 QCURVE SMOOTH",
"156 357 OFFCURVE",
"152 356 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
22 1 0 1 28 1 2 0 57 49 2 3 2 3 76 0 1 0 0 2 1 0 105 0 2 3 3 2 89 0 2 2 3 97 0 3 2 3 81 54 52 43 42 42 37 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 279;
}
);
leftKerningGroup = i;
note = idieresis;
rightKerningGroup = i;
unicode = 00EF;
},
{
glyphname = eth;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"444 659 OFFCURVE",
"417 641 QCURVE",
"410 637 OFFCURVE",
"396 627 QCURVE SMOOTH",
"365 606 OFFCURVE",
"322 582 OFFCURVE",
"295 575 QCURVE",
"296 574 OFFCURVE",
"273 594 QCURVE",
"265 600 OFFCURVE",
"246 617 OFFCURVE",
"233 626 QCURVE SMOOTH",
"191 657 OFFCURVE",
"143 657 QCURVE SMOOTH",
"127 657 OFFCURVE",
"105 652 QCURVE",
"98 650 OFFCURVE",
"84 637 OFFCURVE",
"83 630 QCURVE SMOOTH",
"82 623 OFFCURVE",
"91 605 OFFCURVE",
"97 602 QCURVE",
"114 592 OFFCURVE",
"135 584 QCURVE SMOOTH",
"140 582 OFFCURVE",
"160 573 OFFCURVE",
"167 569 QCURVE SMOOTH",
"182 561 OFFCURVE",
"197 546 OFFCURVE",
"195 529 QCURVE",
"158 508 OFFCURVE",
"143 499 QCURVE",
"119 483 OFFCURVE",
"119 458 QCURVE SMOOTH",
"119 452 OFFCURVE",
"122 444 QCURVE",
"130 427 OFFCURVE",
"154 427 QCURVE SMOOTH",
"166 427 OFFCURVE",
"172 429 QCURVE",
"220 443 LINE SMOOTH",
"250 452 OFFCURVE",
"257 454 QCURVE",
"312 375 OFFCURVE",
"312 316 QCURVE SMOOTH",
"312 303 OFFCURVE",
"309 289 QCURVE",
"276 301 OFFCURVE",
"247 301 QCURVE SMOOTH",
"172 301 OFFCURVE",
"94 223 QCURVE",
"80 207 LINE",
"50 177 OFFCURVE",
"50 141 QCURVE SMOOTH",
"50 110 OFFCURVE",
"71 78 QCURVE SMOOTH",
"123 0 OFFCURVE",
"211 -25 QCURVE SMOOTH",
"234 -31 OFFCURVE",
"255 -31 QCURVE SMOOTH",
"299 -31 OFFCURVE",
"372 16 OFFCURVE",
"386 55 QCURVE SMOOTH",
"419 151 OFFCURVE",
"419 238 QCURVE SMOOTH",
"419 345 OFFCURVE",
"373 440 QCURVE SMOOTH",
"347 498 LINE",
"359 510 OFFCURVE",
"389 531 OFFCURVE",
"404 540 QCURVE SMOOTH",
"430 556 OFFCURVE",
"441 565 QCURVE",
"471 587 OFFCURVE",
"491 613 QCURVE",
"496 620 OFFCURVE",
"496 627 QCURVE SMOOTH",
"496 637 OFFCURVE",
"481 655 OFFCURVE",
"470 656 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"274 55 OFFCURVE",
"260 55 QCURVE SMOOTH",
"255 55 OFFCURVE",
"245 57 QCURVE",
"160 81 OFFCURVE",
"135 157 QCURVE",
"137 161 OFFCURVE",
"145 177 OFFCURVE",
"149 182 QCURVE",
"173 208 OFFCURVE",
"208 231 OFFCURVE",
"223 231 QCURVE SMOOTH",
"240 231 OFFCURVE",
"274 202 OFFCURVE",
"298 169 QCURVE SMOOTH",
"310 153 OFFCURVE",
"310 129 QCURVE SMOOTH",
"310 111 OFFCURVE",
"297 78 OFFCURVE",
"284 65 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
36 11 2 3 2 3 32 1 4 1 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 1 0 4 5 1 4 105 0 2 2 3 97 0 3 3 30 77 0 5 5 0 97 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
24 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 1 0 4 5 1 4 105 0 2 2 3 97 0 3 3 32 77 0 5 5 0 97 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
0 3 0 2 1 3 2 105 0 1 0 4 5 1 4 105 0 5 5 0 97 0 0 0 31 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 32 values pushed */
0 3 0 2 1 3 2 105 0 1 0 4 5 1 4 105 0 5 0 0 5 89 0 5 5 0 97 0 0 5 0 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
98 96 88 86 66 64 42 41 31 29 20 18 6 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 546;
}
);
note = eth;
unicode = 00F0;
},
{
glyphname = ntilde;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"205 482 OFFCURVE",
"223 482 QCURVE SMOOTH",
"239 482 OFFCURVE",
"249 487 QCURVE",
"266 494 OFFCURVE",
"280 494 QCURVE SMOOTH",
"295 494 OFFCURVE",
"316 486 QCURVE SMOOTH",
"324 483 OFFCURVE",
"337 476 OFFCURVE",
"342 474 QCURVE",
"369 460 OFFCURVE",
"389 456 QCURVE SMOOTH",
"399 454 OFFCURVE",
"419 448 QCURVE SMOOTH",
"451 438 OFFCURVE",
"468 438 QCURVE SMOOTH",
"497 438 OFFCURVE",
"518 459 QCURVE SMOOTH",
"541 482 OFFCURVE",
"557 502 QCURVE SMOOTH",
"577 526 OFFCURVE",
"577 544 QCURVE SMOOTH",
"577 570 OFFCURVE",
"527 585 QCURVE",
"517 587 OFFCURVE",
"514 587 QCURVE SMOOTH",
"492 587 OFFCURVE",
"472 561 QCURVE",
"450 535 OFFCURVE",
"430 517 OFFCURVE",
"418 517 QCURVE SMOOTH",
"412 517 OFFCURVE",
"395 522 OFFCURVE",
"365 536 OFFCURVE",
"360 538 QCURVE",
"325 555 OFFCURVE",
"274 573 QCURVE SMOOTH",
"235 588 LINE",
"232 586 OFFCURVE",
"216 578 QCURVE",
"178 557 OFFCURVE",
"161 541 QCURVE SMOOTH",
"157 537 OFFCURVE",
"157 522 QCURVE SMOOTH",
"157 512 OFFCURVE",
"161 494 OFFCURVE",
"163 493 QCURVE"
);
},
{
closed = 1;
nodes = (
"528 163 OFFCURVE",
"494 211 OFFCURVE",
"481 251 QCURVE SMOOTH",
"469 290 OFFCURVE",
"416 335 OFFCURVE",
"384 335 QCURVE SMOOTH",
"344 335 OFFCURVE",
"310 300 QCURVE SMOOTH",
"296 286 OFFCURVE",
"286 278 QCURVE",
"270 264 LINE",
"263 307 OFFCURVE",
"262 320 QCURVE SMOOTH",
"259 371 OFFCURVE",
"200 436 OFFCURVE",
"158 436 QCURVE SMOOTH",
"144 436 OFFCURVE",
"126 431 QCURVE SMOOTH",
"98 423 OFFCURVE",
"74 395 QCURVE",
"64 385 OFFCURVE",
"50 357 OFFCURVE",
"50 345 QCURVE SMOOTH",
"49 315 OFFCURVE",
"94 313 QCURVE",
"99 312 OFFCURVE",
"113 309 OFFCURVE",
"119 309 QCURVE SMOOTH",
"158 309 OFFCURVE",
"158 265 QCURVE SMOOTH",
"158 223 LINE SMOOTH",
"158 181 OFFCURVE",
"160 160 QCURVE SMOOTH",
"165 96 OFFCURVE",
"177 47 QCURVE SMOOTH",
"182 24 OFFCURVE",
"214 11 OFFCURVE",
"246 6 QCURVE",
"265 4 OFFCURVE",
"280 22 OFFCURVE",
"290 45 QCURVE",
"314 106 OFFCURVE",
"349 183 QCURVE",
"353 191 OFFCURVE",
"373 210 OFFCURVE",
"378 215 QCURVE",
"383 210 OFFCURVE",
"402 191 OFFCURVE",
"406 183 QCURVE SMOOTH",
"423 148 OFFCURVE",
"498 101 OFFCURVE",
"536 101 QCURVE SMOOTH",
"546 101 OFFCURVE",
"551 102 QCURVE",
"559 103 OFFCURVE",
"579 120 OFFCURVE",
"584 124 QCURVE",
"581 128 OFFCURVE",
"568 150 OFFCURVE",
"562 152 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 88 values pushed */
94 1 6 9 96 61 2 5 6 2 76 0 0 1 3 1 0 3 128 0 3 4 1 3 4 126 0 4 2 1 4 2 126 0 9 8 6 8 9 6 128 0 5 6 5 134 0 1 0 2 8 1 2 105 0 8 9 6 8 89 0 8 8 6 97 7 1 6 8 6 81 102 100 92 90 83 81 79 78 55 34 41 41 19 46 10 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 634;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = ograve;
lastChange = "2019-06-19 01:06:51 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"221 496 OFFCURVE",
"259 472 QCURVE SMOOTH",
"304 442 OFFCURVE",
"365 404 OFFCURVE",
"398 389 QCURVE",
"434 410 OFFCURVE",
"434 442 QCURVE SMOOTH",
"434 446 OFFCURVE",
"432 458 QCURVE",
"419 513 OFFCURVE",
"375 533 QCURVE SMOOTH",
"275 577 OFFCURVE",
"225 598 QCURVE",
"209 604 OFFCURVE",
"189 604 QCURVE",
"177 603 OFFCURVE",
"159 582 OFFCURVE",
"159 570 QCURVE SMOOTH",
"159 566 OFFCURVE",
"161 560 QCURVE",
"170 541 OFFCURVE",
"182 530 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"396 345 OFFCURVE",
"358 377 OFFCURVE",
"302 397 OFFCURVE",
"297 399 QCURVE",
"260 412 OFFCURVE",
"230 412 QCURVE SMOOTH",
"173 412 OFFCURVE",
"132 367 QCURVE",
"126 361 OFFCURVE",
"115 341 QCURVE",
"105 321 OFFCURVE",
"97 314 QCURVE SMOOTH",
"71 291 OFFCURVE",
"50 234 OFFCURVE",
"50 199 QCURVE SMOOTH",
"50 187 OFFCURVE",
"52 163 QCURVE SMOOTH",
"57 117 OFFCURVE",
"114 44 OFFCURVE",
"198 2 OFFCURVE",
"243 2 QCURVE SMOOTH",
"284 2 OFFCURVE",
"321 20 QCURVE SMOOTH",
"360 40 OFFCURVE",
"406 101 OFFCURVE",
"430 174 OFFCURVE",
"441 229 QCURVE",
"432 253 LINE",
"419 293 OFFCURVE",
"405 324 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341 213 OFFCURVE",
"316 135 OFFCURVE",
"269 77 OFFCURVE",
"238 71 QCURVE",
"224 69 OFFCURVE",
"220 69 QCURVE SMOOTH",
"193 69 OFFCURVE",
"181 95 QCURVE",
"172 117 OFFCURVE",
"159 167 OFFCURVE",
"156 176 QCURVE",
"167 244 OFFCURVE",
"198 327 OFFCURVE",
"234 356 QCURVE SMOOTH",
"250 369 OFFCURVE",
"262 369 QCURVE SMOOTH",
"275 369 OFFCURVE",
"287 358 QCURVE",
"341 312 OFFCURVE",
"341 246 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
3 1 2 0 16 1 3 2 60 24 2 4 3 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
41 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
0 0 2 0 133 0 3 3 2 97 0 2 2 33 77 0 4 4 1 97 0 1 1 40 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 0 2 0 133 0 2 0 3 4 2 3 105 0 4 4 1 97 0 1 1 40 1 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
65 64 56 54 46 44 31 29 22 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 491;
}
);
leftKerningGroup = o;
note = ograve;
rightKerningGroup = o;
unicode = 00F2;
},
{
glyphname = oacute;
lastChange = "2019-06-19 01:06:51 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"183 453 LINE",
"192 447 OFFCURVE",
"203 447 QCURVE SMOOTH",
"216 447 OFFCURVE",
"233 457 QCURVE",
"284 484 LINE",
"307 495 OFFCURVE",
"334 510 QCURVE SMOOTH",
"361 525 LINE",
"376 536 OFFCURVE",
"376 551 QCURVE SMOOTH",
"376 557 OFFCURVE",
"375 561 QCURVE SMOOTH",
"369 585 OFFCURVE",
"345 588 QCURVE SMOOTH",
"329 590 OFFCURVE",
"322 590 QCURVE SMOOTH",
"296 590 OFFCURVE",
"262 578 QCURVE SMOOTH",
"216 560 LINE",
"183 547 LINE SMOOTH",
"165 540 OFFCURVE",
"145 521 OFFCURVE",
"144 505 QCURVE SMOOTH",
"143 489 OFFCURVE",
"161 467 OFFCURVE",
"176 457 QCURVE"
);
},
{
closed = 1;
nodes = (
"396 345 OFFCURVE",
"358 377 OFFCURVE",
"302 397 OFFCURVE",
"297 399 QCURVE",
"260 412 OFFCURVE",
"230 412 QCURVE SMOOTH",
"173 412 OFFCURVE",
"132 367 QCURVE",
"126 361 OFFCURVE",
"115 341 QCURVE",
"105 321 OFFCURVE",
"97 314 QCURVE SMOOTH",
"71 291 OFFCURVE",
"50 234 OFFCURVE",
"50 199 QCURVE SMOOTH",
"50 187 OFFCURVE",
"52 163 QCURVE SMOOTH",
"57 117 OFFCURVE",
"114 44 OFFCURVE",
"198 2 OFFCURVE",
"243 2 QCURVE SMOOTH",
"284 2 OFFCURVE",
"321 20 QCURVE SMOOTH",
"360 40 OFFCURVE",
"406 101 OFFCURVE",
"430 174 OFFCURVE",
"441 229 QCURVE",
"432 253 LINE",
"419 293 OFFCURVE",
"405 324 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341 213 OFFCURVE",
"316 135 OFFCURVE",
"269 77 OFFCURVE",
"238 71 QCURVE",
"224 69 OFFCURVE",
"220 69 QCURVE SMOOTH",
"193 69 OFFCURVE",
"181 95 QCURVE",
"172 117 OFFCURVE",
"159 167 OFFCURVE",
"156 176 QCURVE",
"167 244 OFFCURVE",
"198 327 OFFCURVE",
"234 356 QCURVE SMOOTH",
"250 369 OFFCURVE",
"262 369 QCURVE SMOOTH",
"275 369 OFFCURVE",
"287 358 QCURVE",
"341 312 OFFCURVE",
"341 246 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
15 1 1 0 65 29 2 5 4 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
41 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 0 1 0 133 0 1 3 1 133 0 4 4 3 97 0 3 3 33 77 0 5 5 2 97 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 29 values pushed */
0 0 1 0 133 0 1 3 1 133 0 3 0 4 5 3 4 105 0 5 5 2 97 0 2 2 40 2 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
24 40 45 42 45 24 6 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 491;
}
);
leftKerningGroup = o;
note = oacute;
rightKerningGroup = o;
unicode = 00F3;
},
{
glyphname = ocircumflex;
lastChange = "2019-06-19 01:06:51 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"427 383 LINE SMOOTH",
"385 440 OFFCURVE",
"370 463 QCURVE",
"355 488 LINE SMOOTH",
"345 504 OFFCURVE",
"339 512 QCURVE SMOOTH",
"313 549 OFFCURVE",
"275 549 QCURVE SMOOTH",
"256 549 OFFCURVE",
"234 538 QCURVE SMOOTH",
"210 526 OFFCURVE",
"171 494 OFFCURVE",
"140 464 QCURVE SMOOTH",
"90 418 LINE",
"78 408 OFFCURVE",
"78 392 QCURVE SMOOTH",
"78 383 OFFCURVE",
"89 368 OFFCURVE",
"99 364 QCURVE",
"112 360 OFFCURVE",
"147 355 OFFCURVE",
"155 354 QCURVE",
"181 387 OFFCURVE",
"186 392 QCURVE",
"203 412 OFFCURVE",
"202 411 QCURVE",
"237 451 OFFCURVE",
"245 459 QCURVE",
"250 463 OFFCURVE",
"269 471 OFFCURVE",
"274 473 QCURVE",
"299 438 LINE",
"321 408 LINE SMOOTH",
"345 374 OFFCURVE",
"358 358 QCURVE",
"377 332 OFFCURVE",
"418 332 QCURVE",
"428 333 OFFCURVE",
"442 347 OFFCURVE",
"442 356 QCURVE SMOOTH",
"442 362 OFFCURVE",
"439 366 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"130 329 OFFCURVE",
"75 299 OFFCURVE",
"66 262 QCURVE SMOOTH",
"60 240 OFFCURVE",
"56 210 QCURVE",
"51 184 LINE",
"47 130 OFFCURVE",
"95 46 OFFCURVE",
"175 1 OFFCURVE",
"219 1 QCURVE SMOOTH",
"257 1 OFFCURVE",
"291 21 QCURVE SMOOTH",
"339 51 OFFCURVE",
"377 109 QCURVE SMOOTH",
"411 160 OFFCURVE",
"411 207 QCURVE SMOOTH",
"411 252 OFFCURVE",
"378 284 QCURVE SMOOTH",
"319 343 OFFCURVE",
"229 343 QCURVE SMOOTH",
"206 343 OFFCURVE",
"174 338 QCURVE"
);
},
{
closed = 1;
nodes = (
"277 140 OFFCURVE",
"250 107 OFFCURVE",
"237 96 QCURVE",
"230 89 OFFCURVE",
"209 78 OFFCURVE",
"202 78 QCURVE SMOOTH",
"188 78 OFFCURVE",
"173 117 QCURVE",
"170 126 OFFCURVE",
"170 147 QCURVE SMOOTH",
"170 162 LINE",
"163 165 LINE",
"169 185 OFFCURVE",
"173 195 QCURVE",
"189 247 OFFCURVE",
"206 293 QCURVE SMOOTH",
"207 296 OFFCURVE",
"221 299 OFFCURVE",
"229 299 QCURVE SMOOTH",
"236 299 OFFCURVE",
"239 298 QCURVE SMOOTH",
"269 289 OFFCURVE",
"305 238 OFFCURVE",
"305 208 QCURVE SMOOTH",
"305 172 OFFCURVE",
"282 146 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
19 10 1 3 2 1 78 77 70 3 4 0 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
0 1 2 1 133 0 2 0 2 133 0 0 4 0 133 0 4 4 3 98 0 3 3 40 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 1 2 1 133 0 2 0 2 133 0 0 4 0 133 0 4 3 3 4 89 0 4 4 3 98 0 3 4 3 82 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
83 82 54 52 44 42 34 32 20 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 491;
}
);
leftKerningGroup = o;
note = ocircumflex;
rightKerningGroup = o;
unicode = 00F4;
},
{
glyphname = otilde;
lastChange = "2019-06-19 01:06:51 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"417 512 OFFCURVE",
"412 509 QCURVE",
"407 507 OFFCURVE",
"386 497 OFFCURVE",
"363 489 OFFCURVE",
"352 489 QCURVE SMOOTH",
"334 489 OFFCURVE",
"317 502 QCURVE",
"302 515 OFFCURVE",
"260 561 QCURVE SMOOTH",
"237 588 OFFCURVE",
"211 588 QCURVE SMOOTH",
"182 588 OFFCURVE",
"153 554 QCURVE SMOOTH",
"128 525 OFFCURVE",
"120 463 QCURVE",
"121 444 OFFCURVE",
"133 444 QCURVE SMOOTH",
"140 444 OFFCURVE",
"165 458 OFFCURVE",
"178 466 QCURVE",
"206 485 OFFCURVE",
"218 488 QCURVE",
"238 486 OFFCURVE",
"270 463 OFFCURVE",
"291 442 QCURVE SMOOTH",
"318 415 OFFCURVE",
"331 410 QCURVE SMOOTH",
"352 402 OFFCURVE",
"371 402 QCURVE SMOOTH",
"409 402 OFFCURVE",
"449 434 QCURVE",
"461 445 OFFCURVE",
"476 474 OFFCURVE",
"476 498 QCURVE",
"463 528 OFFCURVE",
"446 528 QCURVE SMOOTH",
"438 528 OFFCURVE",
"427 520 QCURVE"
);
},
{
closed = 1;
nodes = (
"260 412 OFFCURVE",
"230 412 QCURVE SMOOTH",
"173 412 OFFCURVE",
"132 367 QCURVE",
"126 361 OFFCURVE",
"115 341 QCURVE",
"105 321 OFFCURVE",
"97 314 QCURVE SMOOTH",
"71 291 OFFCURVE",
"50 234 OFFCURVE",
"50 199 QCURVE SMOOTH",
"50 187 OFFCURVE",
"52 163 QCURVE SMOOTH",
"57 117 OFFCURVE",
"114 44 OFFCURVE",
"198 2 OFFCURVE",
"243 2 QCURVE SMOOTH",
"284 2 OFFCURVE",
"321 20 QCURVE SMOOTH",
"360 40 OFFCURVE",
"406 101 OFFCURVE",
"430 174 OFFCURVE",
"441 229 QCURVE",
"432 253 LINE",
"419 293 OFFCURVE",
"405 324 QCURVE SMOOTH",
"396 345 OFFCURVE",
"358 377 OFFCURVE",
"302 397 OFFCURVE",
"297 399 QCURVE"
);
},
{
closed = 1;
nodes = (
"341 213 OFFCURVE",
"316 135 OFFCURVE",
"269 77 OFFCURVE",
"238 71 QCURVE",
"224 69 OFFCURVE",
"220 69 QCURVE SMOOTH",
"193 69 OFFCURVE",
"181 95 QCURVE",
"172 117 OFFCURVE",
"159 167 OFFCURVE",
"156 176 QCURVE",
"167 244 OFFCURVE",
"198 327 OFFCURVE",
"234 356 QCURVE SMOOTH",
"250 369 OFFCURVE",
"262 369 QCURVE SMOOTH",
"275 369 OFFCURVE",
"287 358 QCURVE",
"341 312 OFFCURVE",
"341 246 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
3 1 4 0 22 15 2 2 4 77 45 2 8 7 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
41 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 47 values pushed */
0 3 0 3 133 0 0 4 0 133 0 2 4 6 4 2 6 128 0 4 0 1 7 4 1 105 0 7 7 6 97 0 6 6 33 77 0 8 8 5 97 0 5 5 40 5 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 45 values pushed */
0 3 0 3 133 0 0 4 0 133 0 2 4 6 4 2 6 128 0 4 0 1 7 4 1 105 0 6 0 7 8 6 7 105 0 8 8 5 97 0 5 5 40 5 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
82 81 73 71 67 65 52 50 36 36 42 37 32 9 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 526;
}
);
leftKerningGroup = o;
note = otilde;
rightKerningGroup = o;
unicode = 00F5;
},
{
glyphname = odieresis;
lastChange = "2019-06-19 01:06:51 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"306 387 OFFCURVE",
"277 403 QCURVE SMOOTH",
"255 415 LINE",
"252 438 LINE",
"250 460 OFFCURVE",
"248 470 QCURVE",
"242 494 OFFCURVE",
"198 526 OFFCURVE",
"173 526 QCURVE SMOOTH",
"156 526 OFFCURVE",
"127 507 OFFCURVE",
"124 493 QCURVE SMOOTH",
"121 481 OFFCURVE",
"137 453 OFFCURVE",
"152 445 QCURVE",
"164 440 OFFCURVE",
"184 432 OFFCURVE",
"193 428 QCURVE",
"212 418 LINE",
"230 409 LINE",
"211 395 OFFCURVE",
"194 363 OFFCURVE",
"194 339 QCURVE",
"139 343 OFFCURVE",
"81 291 OFFCURVE",
"67 241 QCURVE SMOOTH",
"55 196 OFFCURVE",
"52 176 QCURVE SMOOTH",
"50 160 OFFCURVE",
"50 152 QCURVE SMOOTH",
"50 112 OFFCURVE",
"89 42 OFFCURVE",
"158 1 OFFCURVE",
"202 1 QCURVE SMOOTH",
"214 1 OFFCURVE",
"238 5 QCURVE SMOOTH",
"304 18 OFFCURVE",
"385 104 OFFCURVE",
"400 171 QCURVE SMOOTH",
"405 196 OFFCURVE",
"405 215 QCURVE SMOOTH",
"405 265 OFFCURVE",
"356 354 OFFCURVE",
"311 384 QCURVE"
);
},
{
closed = 1;
nodes = (
"431 485 OFFCURVE",
"395 513 OFFCURVE",
"369 513 QCURVE SMOOTH",
"336 513 OFFCURVE",
"319 474 QCURVE",
"323 451 OFFCURVE",
"352 426 OFFCURVE",
"375 418 QCURVE",
"384 414 OFFCURVE",
"395 414 QCURVE SMOOTH",
"414 414 OFFCURVE",
"431 428 QCURVE",
"443 437 OFFCURVE",
"443 450 QCURVE SMOOTH",
"443 457 OFFCURVE",
"441 461 QCURVE"
);
},
{
closed = 1;
nodes = (
"203 89 OFFCURVE",
"195 88 QCURVE SMOOTH",
"179 86 OFFCURVE",
"149 122 OFFCURVE",
"151 139 QCURVE SMOOTH",
"156 185 OFFCURVE",
"170 240 QCURVE SMOOTH",
"174 256 OFFCURVE",
"205 294 OFFCURVE",
"208 302 QCURVE",
"213 313 OFFCURVE",
"231 325 OFFCURVE",
"241 325 QCURVE SMOOTH",
"254 322 OFFCURVE",
"270 312 QCURVE SMOOTH",
"297 296 OFFCURVE",
"312 252 OFFCURVE",
"313 221 QCURVE",
"312 186 OFFCURVE",
"250 89 OFFCURVE",
"207 89 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
54 45 2 2 3 23 20 2 4 2 13 1 5 4 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 32 values pushed */
0 1 3 1 133 0 4 2 5 2 4 5 128 0 3 0 2 4 3 2 105 0 5 5 0 97 0 0 0 40 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 1 3 1 133 0 4 2 5 2 4 5 128 0 3 0 2 4 3 2 105 0 5 0 0 5 89 0 5 5 0 97 0 0 5 0 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
78 77 68 66 57 55 50 48 35 33 40 6 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 493;
}
);
leftKerningGroup = o;
note = odieresis;
rightKerningGroup = o;
unicode = 00F6;
},
{
glyphname = divide;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"244 505 OFFCURVE",
"288 471 OFFCURVE",
"316 471 QCURVE SMOOTH",
"346 471 OFFCURVE",
"384 501 OFFCURVE",
"384 522 QCURVE SMOOTH",
"384 547 OFFCURVE",
"339 585 OFFCURVE",
"313 583 QCURVE SMOOTH",
"244 578 OFFCURVE",
"244 526 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"421 214 LINE",
"421 208 LINE",
"479 216 LINE SMOOTH",
"599 233 OFFCURVE",
"654 243 QCURVE",
"661 244 OFFCURVE",
"674 256 OFFCURVE",
"689 276 OFFCURVE",
"695 282 QCURVE",
"688 286 OFFCURVE",
"659 305 OFFCURVE",
"648 306 QCURVE",
"600 307 OFFCURVE",
"503 307 QCURVE SMOOTH",
"383 307 OFFCURVE",
"322 309 QCURVE SMOOTH",
"303 309 OFFCURVE",
"275 316 QCURVE",
"245 322 OFFCURVE",
"230 322 QCURVE",
"143 318 OFFCURVE",
"84 305 QCURVE",
"73 302 OFFCURVE",
"50 269 OFFCURVE",
"50 257 QCURVE SMOOTH",
"50 250 OFFCURVE",
"65 236 OFFCURVE",
"92 221 OFFCURVE",
"99 217 QCURVE SMOOTH",
"104 214 OFFCURVE",
"116 214 QCURVE SMOOTH",
"124 214 LINE"
);
},
{
closed = 1;
nodes = (
"447 88 OFFCURVE",
"408 122 OFFCURVE",
"380 122 QCURVE SMOOTH",
"349 122 OFFCURVE",
"306 78 OFFCURVE",
"306 44 QCURVE SMOOTH",
"306 26 OFFCURVE",
"325 6 OFFCURVE",
"358 1 OFFCURVE",
"362 0 QCURVE",
"401 -1 OFFCURVE",
"447 33 OFFCURVE",
"447 62 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
34 1 1 3 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
41 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 0 2 0 133 0 2 3 3 2 112 0 3 6 1 1 5 3 1 104 0 5 5 4 97 0 4 4 40 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 36 values pushed */
0 0 2 0 133 0 2 3 3 2 112 0 3 6 1 1 5 3 1 104 0 5 4 4 5 89 0 5 5 4 97 0 4 5 4 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
13 11 53 51 45 44 31 26 24 22 11 42 13 41 38 7 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 746;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = oslash;
lastChange = "2019-06-19 01:43:31 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"381 311 OFFCURVE",
"361 351 QCURVE",
"372 374 LINE SMOOTH",
"385 399 OFFCURVE",
"394 424 QCURVE",
"396 429 OFFCURVE",
"396 437 QCURVE SMOOTH",
"396 455 OFFCURVE",
"373 467 QCURVE SMOOTH",
"357 476 OFFCURVE",
"344 476 QCURVE SMOOTH",
"331 476 OFFCURVE",
"319 464 QCURVE",
"304 446 OFFCURVE",
"288 425 QCURVE",
"273 426 OFFCURVE",
"247 436 QCURVE SMOOTH",
"221 446 OFFCURVE",
"209 446 QCURVE SMOOTH",
"195 446 OFFCURVE",
"183 438 QCURVE",
"188 416 OFFCURVE",
"193 400 OFFCURVE",
"202 394 OFFCURVE",
"216 388 QCURVE",
"224 385 OFFCURVE",
"256 370 QCURVE",
"234 337 OFFCURVE",
"196 290 OFFCURVE",
"169 267 QCURVE",
"171 291 LINE",
"171 301 OFFCURVE",
"173 317 QCURVE",
"175 326 OFFCURVE",
"175 340 QCURVE SMOOTH",
"175 358 OFFCURVE",
"158 379 OFFCURVE",
"138 387 QCURVE",
"129 390 OFFCURVE",
"121 390 QCURVE SMOOTH",
"109 390 OFFCURVE",
"91 376 OFFCURVE",
"87 363 QCURVE",
"82 344 OFFCURVE",
"78 304 QCURVE",
"77 297 OFFCURVE",
"77 282 QCURVE SMOOTH",
"77 241 OFFCURVE",
"94 175 QCURVE SMOOTH",
"96 168 OFFCURVE",
"96 154 QCURVE SMOOTH",
"96 133 OFFCURVE",
"84 112 QCURVE SMOOTH",
"62 76 OFFCURVE",
"54 61 QCURVE SMOOTH",
"50 53 OFFCURVE",
"50 44 QCURVE SMOOTH",
"50 23 OFFCURVE",
"71 10 QCURVE SMOOTH",
"83 2 OFFCURVE",
"98 2 QCURVE SMOOTH",
"118 2 OFFCURVE",
"135 19 QCURVE",
"162 51 LINE",
"183 41 LINE",
"191 38 OFFCURVE",
"211 28 OFFCURVE",
"224 23 QCURVE SMOOTH",
"250 13 OFFCURVE",
"274 13 QCURVE SMOOTH",
"332 13 OFFCURVE",
"368 69 QCURVE SMOOTH",
"412 138 OFFCURVE",
"412 203 QCURVE SMOOTH",
"412 254 OFFCURVE",
"384 306 QCURVE"
);
},
{
closed = 1;
nodes = (
"312 138 OFFCURVE",
"278 102 QCURVE",
"272 97 OFFCURVE",
"258 89 QCURVE",
"249 83 OFFCURVE",
"239 83 QCURVE SMOOTH",
"227 83 OFFCURVE",
"214 93 QCURVE",
"202 104 OFFCURVE",
"202 116 QCURVE SMOOTH",
"202 126 OFFCURVE",
"208 136 QCURVE",
"252 218 OFFCURVE",
"298 267 QCURVE SMOOTH",
"300 269 OFFCURVE",
"307 270 OFFCURVE",
"310 271 QCURVE",
"325 252 OFFCURVE",
"325 228 QCURVE SMOOTH",
"325 216 OFFCURVE",
"321 192 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
68 54 2 4 3 79 73 48 45 44 5 6 2 11 1 0 6 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 5 3 5 133 0 3 4 3 133 0 6 2 0 2 6 0 128 0 2 2 33 77 0 4 4 0 97 0 0 0 40 77 0 1 1 40 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 5 3 5 133 0 3 4 3 133 0 6 2 0 2 6 0 128 0 4 4 0 97 0 0 0 40 77 0 2 2 1 97 0 1 1 40 1 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
91 89 65 63 60 59 57 55 35 34 39 36 7 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 462;
}
);
leftKerningGroup = o;
note = oslash;
unicode = 00F8;
},
{
glyphname = ugrave;
lastChange = "2019-06-19 01:07:56 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"168 474 OFFCURVE",
"216 450 QCURVE",
"223 447 OFFCURVE",
"230 447 QCURVE SMOOTH",
"246 447 OFFCURVE",
"259 460 QCURVE SMOOTH",
"269 470 OFFCURVE",
"269 481 QCURVE SMOOTH",
"269 491 OFFCURVE",
"262 503 QCURVE",
"241 546 LINE SMOOTH",
"223 586 OFFCURVE",
"212 606 QCURVE SMOOTH",
"199 630 OFFCURVE",
"158 652 OFFCURVE",
"135 650 QCURVE",
"106 649 OFFCURVE",
"74 627 OFFCURVE",
"74 609 QCURVE SMOOTH",
"74 595 OFFCURVE",
"84 579 QCURVE SMOOTH",
"114 529 OFFCURVE",
"149 494 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"433 50 OFFCURVE",
"433 177 QCURVE SMOOTH",
"433 216 OFFCURVE",
"434 235 QCURVE",
"435 297 LINE SMOOTH",
"435 319 OFFCURVE",
"416 343 OFFCURVE",
"393 349 QCURVE SMOOTH",
"372 355 OFFCURVE",
"358 355 QCURVE SMOOTH",
"340 355 OFFCURVE",
"321 330 OFFCURVE",
"316 300 QCURVE SMOOTH",
"298 204 OFFCURVE",
"211 133 QCURVE",
"209 131 OFFCURVE",
"199 130 OFFCURVE",
"194 129 QCURVE",
"191 134 OFFCURVE",
"177 152 OFFCURVE",
"175 160 QCURVE",
"164 198 OFFCURVE",
"164 234 QCURVE SMOOTH",
"164 260 OFFCURVE",
"170 287 QCURVE SMOOTH",
"171 292 OFFCURVE",
"181 336 OFFCURVE",
"181 356 QCURVE SMOOTH",
"181 385 OFFCURVE",
"140 428 OFFCURVE",
"111 430 QCURVE",
"96 430 OFFCURVE",
"86 423 QCURVE SMOOTH",
"58 403 OFFCURVE",
"57 372 QCURVE",
"54 338 LINE SMOOTH",
"50 300 OFFCURVE",
"50 280 QCURVE SMOOTH",
"50 200 OFFCURVE",
"63 152 QCURVE SMOOTH",
"76 97 OFFCURVE",
"148 35 OFFCURVE",
"197 35 QCURVE SMOOTH",
"239 35 OFFCURVE",
"282 59 QCURVE",
"306 71 OFFCURVE",
"327 80 QCURVE",
"328 76 OFFCURVE",
"332 64 OFFCURVE",
"333 57 QCURVE",
"343 26 OFFCURVE",
"344 22 QCURVE",
"347 15 OFFCURVE",
"366 -38 OFFCURVE",
"377 -58 QCURVE SMOOTH",
"386 -74 OFFCURVE",
"413 -86 QCURVE",
"423 -90 OFFCURVE",
"429 -90 QCURVE SMOOTH",
"442 -90 OFFCURVE",
"461 -72 OFFCURVE",
"461 -58 QCURVE SMOOTH",
"461 -55 OFFCURVE",
"459 -45 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
51 1 5 4 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 1 0 4 0 1 4 128 0 4 5 0 4 5 126 0 5 3 0 5 3 126 0 2 3 2 134 0 0 0 32 77 0 3 3 34 3 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 1 0 4 0 1 4 128 0 4 5 0 4 5 126 0 5 3 0 5 3 126 0 3 2 0 3 2 126 0 2 2 132 0 0 0 32 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 29 values pushed */
0 0 1 0 133 0 1 4 1 133 0 4 5 4 133 0 5 3 5 133 0 3 2 3 133 0 2 2 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
77 75 42 47 24 27 21 6 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 511;
}
);
leftKerningGroup = u;
note = ugrave;
rightKerningGroup = u;
unicode = 00F9;
},
{
glyphname = uacute;
lastChange = "2019-10-02 11:07:47 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"243 418 OFFCURVE",
"266 406 OFFCURVE",
"269 406 QCURVE SMOOTH",
"309 406 OFFCURVE",
"328 429 QCURVE",
"357 455 OFFCURVE",
"407 515 QCURVE SMOOTH",
"423 534 OFFCURVE",
"428 546 QCURVE",
"429 554 OFFCURVE",
"429 559 QCURVE",
"429 569 OFFCURVE",
"427 576 QCURVE SMOOTH",
"423 589 OFFCURVE",
"406 587 QCURVE",
"403 587 OFFCURVE",
"394 585 QCURVE SMOOTH",
"346 574 OFFCURVE",
"267 513 OFFCURVE",
"229 469 QCURVE SMOOTH",
"222 461 OFFCURVE",
"221 450 QCURVE",
"221 433 OFFCURVE",
"233 425 QCURVE"
);
},
{
closed = 1;
nodes = (
"443 74 LINE SMOOTH",
"440 83 OFFCURVE",
"432 119 OFFCURVE",
"429 133 QCURVE",
"419 188 OFFCURVE",
"419 239 QCURVE",
"415 269 OFFCURVE",
"424 305 QCURVE SMOOTH",
"425 309 OFFCURVE",
"425 316 QCURVE",
"425 342 OFFCURVE",
"390 369 OFFCURVE",
"359 369 QCURVE",
"339 369 OFFCURVE",
"316 347 OFFCURVE",
"311 322 QCURVE",
"306 298 LINE",
"322 197 OFFCURVE",
"243 118 QCURVE",
"233 108 OFFCURVE",
"188 118 QCURVE",
"181 118 OFFCURVE",
"144 147 OFFCURVE",
"156 235 OFFCURVE",
"173 293 QCURVE",
"182 319 LINE",
"182 326 OFFCURVE",
"181 329 QCURVE SMOOTH",
"175 346 OFFCURVE",
"139 375 OFFCURVE",
"117 375 QCURVE",
"95 375 OFFCURVE",
"67 347 OFFCURVE",
"62 323 QCURVE SMOOTH",
"60 313 OFFCURVE",
"50 235 OFFCURVE",
"50 201 QCURVE",
"50 144 OFFCURVE",
"69 96 QCURVE",
"83 58 OFFCURVE",
"142 12 OFFCURVE",
"179 12 QCURVE",
"227 6 OFFCURVE",
"265 47 QCURVE SMOOTH",
"278 61 LINE",
"291 74 OFFCURVE",
"291 74 QCURVE SMOOTH",
"296 79 OFFCURVE",
"317 106 OFFCURVE",
"321 98 QCURVE SMOOTH",
"354 38 LINE SMOOTH",
"373 3 OFFCURVE",
"412 4 QCURVE",
"417 4 OFFCURVE",
"429 6 QCURVE",
"440 8 OFFCURVE",
"452 22 OFFCURVE",
"452 33 QCURVE",
"452 39 OFFCURVE",
"452 43 QCURVE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
12 1 1 0 76 57 2 5 4 33 25 2 3 5 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
12 1 1 0 76 57 2 5 6 33 25 2 3 5 3 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
0 1 0 4 0 1 4 128 0 0 0 32 77 6 1 4 4 33 77 0 5 5 3 97 0 3 3 40 77 0 2 2 40 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 1 0 4 0 1 4 128 0 0 0 32 77 0 4 4 33 77 0 6 6 33 77 0 5 5 3 97 0 3 3 40 77 0 2 2 40 2 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
38 43 41 41 41 26 39 7 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 500;
}
);
leftKerningGroup = u;
note = uacute;
rightKerningGroup = u;
unicode = 00FA;
},
{
glyphname = ucircumflex;
lastChange = "2019-06-19 01:07:56 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"164 432 OFFCURVE",
"172 432 QCURVE SMOOTH",
"212 432 OFFCURVE",
"242 458 QCURVE",
"245 461 OFFCURVE",
"264 478 OFFCURVE",
"291 496 OFFCURVE",
"311 501 QCURVE",
"334 452 OFFCURVE",
"345 432 QCURVE",
"363 395 OFFCURVE",
"380 375 QCURVE",
"389 361 OFFCURVE",
"410 361 QCURVE SMOOTH",
"425 361 OFFCURVE",
"435 368 QCURVE SMOOTH",
"450 378 OFFCURVE",
"450 394 QCURVE SMOOTH",
"450 402 OFFCURVE",
"447 409 QCURVE",
"435 445 LINE SMOOTH",
"431 456 OFFCURVE",
"405 535 OFFCURVE",
"390 567 QCURVE SMOOTH",
"377 593 OFFCURVE",
"334 621 OFFCURVE",
"309 621 QCURVE SMOOTH",
"269 621 OFFCURVE",
"239 589 QCURVE SMOOTH",
"211 558 OFFCURVE",
"161 513 OFFCURVE",
"133 497 QCURVE SMOOTH",
"116 487 OFFCURVE",
"116 469 QCURVE SMOOTH",
"116 454 OFFCURVE",
"134 436 OFFCURVE",
"148 434 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"448 106 OFFCURVE",
"448 192 QCURVE SMOOTH",
"448 208 OFFCURVE",
"450 238 QCURVE",
"451 241 OFFCURVE",
"451 248 QCURVE SMOOTH",
"451 255 OFFCURVE",
"450 258 QCURVE",
"448 274 OFFCURVE",
"429 298 OFFCURVE",
"414 301 QCURVE",
"402 304 OFFCURVE",
"389 304 QCURVE",
"374 303 LINE SMOOTH",
"363 302 OFFCURVE",
"349 289 OFFCURVE",
"348 278 QCURVE",
"344 248 OFFCURVE",
"343 233 QCURVE",
"340 204 LINE",
"331 143 OFFCURVE",
"282 101 QCURVE SMOOTH",
"250 75 OFFCURVE",
"224 75 QCURVE SMOOTH",
"205 75 OFFCURVE",
"178 107 OFFCURVE",
"171 138 QCURVE SMOOTH",
"165 169 OFFCURVE",
"165 232 QCURVE SMOOTH",
"165 281 OFFCURVE",
"140 321 QCURVE SMOOTH",
"133 332 OFFCURVE",
"111 344 OFFCURVE",
"99 344 QCURVE SMOOTH",
"95 344 OFFCURVE",
"87 342 QCURVE",
"70 337 OFFCURVE",
"50 312 OFFCURVE",
"50 293 QCURVE SMOOTH",
"50 276 OFFCURVE",
"51 268 QCURVE",
"51 226 OFFCURVE",
"54 205 QCURVE",
"60 149 OFFCURVE",
"75 101 QCURVE SMOOTH",
"87 64 OFFCURVE",
"141 15 OFFCURVE",
"179 4 QCURVE SMOOTH",
"208 -4 OFFCURVE",
"232 -4 QCURVE SMOOTH",
"267 -4 OFFCURVE",
"298 10 QCURVE SMOOTH",
"307 14 OFFCURVE",
"330 25 OFFCURVE",
"351 32 OFFCURVE",
"364 31 QCURVE",
"390 -6 LINE SMOOTH",
"404 -26 OFFCURVE",
"410 -32 QCURVE SMOOTH",
"427 -50 OFFCURVE",
"447 -50 QCURVE SMOOTH",
"458 -50 OFFCURVE",
"471 -42 QCURVE",
"485 -32 OFFCURVE",
"485 -19 QCURVE SMOOTH",
"485 -12 OFFCURVE",
"479 6 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
28 1 2 0 99 84 62 3 6 7 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 50 values pushed */
0 2 0 1 0 2 1 128 0 1 5 0 1 5 126 0 5 7 0 5 7 126 0 7 6 0 7 6 126 0 3 4 3 134 0 0 0 32 77 0 6 6 4 97 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 41 values pushed */
0 0 2 0 133 0 2 1 2 133 0 1 5 1 133 0 5 7 5 133 0 7 6 7 133 0 3 4 3 134 0 6 6 4 97 0 4 4 31 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 46 values pushed */
0 0 2 0 133 0 2 1 2 133 0 1 5 1 133 0 5 7 5 133 0 7 6 7 133 0 3 4 3 134 0 6 4 4 6 89 0 6 6 4 97 0 4 6 4 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
41 40 46 41 39 26 43 40 8 8 30 
CALL[ ]\011/* CallFunction */";
};
width = 535;
}
);
leftKerningGroup = u;
note = ucircumflex;
rightKerningGroup = u;
unicode = 00FB;
},
{
glyphname = udieresis;
lastChange = "2019-10-02 11:07:29 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"147 488 OFFCURVE",
"168 488 QCURVE SMOOTH",
"201 488 OFFCURVE",
"226 513 QCURVE",
"218 551 OFFCURVE",
"189 564 QCURVE SMOOTH",
"155 580 OFFCURVE",
"131 580 QCURVE SMOOTH",
"121 580 OFFCURVE",
"110 577 QCURVE SMOOTH",
"100 574 OFFCURVE",
"95 563 QCURVE",
"91 555 OFFCURVE",
"91 544 QCURVE SMOOTH",
"91 529 OFFCURVE",
"105 503 OFFCURVE",
"116 499 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"447 443 OFFCURVE",
"473 445 OFFCURVE",
"502 453 OFFCURVE",
"515 467 QCURVE",
"510 501 OFFCURVE",
"469 527 OFFCURVE",
"433 535 QCURVE SMOOTH",
"429 536 OFFCURVE",
"422 536 QCURVE SMOOTH",
"403 536 OFFCURVE",
"392 522 QCURVE",
"385 512 OFFCURVE",
"385 497 QCURVE SMOOTH",
"385 483 OFFCURVE",
"393 473 QCURVE",
"404 458 OFFCURVE",
"427 442 OFFCURVE",
"442 443 QCURVE"
);
},
{
closed = 1;
nodes = (
"427 320 OFFCURVE",
"406 320 QCURVE SMOOTH",
"392 320 OFFCURVE",
"377 314 QCURVE",
"368 311 OFFCURVE",
"359 298 OFFCURVE",
"353 277 OFFCURVE",
"351 272 QCURVE",
"331 227 OFFCURVE",
"306 186 QCURVE SMOOTH",
"282 147 OFFCURVE",
"227 119 QCURVE SMOOTH",
"213 112 OFFCURVE",
"200 112 QCURVE SMOOTH",
"184 112 OFFCURVE",
"164 133 OFFCURVE",
"163 152 QCURVE SMOOTH",
"161 187 OFFCURVE",
"169 263 OFFCURVE",
"170 271 QCURVE",
"171 284 OFFCURVE",
"175 317 QCURVE",
"177 328 OFFCURVE",
"179 346 QCURVE",
"171 352 OFFCURVE",
"140 374 OFFCURVE",
"127 380 QCURVE SMOOTH",
"113 387 OFFCURVE",
"99 387 QCURVE SMOOTH",
"80 387 OFFCURVE",
"56 360 OFFCURVE",
"55 337 QCURVE SMOOTH",
"50 210 LINE SMOOTH",
"48 149 OFFCURVE",
"72 102 QCURVE SMOOTH",
"109 26 OFFCURVE",
"206 26 QCURVE SMOOTH",
"270 26 OFFCURVE",
"327 63 QCURVE SMOOTH",
"336 69 OFFCURVE",
"363 81 OFFCURVE",
"369 84 QCURVE",
"378 65 OFFCURVE",
"394 35 QCURVE SMOOTH",
"401 22 OFFCURVE",
"423 -10 QCURVE",
"444 -6 OFFCURVE",
"451 -5 QCURVE",
"468 -1 OFFCURVE",
"474 0 QCURVE",
"473 90 LINE",
"473 150 OFFCURVE",
"471 272 QCURVE",
"470 281 OFFCURVE",
"457 304 OFFCURVE",
"449 308 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
12 1 1 2 30 1 3 1 66 1 7 5 37 1 6 7 48 1 4 6 5 76 44 40 2 4 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 49 values pushed */
0 2 0 1 0 2 1 128 8 1 3 1 5 1 3 5 128 0 7 5 6 5 7 6 128 0 0 0 1 3 0 1 105 0 5 5 33 77 0 6 6 4 98 0 4 4 34 4 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 50 values pushed */
0 2 0 1 0 2 1 128 8 1 3 1 5 1 3 5 128 0 5 7 1 5 7 126 0 7 6 1 7 6 126 0 0 0 1 3 0 1 105 0 6 6 4 98 0 4 4 34 4 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 20 values pushed */
17 17 89 87 77 75 62 60 54 52 17 34 17 33 25 36 39 9 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 550;
}
);
leftKerningGroup = u;
note = udieresis;
rightKerningGroup = u;
unicode = 00FC;
},
{
glyphname = yacute;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"293 293 OFFCURVE",
"366 373 QCURVE",
"381 388 OFFCURVE",
"381 411 QCURVE SMOOTH",
"381 425 OFFCURVE",
"375 443 QCURVE",
"336 428 OFFCURVE",
"322 422 QCURVE",
"287 404 LINE SMOOTH",
"253 385 OFFCURVE",
"203 365 OFFCURVE",
"173 365 QCURVE",
"163 364 OFFCURVE",
"152 347 OFFCURVE",
"152 335 QCURVE SMOOTH",
"152 312 OFFCURVE",
"181 286 OFFCURVE",
"204 288 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"382 255 OFFCURVE",
"365 258 QCURVE SMOOTH",
"351 260 OFFCURVE",
"347 260 QCURVE SMOOTH",
"304 260 OFFCURVE",
"309 208 QCURVE",
"309 204 OFFCURVE",
"311 195 OFFCURVE",
"311 191 QCURVE SMOOTH",
"311 188 LINE SMOOTH",
"310 149 OFFCURVE",
"304 95 OFFCURVE",
"294 66 QCURVE",
"287 72 OFFCURVE",
"274 83 OFFCURVE",
"271 86 QCURVE",
"238 129 LINE SMOOTH",
"216 157 OFFCURVE",
"204 171 QCURVE SMOOTH",
"170 213 OFFCURVE",
"152 232 QCURVE SMOOTH",
"125 260 OFFCURVE",
"89 260 QCURVE SMOOTH",
"78 260 OFFCURVE",
"72 259 QCURVE",
"63 258 OFFCURVE",
"50 243 OFFCURVE",
"50 235 QCURVE SMOOTH",
"50 229 OFFCURVE",
"53 224 QCURVE",
"61 209 OFFCURVE",
"72 197 QCURVE SMOOTH",
"80 188 OFFCURVE",
"94 170 QCURVE",
"152 102 OFFCURVE",
"163 90 QCURVE SMOOTH",
"179 72 OFFCURVE",
"186 63 QCURVE",
"215 29 OFFCURVE",
"258 -8 OFFCURVE",
"289 -15 QCURVE",
"279 -70 OFFCURVE",
"248 -150 OFFCURVE",
"219 -184 QCURVE",
"210 -182 OFFCURVE",
"177 -174 OFFCURVE",
"166 -173 QCURVE",
"161 -172 OFFCURVE",
"149 -176 OFFCURVE",
"148 -179 QCURVE SMOOTH",
"147 -182 OFFCURVE",
"147 -187 QCURVE",
"148 -204 LINE",
"152 -210 LINE",
"168 -228 OFFCURVE",
"211 -246 OFFCURVE",
"234 -246 QCURVE SMOOTH",
"259 -246 OFFCURVE",
"302 -226 OFFCURVE",
"317 -206 QCURVE SMOOTH",
"360 -149 OFFCURVE",
"374 -78 QCURVE SMOOTH",
"424 199 LINE",
"425 203 OFFCURVE",
"425 211 QCURVE SMOOTH",
"425 222 OFFCURVE",
"415 237 OFFCURVE",
"403 243 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
75 72 57 44 41 33 32 20 8 2 3 1 76 11 1 0 74 0 0 1 0 133 0 1 3 1 133 4 1 3 2 3 133 0 2 2 118 81 80 63 60 42 26 21 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 475;
}
);
note = yacute;
unicode = 00FD;
},
{
glyphname = thorn;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"422 281 LINE SMOOTH",
"419 327 OFFCURVE",
"399 375 OFFCURVE",
"370 401 QCURVE SMOOTH",
"335 431 OFFCURVE",
"274 460 OFFCURVE",
"240 460 QCURVE SMOOTH",
"226 460 OFFCURVE",
"219 459 QCURVE",
"194 453 LINE SMOOTH",
"170 447 OFFCURVE",
"164 447 QCURVE SMOOTH",
"149 447 OFFCURVE",
"144 462 QCURVE",
"143 500 OFFCURVE",
"143 558 QCURVE SMOOTH",
"143 570 OFFCURVE",
"145 590 OFFCURVE",
"145 598 QCURVE SMOOTH",
"145 610 OFFCURVE",
"135 622 OFFCURVE",
"120 623 QCURVE",
"93 623 OFFCURVE",
"54 585 OFFCURVE",
"54 559 QCURVE SMOOTH",
"54 521 OFFCURVE",
"52 413 OFFCURVE",
"51 390 QCURVE",
"51 275 LINE",
"51 190 LINE SMOOTH",
"51 177 OFFCURVE",
"52 171 QCURVE",
"51 150 OFFCURVE",
"51 107 QCURVE SMOOTH",
"52 -43 LINE SMOOTH",
"52 -56 OFFCURVE",
"50 -76 OFFCURVE",
"50 -84 QCURVE SMOOTH",
"50 -96 OFFCURVE",
"60 -107 OFFCURVE",
"75 -108 QCURVE",
"102 -108 OFFCURVE",
"141 -70 OFFCURVE",
"141 -44 QCURVE SMOOTH",
"143 104 LINE",
"182 94 OFFCURVE",
"225 94 QCURVE SMOOTH",
"249 94 OFFCURVE",
"263 95 QCURVE",
"270 96 OFFCURVE",
"286 100 QCURVE SMOOTH",
"302 104 OFFCURVE",
"309 104 QCURVE",
"355 109 OFFCURVE",
"423 191 OFFCURVE",
"423 262 QCURVE"
);
},
{
closed = 1;
nodes = (
"140 504 OFFCURVE",
"141 508 QCURVE",
"142 508 OFFCURVE",
"142 477 OFFCURVE",
"143 465 QCURVE",
"140 477 OFFCURVE",
"140 494 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"315 214 OFFCURVE",
"268 192 OFFCURVE",
"241 192 QCURVE SMOOTH",
"222 192 OFFCURVE",
"186 203 OFFCURVE",
"175 213 QCURVE",
"170 218 OFFCURVE",
"164 263 OFFCURVE",
"163 286 QCURVE",
"160 320 LINE",
"161 320 OFFCURVE",
"158 337 OFFCURVE",
"158 344 QCURVE SMOOTH",
"158 350 OFFCURVE",
"159 354 QCURVE",
"161 368 OFFCURVE",
"217 391 OFFCURVE",
"240 391 QCURVE SMOOTH",
"249 391 OFFCURVE",
"252 390 QCURVE",
"296 372 OFFCURVE",
"343 318 OFFCURVE",
"343 287 QCURVE SMOOTH",
"343 261 OFFCURVE",
"328 235 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
62 57 41 36 4 4 2 10 1 0 6 17 1 1 0 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
36 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
0 3 4 5 4 3 5 128 0 1 0 1 134 0 4 0 5 6 4 5 105 0 6 0 0 1 6 0 105 0 2 2 32 2 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 42 values pushed */
0 2 4 2 133 0 3 4 5 4 3 5 128 0 1 0 1 134 0 4 0 5 6 4 5 105 0 6 0 0 6 89 0 6 6 0 97 0 0 6 0 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
85 83 70 69 49 46 43 42 34 32 36 39 7 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 473;
}
);
note = thorn;
unicode = 00FE;
},
{
glyphname = ydieresis;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"388 329 OFFCURVE",
"402 352 QCURVE",
"407 362 OFFCURVE",
"407 369 QCURVE SMOOTH",
"407 382 OFFCURVE",
"389 401 OFFCURVE",
"374 401 QCURVE SMOOTH",
"353 401 OFFCURVE",
"323 383 OFFCURVE",
"299 356 QCURVE",
"317 329 OFFCURVE",
"356 329 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 295 OFFCURVE",
"119 289 OFFCURVE",
"122 288 QCURVE",
"157 288 OFFCURVE",
"184 304 OFFCURVE",
"192 326 QCURVE SMOOTH",
"194 332 OFFCURVE",
"194 336 QCURVE SMOOTH",
"194 353 OFFCURVE",
"177 361 QCURVE SMOOTH",
"165 367 OFFCURVE",
"149 367 QCURVE SMOOTH",
"127 367 OFFCURVE",
"88 344 OFFCURVE",
"81 325 QCURVE SMOOTH",
"79 320 OFFCURVE",
"84 304 OFFCURVE",
"88 301 QCURVE"
);
},
{
closed = 1;
nodes = (
"386 267 OFFCURVE",
"365 267 QCURVE SMOOTH",
"349 267 OFFCURVE",
"326 248 OFFCURVE",
"325 232 QCURVE",
"324 193 OFFCURVE",
"296 101 OFFCURVE",
"274 69 QCURVE",
"268 75 OFFCURVE",
"255 85 OFFCURVE",
"250 91 QCURVE SMOOTH",
"228 116 LINE SMOOTH",
"177 173 OFFCURVE",
"171 184 QCURVE SMOOTH",
"160 204 OFFCURVE",
"130 241 OFFCURVE",
"113 247 QCURVE",
"105 249 OFFCURVE",
"101 249 QCURVE SMOOTH",
"87 249 OFFCURVE",
"61 230 OFFCURVE",
"55 219 QCURVE",
"50 209 OFFCURVE",
"50 201 QCURVE SMOOTH",
"50 187 OFFCURVE",
"66 167 QCURVE",
"68 166 OFFCURVE",
"70 162 QCURVE",
"81 150 OFFCURVE",
"101 126 QCURVE SMOOTH",
"133 88 OFFCURVE",
"179 41 OFFCURVE",
"208 22 QCURVE SMOOTH",
"234 6 OFFCURVE",
"234 -21 QCURVE SMOOTH",
"234 -35 OFFCURVE",
"228 -50 QCURVE SMOOTH",
"206 -108 OFFCURVE",
"193 -153 QCURVE SMOOTH",
"179 -196 OFFCURVE",
"175 -227 QCURVE SMOOTH",
"172 -247 OFFCURVE",
"205 -277 OFFCURVE",
"229 -277 QCURVE SMOOTH",
"244 -277 OFFCURVE",
"263 -263 OFFCURVE",
"267 -244 QCURVE",
"284 -177 OFFCURVE",
"305 -129 QCURVE SMOOTH",
"322 -91 OFFCURVE",
"358 -17 QCURVE SMOOTH",
"372 10 OFFCURVE",
"398 66 QCURVE SMOOTH",
"423 117 OFFCURVE",
"440 166 QCURVE SMOOTH",
"445 181 OFFCURVE",
"445 190 QCURVE SMOOTH",
"445 206 OFFCURVE",
"428 228 OFFCURVE",
"405 250 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 75 values pushed */
7 1 2 0 21 1 2 1 2 81 65 2 4 5 3 76 0 6 3 5 3 6 5 128 0 5 4 3 5 4 126 0 4 4 132 0 2 0 3 6 2 3 105 7 1 1 1 0 97 0 0 0 33 1 78 0 0 88 86 70 69 46 44 26 25 18 16 0 11 0 10 35 8 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 496;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = dotlessi;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"270 387 OFFCURVE",
"238 413 OFFCURVE",
"218 413 QCURVE SMOOTH",
"206 413 OFFCURVE",
"191 408 QCURVE SMOOTH",
"159 397 OFFCURVE",
"120 369 OFFCURVE",
"83 333 QCURVE",
"75 324 OFFCURVE",
"50 301 QCURVE",
"53 301 OFFCURVE",
"118 292 QCURVE",
"137 288 OFFCURVE",
"165 285 QCURVE",
"163 125 OFFCURVE",
"163 57 QCURVE SMOOTH",
"163 19 OFFCURVE",
"166 0 QCURVE SMOOTH",
"169 -19 OFFCURVE",
"197 -41 OFFCURVE",
"219 -43 QCURVE SMOOTH",
"238 -45 OFFCURVE",
"269 -21 OFFCURVE",
"270 -1 QCURVE",
"282 132 OFFCURVE",
"292 292 QCURVE SMOOTH",
"293 320 OFFCURVE",
"278 364 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 5 values pushed */
13 3 2 0 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
0 0 0 33 0 78 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 4 values pushed */
0 0 0 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
25 23 1 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 342;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = OE;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"1029 97 OFFCURVE",
"990 103 OFFCURVE",
"963 103 QCURVE SMOOTH",
"800 103 OFFCURVE",
"718 106 QCURVE SMOOTH",
"636 108 OFFCURVE",
"573 142 QCURVE",
"577 155 OFFCURVE",
"581 175 OFFCURVE",
"582 181 QCURVE",
"590 216 OFFCURVE",
"603 256 OFFCURVE",
"615 275 QCURVE",
"620 276 OFFCURVE",
"637 280 OFFCURVE",
"643 280 QCURVE",
"717 277 OFFCURVE",
"864 298 OFFCURVE",
"971 320 QCURVE SMOOTH",
"1016 330 OFFCURVE",
"1023 365 QCURVE",
"1009 386 OFFCURVE",
"973 401 OFFCURVE",
"950 401 QCURVE SMOOTH",
"929 401 OFFCURVE",
"875 397 OFFCURVE",
"864 396 QCURVE",
"851 394 OFFCURVE",
"821 392 QCURVE SMOOTH",
"801 390 OFFCURVE",
"791 388 QCURVE",
"782 387 OFFCURVE",
"742 383 OFFCURVE",
"726 383 QCURVE SMOOTH",
"676 383 OFFCURVE",
"632 396 OFFCURVE",
"610 438 OFFCURVE",
"600 489 QCURVE",
"600 491 OFFCURVE",
"606 502 OFFCURVE",
"609 507 QCURVE",
"630 511 OFFCURVE",
"657 511 QCURVE SMOOTH",
"673 511 OFFCURVE",
"705 509 QCURVE",
"725 507 OFFCURVE",
"737 507 QCURVE",
"864 499 OFFCURVE",
"990 495 QCURVE",
"1002 494 LINE",
"1011 494 OFFCURVE",
"1015 497 QCURVE",
"1038 513 OFFCURVE",
"1044 526 QCURVE",
"1051 544 OFFCURVE",
"1024 560 QCURVE",
"1002 572 OFFCURVE",
"954 581 OFFCURVE",
"921 584 QCURVE SMOOTH",
"888 587 LINE",
"828 595 OFFCURVE",
"798 598 QCURVE SMOOTH",
"774 601 OFFCURVE",
"680 614 OFFCURVE",
"646 619 QCURVE SMOOTH",
"639 620 OFFCURVE",
"606 624 OFFCURVE",
"594 624 QCURVE SMOOTH",
"552 624 OFFCURVE",
"517 600 QCURVE",
"511 603 OFFCURVE",
"489 617 QCURVE",
"464 631 LINE",
"368 675 OFFCURVE",
"290 675 QCURVE SMOOTH",
"256 675 OFFCURVE",
"218 666 QCURVE SMOOTH",
"145 648 OFFCURVE",
"64 560 OFFCURVE",
"55 487 QCURVE SMOOTH",
"50 442 OFFCURVE",
"50 407 QCURVE SMOOTH",
"50 291 OFFCURVE",
"91 177 QCURVE SMOOTH",
"119 98 OFFCURVE",
"249 6 OFFCURVE",
"328 6 QCURVE SMOOTH",
"390 6 OFFCURVE",
"447 35 QCURVE SMOOTH",
"462 43 OFFCURVE",
"484 55 OFFCURVE",
"491 59 QCURVE",
"525 36 OFFCURVE",
"552 22 OFFCURVE",
"583 17 OFFCURVE",
"621 15 QCURVE SMOOTH",
"639 14 OFFCURVE",
"674 14 QCURVE SMOOTH",
"709 14 OFFCURVE",
"726 12 QCURVE SMOOTH",
"774 7 OFFCURVE",
"812 7 QCURVE SMOOTH",
"867 7 OFFCURVE",
"975 17 QCURVE",
"988 19 OFFCURVE",
"1014 21 QCURVE SMOOTH",
"1035 23 OFFCURVE",
"1046 31 QCURVE SMOOTH",
"1064 45 OFFCURVE",
"1064 59 QCURVE SMOOTH",
"1064 66 OFFCURVE",
"1053 82 OFFCURVE",
"1047 86 QCURVE"
);
},
{
closed = 1;
nodes = (
"398 117 OFFCURVE",
"357 105 QCURVE SMOOTH",
"335 98 OFFCURVE",
"313 98 QCURVE SMOOTH",
"285 98 OFFCURVE",
"242 127 OFFCURVE",
"224 157 QCURVE SMOOTH",
"215 172 OFFCURVE",
"197 221 QCURVE SMOOTH",
"173 289 OFFCURVE",
"173 365 QCURVE SMOOTH",
"173 419 OFFCURVE",
"184 479 QCURVE SMOOTH",
"187 495 OFFCURVE",
"191 504 QCURVE",
"224 595 OFFCURVE",
"292 595 QCURVE SMOOTH",
"328 595 OFFCURVE",
"368 572 QCURVE SMOOTH",
"427 539 OFFCURVE",
"494 443 OFFCURVE",
"496 387 QCURVE",
"493 317 OFFCURVE",
"458 207 OFFCURVE",
"425 156 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
42 1 12 4 91 1 10 7 105 1 11 10 20 1 0 11 4 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
42 1 12 4 91 1 10 7 105 1 11 10 20 1 1 11 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 18 values pushed */
42 1 12 4 91 1 10 7 105 1 11 10 20 1 1 13 4 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 60 values pushed */
0 6 12 5 12 6 5 128 0 5 8 12 5 8 126 0 4 4 32 77 0 12 12 3 97 0 3 3 30 77 9 1 8 8 33 77 0 10 10 7 97 0 7 7 33 77 13 1 11 11 0 97 2 1 2 0 0 40 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 58 values pushed */
0 6 12 5 12 6 5 128 0 5 8 12 5 8 126 0 3 0 12 6 3 12 105 0 4 4 32 77 9 1 8 8 33 77 0 10 10 7 97 0 7 7 33 77 13 1 11 11 0 97 2 1 2 0 0 40 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 70 values pushed */
0 6 12 5 12 6 5 128 0 5 9 12 5 9 126 0 3 0 12 6 3 12 105 0 7 0 10 11 7 10 105 0 4 4 32 77 0 9 9 33 77 0 8 8 33 77 13 1 11 11 1 97 0 1 1 34 77 13 1 11 11 0 97 2 1 0 0 40 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
41 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 68 values pushed */
0 6 12 5 12 6 5 128 0 5 9 12 5 9 126 0 3 0 12 6 3 12 105 0 7 0 10 11 7 10 105 0 4 4 32 77 0 9 9 33 77 0 8 8 33 77 0 11 11 1 97 0 1 1 34 77 0 13 13 0 97 2 1 0 0 40 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 71 values pushed */
0 4 3 12 3 4 12 128 0 6 12 5 12 6 5 128 0 5 9 12 5 9 126 0 3 0 12 6 3 12 105 0 7 0 10 11 7 10 105 0 9 9 33 77 0 8 8 33 77 0 11 11 1 97 0 1 1 34 77 0 13 13 0 97 2 1 0 0 40 0 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 26 values pushed */
134 132 121 119 110 106 96 95 89 87 84 83 79 77 70 67 66 63 37 42 39 66 41 14 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 1114;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = oe;
lastChange = "2019-11-20 00:16:06 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"659 317 OFFCURVE",
"622 357 OFFCURVE",
"566 395 OFFCURVE",
"531 404 QCURVE SMOOTH",
"511 409 OFFCURVE",
"500 409 QCURVE SMOOTH",
"488 409 OFFCURVE",
"463 400 OFFCURVE",
"444 389 QCURVE",
"431 378 OFFCURVE",
"415 370 QCURVE",
"372 345 OFFCURVE",
"356 300 QCURVE",
"335 323 OFFCURVE",
"310 340 QCURVE SMOOTH",
"277 363 OFFCURVE",
"208 382 OFFCURVE",
"167 380 QCURVE SMOOTH",
"142 378 OFFCURVE",
"87 344 OFFCURVE",
"50 290 OFFCURVE",
"50 260 QCURVE SMOOTH",
"50 251 OFFCURVE",
"51 247 QCURVE SMOOTH",
"53 240 OFFCURVE",
"62 199 QCURVE",
"68 164 OFFCURVE",
"75 140 QCURVE SMOOTH",
"89 88 OFFCURVE",
"170 43 OFFCURVE",
"234 33 QCURVE SMOOTH",
"250 31 OFFCURVE",
"256 31 QCURVE SMOOTH",
"319 31 OFFCURVE",
"355 93 QCURVE",
"360 103 LINE",
"383 44 OFFCURVE",
"463 -17 OFFCURVE",
"525 -17 QCURVE SMOOTH",
"545 -17 OFFCURVE",
"567 -14 QCURVE",
"578 -12 OFFCURVE",
"607 13 OFFCURVE",
"606 22 QCURVE",
"605 36 OFFCURVE",
"587 49 OFFCURVE",
"573 49 QCURVE SMOOTH",
"565 49 OFFCURVE",
"554 46 QCURVE SMOOTH",
"547 44 OFFCURVE",
"535 42 QCURVE",
"509 40 OFFCURVE",
"461 77 OFFCURVE",
"454 104 QCURVE SMOOTH",
"450 119 OFFCURVE",
"450 134 QCURVE SMOOTH",
"450 153 OFFCURVE",
"494 171 QCURVE",
"512 177 OFFCURVE",
"551 182 QCURVE SMOOTH",
"596 188 LINE SMOOTH",
"646 195 OFFCURVE",
"671 199 QCURVE",
"709 208 OFFCURVE",
"709 246 QCURVE SMOOTH",
"709 260 OFFCURVE",
"694 276 QCURVE"
);
},
{
closed = 1;
nodes = (
"594 272 LINE",
"443 261 LINE",
"442 263 OFFCURVE",
"455 285 OFFCURVE",
"459 288 QCURVE",
"470 306 OFFCURVE",
"492 323 OFFCURVE",
"517 325 QCURVE SMOOTH",
"531 326 OFFCURVE",
"558 314 OFFCURVE",
"581 295 OFFCURVE",
"584 293 QCURVE"
);
},
{
closed = 1;
nodes = (
"185 101 OFFCURVE",
"175 220 OFFCURVE",
"175 237 QCURVE SMOOTH",
"175 256 OFFCURVE",
"170 281 QCURVE",
"166 306 OFFCURVE",
"175 325 QCURVE",
"192 333 OFFCURVE",
"210 333 QCURVE SMOOTH",
"230 333 OFFCURVE",
"259 311 OFFCURVE",
"274 291 QCURVE",
"292 269 OFFCURVE",
"292 231 QCURVE SMOOTH",
"292 197 OFFCURVE",
"259 125 OFFCURVE",
"225 94 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
89 54 2 5 6 100 45 31 3 0 5 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
26 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 0 5 2 5 0 2 128 0 4 4 33 77 0 6 6 3 97 0 3 3 33 77 0 2 2 34 77 0 5 5 1 98 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 0 5 2 5 0 2 128 0 3 0 6 5 3 6 105 0 4 4 33 77 0 2 2 34 77 0 5 5 1 98 0 1 1 31 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 0 5 2 5 0 2 128 0 2 1 5 2 1 126 0 3 0 6 5 3 6 105 0 4 4 33 77 0 5 5 1 98 0 1 1 31 1 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 17 values pushed */
88 86 79 77 62 60 50 49 34 33 29 27 21 19 7 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 759;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = florin;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"478 334 OFFCURVE",
"445 343 QCURVE SMOOTH",
"430 347 OFFCURVE",
"400 347 QCURVE SMOOTH",
"370 347 OFFCURVE",
"355 346 QCURVE",
"310 345 LINE",
"301 346 OFFCURVE",
"275 354 OFFCURVE",
"268 356 QCURVE",
"271 458 OFFCURVE",
"317 578 QCURVE SMOOTH",
"325 599 OFFCURVE",
"347 625 OFFCURVE",
"364 629 QCURVE",
"373 627 OFFCURVE",
"415 616 OFFCURVE",
"432 614 QCURVE",
"443 612 OFFCURVE",
"458 636 OFFCURVE",
"454 646 QCURVE",
"444 668 OFFCURVE",
"434 676 QCURVE SMOOTH",
"418 689 OFFCURVE",
"376 715 OFFCURVE",
"369 720 QCURVE",
"360 718 OFFCURVE",
"347 713 OFFCURVE",
"342 712 QCURVE SMOOTH",
"247 692 OFFCURVE",
"215 589 QCURVE SMOOTH",
"209 571 OFFCURVE",
"207 562 QCURVE",
"193 517 OFFCURVE",
"178 460 OFFCURVE",
"176 429 QCURVE SMOOTH",
"174 402 OFFCURVE",
"166 365 OFFCURVE",
"153 348 QCURVE",
"131 346 LINE",
"107 346 OFFCURVE",
"87 342 QCURVE",
"73 340 OFFCURVE",
"50 313 OFFCURVE",
"50 299 QCURVE SMOOTH",
"50 277 OFFCURVE",
"74 264 QCURVE SMOOTH",
"92 254 OFFCURVE",
"122 245 QCURVE SMOOTH",
"146 238 OFFCURVE",
"165 228 OFFCURVE",
"173 208 OFFCURVE",
"175 185 QCURVE SMOOTH",
"177 161 OFFCURVE",
"177 148 QCURVE",
"186 22 OFFCURVE",
"186 -63 QCURVE SMOOTH",
"186 -159 OFFCURVE",
"118 -251 QCURVE",
"58 -251 LINE",
"70 -314 OFFCURVE",
"126 -327 QCURVE",
"135 -330 OFFCURVE",
"144 -330 QCURVE SMOOTH",
"163 -330 OFFCURVE",
"193 -309 OFFCURVE",
"209 -291 QCURVE SMOOTH",
"270 -221 OFFCURVE",
"278 -111 QCURVE SMOOTH",
"281 -72 OFFCURVE",
"281 -34 QCURVE SMOOTH",
"281 44 OFFCURVE",
"270 129 QCURVE SMOOTH",
"264 169 OFFCURVE",
"264 189 QCURVE SMOOTH",
"264 215 OFFCURVE",
"271 243 QCURVE",
"313 249 LINE SMOOTH",
"370 257 OFFCURVE",
"393 260 QCURVE SMOOTH",
"402 261 OFFCURVE",
"434 263 OFFCURVE",
"445 266 QCURVE",
"465 270 OFFCURVE",
"487 292 OFFCURVE",
"485 303 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
30 1 2 0 1 76 75 70 59 49 4 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
39 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 2 0 1 0 2 1 128 4 1 3 0 0 2 3 0 105 0 1 1 35 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 30 values pushed */
0 2 0 1 0 2 1 128 0 1 1 132 4 1 3 0 0 3 89 4 1 3 3 0 97 0 0 3 0 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
82 78 45 44 26 25 22 20 19 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 535;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = circumflex;
lastChange = "2019-08-24 02:15:59 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"295 733 OFFCURVE",
"298 727 OFFCURVE",
"309 712 QCURVE SMOOTH",
"352 655 OFFCURVE",
"432 575 QCURVE SMOOTH",
"437 570 OFFCURVE",
"453 564 OFFCURVE",
"461 564 QCURVE SMOOTH",
"476 564 OFFCURVE",
"481 571 QCURVE",
"486 577 OFFCURVE",
"486 583 QCURVE SMOOTH",
"486 590 OFFCURVE",
"472 604 OFFCURVE",
"470 607 QCURVE",
"434 649 OFFCURVE",
"389 708 QCURVE SMOOTH",
"376 725 OFFCURVE",
"352 760 QCURVE SMOOTH",
"322 803 OFFCURVE",
"314 812 QCURVE SMOOTH",
"301 827 OFFCURVE",
"281 827 QCURVE SMOOTH",
"271 827 OFFCURVE",
"252 820 OFFCURVE",
"246 812 QCURVE SMOOTH",
"238 801 OFFCURVE",
"218 780 QCURVE SMOOTH",
"197 757 OFFCURVE",
"182 736 QCURVE SMOOTH",
"136 674 OFFCURVE",
"105 625 QCURVE SMOOTH",
"100 617 OFFCURVE",
"100 608 QCURVE SMOOTH",
"100 596 OFFCURVE",
"120 583 OFFCURVE",
"139 583 QCURVE SMOOTH",
"147 583 OFFCURVE",
"157 595 OFFCURVE",
"174 612 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 02C6;
},
{
glyphname = caron;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"328 692 OFFCURVE",
"306 692 QCURVE",
"268 689 OFFCURVE",
"241 662 QCURVE SMOOTH",
"221 641 OFFCURVE",
"173 595 QCURVE",
"155 613 OFFCURVE",
"150 619 QCURVE",
"130 641 LINE",
"111 658 OFFCURVE",
"90 658 QCURVE SMOOTH",
"72 658 OFFCURVE",
"50 642 OFFCURVE",
"50 629 QCURVE SMOOTH",
"50 626 OFFCURVE",
"52 618 QCURVE",
"64 587 OFFCURVE",
"86 540 QCURVE",
"99 515 OFFCURVE",
"136 488 OFFCURVE",
"157 488 QCURVE SMOOTH",
"186 488 OFFCURVE",
"212 510 QCURVE SMOOTH",
"275 562 OFFCURVE",
"351 630 QCURVE SMOOTH",
"363 641 OFFCURVE",
"363 655 QCURVE SMOOTH",
"363 672 OFFCURVE",
"347 681 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 26 values pushed */
22 1 0 1 1 76 0 2 1 2 133 0 1 0 1 133 0 0 0 118 24 40 38 3 8 25 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 413;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = breve;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"334 806 OFFCURVE",
"315 788 OFFCURVE",
"310 778 QCURVE",
"301 762 OFFCURVE",
"277 732 QCURVE SMOOTH",
"262 714 LINE",
"260 710 OFFCURVE",
"242 695 OFFCURVE",
"239 691 QCURVE",
"219 711 LINE SMOOTH",
"181 749 OFFCURVE",
"168 759 QCURVE",
"143 784 OFFCURVE",
"117 802 OFFCURVE",
"97 802 QCURVE SMOOTH",
"86 802 OFFCURVE",
"55 795 OFFCURVE",
"51 788 QCURVE",
"48 782 OFFCURVE",
"59 758 OFFCURVE",
"61 754 QCURVE",
"63 749 OFFCURVE",
"74 734 OFFCURVE",
"77 728 QCURVE",
"83 717 OFFCURVE",
"160 646 OFFCURVE",
"240 582 OFFCURVE",
"250 580 QCURVE",
"291 578 OFFCURVE",
"301 606 QCURVE SMOOTH",
"310 632 OFFCURVE",
"342 682 QCURVE",
"345 688 OFFCURVE",
"378 741 OFFCURVE",
"386 766 QCURVE",
"388 776 OFFCURVE",
"388 780 QCURVE SMOOTH",
"388 794 OFFCURVE",
"371 811 OFFCURVE",
"357 811 QCURVE SMOOTH",
"353 811 OFFCURVE",
"345 809 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 27 values pushed */
32 4 2 1 2 1 76 0 0 2 0 133 0 2 1 2 133 0 1 1 118 44 26 32 3 8 25 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 438;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = ogonek;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"192 -164 OFFCURVE",
"184 -164 QCURVE",
"179 -163 OFFCURVE",
"163 -163 OFFCURVE",
"158 -162 QCURVE",
"137 -159 OFFCURVE",
"114 -137 OFFCURVE",
"114 -120 QCURVE SMOOTH",
"114 -105 OFFCURVE",
"119 -94 QCURVE SMOOTH",
"130 -70 OFFCURVE",
"146 -49 QCURVE",
"151 -43 OFFCURVE",
"163 -35 QCURVE",
"173 -29 OFFCURVE",
"186 -16 OFFCURVE",
"189 -4 QCURVE SMOOTH",
"194 15 OFFCURVE",
"165 15 QCURVE SMOOTH",
"152 15 OFFCURVE",
"123 7 OFFCURVE",
"115 3 QCURVE",
"95 -8 OFFCURVE",
"62 -65 QCURVE",
"52 -92 OFFCURVE",
"51 -116 QCURVE",
"50 -129 LINE",
"50 -167 OFFCURVE",
"96 -216 OFFCURVE",
"136 -220 QCURVE SMOOTH",
"151 -221 OFFCURVE",
"192 -214 QCURVE SMOOTH",
"198 -213 OFFCURVE",
"209 -204 OFFCURVE",
"210 -203 QCURVE",
"217 -197 OFFCURVE",
"217 -188 QCURVE SMOOTH",
"217 -175 OFFCURVE",
"204 -168 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 27 values pushed */
12 11 2 2 1 1 76 0 1 2 1 133 0 2 0 2 133 0 0 0 118 45 42 23 3 8 25 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 267;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"256 716 OFFCURVE",
"256 720 QCURVE SMOOTH",
"256 730 OFFCURVE",
"244 745 OFFCURVE",
"235 747 QCURVE",
"232 748 OFFCURVE",
"226 748 QCURVE SMOOTH",
"206 748 OFFCURVE",
"165 722 OFFCURVE",
"153 700 QCURVE SMOOTH",
"101 600 OFFCURVE",
"62 510 QCURVE SMOOTH",
"50 484 OFFCURVE",
"50 463 QCURVE SMOOTH",
"50 443 OFFCURVE",
"61 431 QCURVE",
"103 452 OFFCURVE",
"120 473 QCURVE SMOOTH",
"193 562 OFFCURVE",
"252 676 OFFCURVE",
"252 704 QCURVE"
);
},
{
closed = 1;
nodes = (
"357 735 OFFCURVE",
"351 735 QCURVE SMOOTH",
"319 735 OFFCURVE",
"300 700 QCURVE SMOOTH",
"250 606 OFFCURVE",
"208 510 QCURVE",
"207 508 OFFCURVE",
"197 483 OFFCURVE",
"197 473 QCURVE SMOOTH",
"197 460 OFFCURVE",
"208 446 QCURVE",
"218 452 OFFCURVE",
"237 458 QCURVE",
"248 460 OFFCURVE",
"256 470 OFFCURVE",
"267 482 QCURVE",
"308 530 OFFCURVE",
"351 598 OFFCURVE",
"369 634 QCURVE SMOOTH",
"375 646 OFFCURVE",
"391 683 QCURVE",
"399 704 LINE",
"401 710 OFFCURVE",
"401 713 QCURVE SMOOTH",
"401 722 OFFCURVE",
"385 730 OFFCURVE",
"369 733 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 22 values pushed */
36 23 20 18 4 1 73 0 0 1 0 133 0 1 1 118 45 44 28 2 8 23 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 451;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = uni03A9;
lastChange = "2019-07-27 07:25:57 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"1028 114 OFFCURVE",
"997 123 OFFCURVE",
"977 123 QCURVE SMOOTH",
"943 123 OFFCURVE",
"872 132 OFFCURVE",
"818 137 QCURVE SMOOTH",
"777 141 LINE",
"788 165 LINE SMOOTH",
"797 185 OFFCURVE",
"802 192 QCURVE",
"813 211 OFFCURVE",
"837 251 QCURVE SMOOTH",
"881 324 OFFCURVE",
"890 343 QCURVE SMOOTH",
"915 395 OFFCURVE",
"917 438 QCURVE SMOOTH",
"920 505 OFFCURVE",
"858 564 QCURVE",
"849 572 OFFCURVE",
"828 588 QCURVE",
"739 664 OFFCURVE",
"648 650 QCURVE SMOOTH",
"538 633 LINE",
"455 614 OFFCURVE",
"364 515 QCURVE SMOOTH",
"319 466 OFFCURVE",
"280 388 OFFCURVE",
"282 352 QCURVE SMOOTH",
"273 274 OFFCURVE",
"351 165 QCURVE",
"399 126 LINE",
"379 119 LINE",
"313 108 OFFCURVE",
"237 104 QCURVE SMOOTH",
"216 103 OFFCURVE",
"186 98 OFFCURVE",
"172 89 QCURVE",
"161 80 OFFCURVE",
"161 67 QCURVE SMOOTH",
"161 58 OFFCURVE",
"168 49 QCURVE",
"192 21 OFFCURVE",
"234 21 QCURVE SMOOTH",
"245 21 OFFCURVE",
"250 22 QCURVE",
"529 53 LINE",
"547 54 OFFCURVE",
"560 58 QCURVE SMOOTH",
"579 64 OFFCURVE",
"600 86 OFFCURVE",
"599 98 QCURVE SMOOTH",
"598 115 OFFCURVE",
"574 131 OFFCURVE",
"557 138 QCURVE",
"545 141 OFFCURVE",
"540 141 QCURVE",
"535 140 LINE",
"525 138 OFFCURVE",
"512 138 QCURVE SMOOTH",
"491 138 OFFCURVE",
"464 166 OFFCURVE",
"447 189 QCURVE SMOOTH",
"418 229 OFFCURVE",
"384 327 OFFCURVE",
"386 383 OFFCURVE",
"448 508 OFFCURVE",
"618 572 QCURVE SMOOTH",
"658 587 OFFCURVE",
"773 546 OFFCURVE",
"818 479 OFFCURVE",
"818 435 QCURVE SMOOTH",
"816 375 OFFCURVE",
"797 343 QCURVE SMOOTH",
"752 265 LINE SMOOTH",
"740 244 OFFCURVE",
"735 233 QCURVE",
"696 171 OFFCURVE",
"678 132 QCURVE SMOOTH",
"671 117 OFFCURVE",
"671 103 QCURVE SMOOTH",
"671 74 OFFCURVE",
"709 62 QCURVE",
"727 56 OFFCURVE",
"746 56 QCURVE",
"823 55 OFFCURVE",
"974 50 QCURVE SMOOTH",
"1006 48 OFFCURVE",
"1027 54 QCURVE SMOOTH",
"1038 57 OFFCURVE",
"1049 69 OFFCURVE",
"1049 77 QCURVE SMOOTH",
"1049 89 OFFCURVE",
"1039 101 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
89 1 1 5 63 1 6 1 2 76 0 1 5 6 5 1 6 128 0 6 2 1 0 3 6 0 105 0 4 0 3 4 3 101 0 5 5 20 5 78 94 92 75 73 60 57 50 47 46 45 34 32 69 7 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 1148;
}
);
note = uni03A9;
unicode = 03A9;
},
{
glyphname = pi;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"742 620 OFFCURVE",
"695 620 QCURVE SMOOTH",
"681 620 OFFCURVE",
"666 617 QCURVE SMOOTH",
"588 602 LINE SMOOTH",
"483 582 OFFCURVE",
"340 552 OFFCURVE",
"270 531 QCURVE SMOOTH",
"151 495 OFFCURVE",
"65 424 QCURVE SMOOTH",
"50 412 OFFCURVE",
"50 398 QCURVE SMOOTH",
"50 382 OFFCURVE",
"69 369 QCURVE",
"71 368 OFFCURVE",
"82 360 OFFCURVE",
"88 359 QCURVE",
"101 355 OFFCURVE",
"118 355 QCURVE SMOOTH",
"150 355 OFFCURVE",
"172 377 QCURVE SMOOTH",
"193 398 OFFCURVE",
"220 416 OFFCURVE",
"240 414 QCURVE",
"241 412 OFFCURVE",
"246 403 OFFCURVE",
"246 400 QCURVE SMOOTH",
"246 398 LINE",
"244 363 OFFCURVE",
"240 346 QCURVE SMOOTH",
"225 286 LINE SMOOTH",
"202 198 OFFCURVE",
"164 82 OFFCURVE",
"133 27 QCURVE",
"139 20 OFFCURVE",
"154 1 OFFCURVE",
"160 -3 QCURVE SMOOTH",
"184 -19 OFFCURVE",
"198 -19 QCURVE SMOOTH",
"222 -19 OFFCURVE",
"235 18 QCURVE SMOOTH",
"243 40 OFFCURVE",
"269 118 QCURVE SMOOTH",
"286 168 LINE",
"304 221 LINE SMOOTH",
"329 293 OFFCURVE",
"358 390 OFFCURVE",
"365 441 QCURVE SMOOTH",
"371 477 OFFCURVE",
"408 488 QCURVE",
"426 492 OFFCURVE",
"435 495 QCURVE",
"468 503 OFFCURVE",
"473 504 QCURVE",
"489 506 OFFCURVE",
"494 506 QCURVE SMOOTH",
"513 506 OFFCURVE",
"536 486 OFFCURVE",
"542 463 QCURVE SMOOTH",
"558 402 OFFCURVE",
"564 330 QCURVE SMOOTH",
"571 260 OFFCURVE",
"577 120 QCURVE SMOOTH",
"578 90 OFFCURVE",
"609 54 OFFCURVE",
"638 46 QCURVE SMOOTH",
"649 43 OFFCURVE",
"657 43 QCURVE SMOOTH",
"669 43 OFFCURVE",
"683 57 OFFCURVE",
"683 70 QCURVE SMOOTH",
"683 78 OFFCURVE",
"682 82 QCURVE",
"673 126 OFFCURVE",
"665 217 OFFCURVE",
"663 278 QCURVE SMOOTH",
"661 329 LINE SMOOTH",
"660 368 OFFCURVE",
"648 442 QCURVE SMOOTH",
"642 485 LINE",
"640 495 OFFCURVE",
"632 530 QCURVE",
"652 532 OFFCURVE",
"663 534 QCURVE",
"679 536 OFFCURVE",
"685 536 QCURVE SMOOTH",
"700 536 OFFCURVE",
"707 537 QCURVE",
"737 537 OFFCURVE",
"752 539 QCURVE SMOOTH",
"759 540 OFFCURVE",
"775 549 OFFCURVE",
"776 553 QCURVE SMOOTH",
"778 561 OFFCURVE",
"773 580 OFFCURVE",
"768 586 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 70 values pushed */
13 1 2 0 67 1 4 2 24 1 1 4 61 1 3 1 4 76 0 2 0 4 0 2 4 128 0 4 1 0 4 1 126 0 1 3 0 1 3 126 0 0 0 5 97 0 5 5 21 77 0 3 3 22 3 78 94 92 77 75 57 55 39 38 27 26 54 6 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 827;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = uni1EBD;
lastChange = "2019-11-20 00:11:00 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"239 530 OFFCURVE",
"270 511 OFFCURVE",
"291 493 QCURVE SMOOTH",
"302 484 OFFCURVE",
"324 469 OFFCURVE",
"333 466 QCURVE",
"351 459 OFFCURVE",
"373 459 QCURVE SMOOTH",
"410 459 OFFCURVE",
"451 486 QCURVE SMOOTH",
"478 504 OFFCURVE",
"478 539 QCURVE",
"463 564 OFFCURVE",
"447 564 QCURVE SMOOTH",
"440 564 OFFCURVE",
"428 557 QCURVE SMOOTH",
"418 551 OFFCURVE",
"413 549 QCURVE",
"409 547 OFFCURVE",
"371 532 OFFCURVE",
"354 532 QCURVE SMOOTH",
"334 532 OFFCURVE",
"319 543 QCURVE",
"302 554 OFFCURVE",
"266 589 OFFCURVE",
"262 592 QCURVE",
"237 614 OFFCURVE",
"213 614 QCURVE SMOOTH",
"185 614 OFFCURVE",
"155 586 QCURVE SMOOTH",
"132 564 OFFCURVE",
"121 510 QCURVE",
"122 495 OFFCURVE",
"135 495 QCURVE SMOOTH",
"147 495 OFFCURVE",
"179 513 QCURVE SMOOTH",
"209 530 OFFCURVE",
"220 531 QCURVE"
);
},
{
closed = 1;
nodes = (
"333 94 OFFCURVE",
"265 65 QCURVE",
"248 58 OFFCURVE",
"227 58 QCURVE SMOOTH",
"205 58 OFFCURVE",
"194 67 QCURVE",
"184 76 OFFCURVE",
"170 103 OFFCURVE",
"159 141 OFFCURVE",
"157 148 QCURVE",
"156 153 OFFCURVE",
"171 172 OFFCURVE",
"177 173 QCURVE SMOOTH",
"219 180 OFFCURVE",
"288 216 OFFCURVE",
"342 253 QCURVE SMOOTH",
"361 266 OFFCURVE",
"399 290 QCURVE SMOOTH",
"431 310 OFFCURVE",
"431 332 QCURVE SMOOTH",
"431 354 OFFCURVE",
"400 373 QCURVE SMOOTH",
"330 415 OFFCURVE",
"256 415 QCURVE SMOOTH",
"241 415 OFFCURVE",
"234 414 QCURVE",
"206 414 LINE",
"103 404 OFFCURVE",
"61 325 QCURVE SMOOTH",
"52 308 OFFCURVE",
"45 261 OFFCURVE",
"44 254 QCURVE SMOOTH",
"41 232 OFFCURVE",
"41 210 QCURVE SMOOTH",
"41 133 OFFCURVE",
"113 14 OFFCURVE",
"181 -4 QCURVE SMOOTH",
"216 -13 OFFCURVE",
"249 -13 QCURVE SMOOTH",
"356 -14 OFFCURVE",
"445 75 QCURVE SMOOTH",
"465 95 OFFCURVE",
"465 110 QCURVE SMOOTH",
"465 122 OFFCURVE",
"452 134 QCURVE SMOOTH",
"432 152 OFFCURVE",
"418 152 QCURVE SMOOTH",
"404 152 OFFCURVE",
"388 139 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"257 314 OFFCURVE",
"199 280 OFFCURVE",
"173 283 QCURVE",
"181 314 OFFCURVE",
"210 343 OFFCURVE",
"234 343 QCURVE SMOOTH",
"246 343 OFFCURVE",
"268 338 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
25 1 2 3 5 1 0 5 94 91 2 6 10 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 61 values pushed */
0 3 1 2 1 3 2 128 0 0 5 4 5 0 4 128 0 6 10 9 10 6 9 128 0 2 0 4 8 2 4 105 0 8 0 10 6 8 10 105 0 5 5 1 97 0 1 1 32 77 0 9 9 7 97 0 7 7 40 7 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 58 values pushed */
0 3 1 2 1 3 2 128 0 0 5 4 5 0 4 128 0 6 10 9 10 6 9 128 0 2 0 4 8 2 4 105 0 8 0 10 6 8 10 105 0 9 0 7 9 7 101 0 5 5 1 97 0 1 1 32 5 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
89 87 83 81 75 38 33 22 36 37 37 36 34 11 8 31 
CALL[ ]\011/* CallFunction */";
};
width = 537;
}
);
leftKerningGroup = e;
note = uni1EBD;
rightKerningGroup = e;
unicode = 1EBD;
},
{
glyphname = endash;
lastChange = "2019-08-24 02:13:57 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"540 388 OFFCURVE",
"501 387 QCURVE SMOOTH",
"302 383 OFFCURVE",
"204 384 QCURVE SMOOTH",
"146 385 OFFCURVE",
"83 374 OFFCURVE",
"50 355 QCURVE",
"55 348 OFFCURVE",
"73 326 OFFCURVE",
"82 320 QCURVE SMOOTH",
"138 287 OFFCURVE",
"217 291 QCURVE SMOOTH",
"302 294 OFFCURVE",
"474 301 QCURVE SMOOTH",
"630 306 OFFCURVE",
"710 308 QCURVE",
"709 346 OFFCURVE",
"660 388 OFFCURVE",
"620 388 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
11 1 0 1 1 76 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 5 values pushed */
11 2 2 1 73 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 12 values pushed */
0 0 0 1 95 2 1 1 1 33 0 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 7 values pushed */
2 1 1 1 33 1 78 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 5 values pushed */
2 1 1 1 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
0 0 0 18 0 13 82 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 832;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2019-08-23 23:37:41 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"783 390 OFFCURVE",
"743 413 OFFCURVE",
"719 413 QCURVE",
"707 412 LINE",
"636 405 LINE SMOOTH",
"546 394 OFFCURVE",
"494 391 QCURVE SMOOTH",
"210 372 LINE",
"178 372 LINE SMOOTH",
"169 372 OFFCURVE",
"144 373 OFFCURVE",
"129 372 QCURVE",
"124 372 OFFCURVE",
"88 372 OFFCURVE",
"74 370 QCURVE",
"67 368 OFFCURVE",
"52 357 OFFCURVE",
"51 352 QCURVE SMOOTH",
"49 343 OFFCURVE",
"54 323 OFFCURVE",
"59 316 QCURVE SMOOTH",
"68 293 OFFCURVE",
"92 287 QCURVE SMOOTH",
"104 284 OFFCURVE",
"118 284 QCURVE",
"139 285 LINE",
"271 295 LINE SMOOTH",
"447 308 OFFCURVE",
"535 315 QCURVE SMOOTH",
"595 319 OFFCURVE",
"638 319 QCURVE",
"812 330 LINE",
"814 336 OFFCURVE",
"810 365 OFFCURVE",
"805 369 QCURVE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 28 values pushed */
0 4 3 4 133 0 2 0 0 2 113 0 3 0 0 3 87 0 3 3 0 97 1 1 0 3 0 81 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
0 4 3 4 133 0 0 3 1 3 0 1 128 0 2 1 1 2 113 0 3 0 1 3 87 0 3 3 1 97 0 1 3 1 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 34 values pushed */
0 4 3 4 133 0 0 3 1 3 0 1 128 0 2 1 2 134 0 3 0 1 3 87 0 3 3 1 97 0 1 3 1 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
20 122 34 17 19 5 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 863;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = quoteleft;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"163 718 OFFCURVE",
"163 775 QCURVE SMOOTH",
"163 778 OFFCURVE",
"149 783 OFFCURVE",
"144 786 QCURVE",
"93 730 OFFCURVE",
"40 593 OFFCURVE",
"51 515 QCURVE",
"50 485 OFFCURVE",
"83 439 OFFCURVE",
"133 440 OFFCURVE",
"170 467 OFFCURVE",
"178 490 OFFCURVE",
"178 520 QCURVE SMOOTH",
"178 533 OFFCURVE",
"130 575 OFFCURVE",
"155 690 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
8 1 0 74 0 0 0 118 21 1 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 210;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"152 751 OFFCURVE",
"141 751 QCURVE SMOOTH",
"131 751 OFFCURVE",
"113 740 OFFCURVE",
"109 731 QCURVE SMOOTH",
"93 698 OFFCURVE",
"94 672 QCURVE SMOOTH",
"97 577 OFFCURVE",
"59 472 QCURVE SMOOTH",
"50 447 OFFCURVE",
"50 438 QCURVE SMOOTH",
"50 429 OFFCURVE",
"60 401 OFFCURVE",
"61 398 QCURVE",
"86 397 OFFCURVE",
"119 426 OFFCURVE",
"129 449 QCURVE SMOOTH",
"165 529 OFFCURVE",
"204 647 QCURVE",
"207 658 OFFCURVE",
"207 668 QCURVE SMOOTH",
"207 690 OFFCURVE",
"182 732 OFFCURVE",
"164 744 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
0 1 0 1 133 0 0 0 118 43 24 2 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 257;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = quotedblleft;
lastChange = "2019-03-19 08:00:05 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"135 728 OFFCURVE",
"129 728 QCURVE SMOOTH",
"120 728 OFFCURVE",
"105 711 OFFCURVE",
"91 688 QCURVE SMOOTH",
"84 677 LINE",
"48 629 OFFCURVE",
"48 562 QCURVE SMOOTH",
"48 533 OFFCURVE",
"54 504 QCURVE",
"64 445 OFFCURVE",
"97 397 QCURVE",
"110 413 OFFCURVE",
"131 474 OFFCURVE",
"133 515 QCURVE SMOOTH",
"136 578 OFFCURVE",
"174 629 QCURVE SMOOTH",
"188 648 OFFCURVE",
"188 665 QCURVE SMOOTH",
"188 698 OFFCURVE",
"143 723 QCURVE"
);
},
{
closed = 1;
nodes = (
"315 672 OFFCURVE",
"309 672 QCURVE SMOOTH",
"298 672 OFFCURVE",
"274 654 OFFCURVE",
"270 651 QCURVE",
"267 649 OFFCURVE",
"264 644 OFFCURVE",
"263 643 QCURVE",
"195 558 OFFCURVE",
"195 473 QCURVE SMOOTH",
"195 393 OFFCURVE",
"237 347 QCURVE",
"267 406 OFFCURVE",
"269 437 QCURVE",
"271 451 OFFCURVE",
"273 458 QCURVE SMOOTH",
"285 499 OFFCURVE",
"314 558 OFFCURVE",
"340 581 QCURVE SMOOTH",
"347 587 OFFCURVE",
"357 607 OFFCURVE",
"356 615 QCURVE",
"355 632 OFFCURVE",
"337 661 OFFCURVE",
"322 668 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
33 31 23 8 4 1 73 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 133 0 1 1 30 1 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 9 values pushed */
0 0 1 0 133 0 1 1 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
43 42 18 17 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 340;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"228 706 OFFCURVE",
"243 668 QCURVE SMOOTH",
"258 629 OFFCURVE",
"283 584 OFFCURVE",
"283 552 QCURVE SMOOTH",
"283 510 OFFCURVE",
"262 458 OFFCURVE",
"243 436 QCURVE SMOOTH",
"238 430 OFFCURVE",
"233 410 OFFCURVE",
"232 406 QCURVE SMOOTH",
"231 402 OFFCURVE",
"234 392 OFFCURVE",
"236 389 QCURVE",
"252 369 OFFCURVE",
"278 369 QCURVE SMOOTH",
"292 369 OFFCURVE",
"315 382 OFFCURVE",
"321 394 QCURVE SMOOTH",
"370 495 OFFCURVE",
"371 532 QCURVE SMOOTH",
"372 575 OFFCURVE",
"338 675 OFFCURVE",
"253 742 OFFCURVE",
"229 742 QCURVE SMOOTH",
"222 742 OFFCURVE",
"219 740 QCURVE"
);
},
{
closed = 1;
nodes = (
"115 542 OFFCURVE",
"87 460 OFFCURVE",
"59 410 OFFCURVE",
"64 404 QCURVE",
"85 376 OFFCURVE",
"112 376 QCURVE SMOOTH",
"142 376 OFFCURVE",
"164 411 QCURVE SMOOTH",
"184 443 OFFCURVE",
"205 515 OFFCURVE",
"205 551 QCURVE SMOOTH",
"205 632 OFFCURVE",
"150 687 QCURVE SMOOTH",
"138 699 OFFCURVE",
"129 711 QCURVE",
"111 732 OFFCURVE",
"87 749 OFFCURVE",
"66 747 QCURVE",
"59 746 OFFCURVE",
"59 738 QCURVE SMOOTH",
"59 729 OFFCURVE",
"77 691 OFFCURVE",
"87 670 QCURVE SMOOTH",
"102 638 OFFCURVE",
"118 604 OFFCURVE",
"117 593 QCURVE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 7 values pushed */
52 32 2 1 0 1 76 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 7 values pushed */
52 32 2 2 0 1 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 10 values pushed */
0 0 1 0 133 2 1 1 1 118 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 14 values pushed */
0 0 2 0 133 0 2 1 2 133 0 1 1 118 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
47 45 39 17 3 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 394;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quotedblbase;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"144 183 OFFCURVE",
"129 183 QCURVE SMOOTH",
"120 183 OFFCURVE",
"103 174 OFFCURVE",
"99 166 QCURVE",
"84 133 OFFCURVE",
"86 111 QCURVE SMOOTH",
"87 102 OFFCURVE",
"87 85 QCURVE SMOOTH",
"87 9 OFFCURVE",
"58 -75 QCURVE SMOOTH",
"50 -97 OFFCURVE",
"50 -105 QCURVE SMOOTH",
"50 -115 OFFCURVE",
"63 -144 QCURVE",
"109 -146 OFFCURVE",
"131 -99 QCURVE SMOOTH",
"166 -23 OFFCURVE",
"200 83 QCURVE SMOOTH",
"203 92 OFFCURVE",
"203 101 QCURVE SMOOTH",
"203 122 OFFCURVE",
"176 164 OFFCURVE",
"155 176 QCURVE"
);
},
{
closed = 1;
nodes = (
"298 140 OFFCURVE",
"286 140 QCURVE SMOOTH",
"240 140 OFFCURVE",
"240 64 QCURVE SMOOTH",
"240 52 OFFCURVE",
"242 26 QCURVE",
"245 4 OFFCURVE",
"245 -20 QCURVE SMOOTH",
"245 -70 OFFCURVE",
"222 -106 QCURVE SMOOTH",
"212 -122 OFFCURVE",
"212 -132 QCURVE SMOOTH",
"212 -145 OFFCURVE",
"228 -145 QCURVE SMOOTH",
"238 -145 OFFCURVE",
"250 -141 QCURVE",
"266 -140 OFFCURVE",
"306 -113 OFFCURVE",
"310 -105 QCURVE",
"328 -76 OFFCURVE",
"339 -15 OFFCURVE",
"341 29 QCURVE",
"341 35 OFFCURVE",
"343 72 OFFCURVE",
"346 85 QCURVE SMOOTH",
"348 93 OFFCURVE",
"348 97 QCURVE SMOOTH",
"348 120 OFFCURVE",
"319 132 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
25 10 2 0 4 1 76 0 1 4 1 133 0 4 0 0 4 89 0 4 4 0 97 3 2 2 0 4 0 81 42 33 29 44 23 5 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 398;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = dagger;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"574 694 OFFCURVE",
"538 694 QCURVE SMOOTH",
"523 694 OFFCURVE",
"516 692 QCURVE",
"484 685 LINE",
"475 682 OFFCURVE",
"457 678 QCURVE",
"456 678 LINE",
"415 669 OFFCURVE",
"387 669 QCURVE SMOOTH",
"369 669 OFFCURVE",
"359 671 QCURVE",
"358 678 LINE SMOOTH",
"357 684 OFFCURVE",
"355 699 OFFCURVE",
"355 708 QCURVE",
"353 748 LINE",
"353 760 LINE SMOOTH",
"353 795 OFFCURVE",
"317 819 QCURVE SMOOTH",
"293 835 OFFCURVE",
"273 835 QCURVE SMOOTH",
"257 835 OFFCURVE",
"240 824 QCURVE",
"236 822 LINE",
"235 817 LINE",
"231 802 OFFCURVE",
"231 784 QCURVE SMOOTH",
"231 763 OFFCURVE",
"237 727 QCURVE SMOOTH",
"238 722 OFFCURVE",
"244 683 OFFCURVE",
"242 666 QCURVE",
"231 659 OFFCURVE",
"206 655 OFFCURVE",
"188 656 QCURVE",
"172 656 OFFCURVE",
"164 655 QCURVE",
"120 653 OFFCURVE",
"98 653 QCURVE",
"71 652 LINE",
"64 652 LINE",
"61 646 LINE",
"50 626 OFFCURVE",
"50 608 QCURVE SMOOTH",
"50 578 OFFCURVE",
"78 559 QCURVE SMOOTH",
"112 535 OFFCURVE",
"145 535 QCURVE SMOOTH",
"163 535 OFFCURVE",
"175 540 QCURVE SMOOTH",
"190 546 LINE",
"194 548 OFFCURVE",
"216 556 QCURVE",
"230 559 OFFCURVE",
"239 559 QCURVE SMOOTH",
"246 559 OFFCURVE",
"251 556 QCURVE SMOOTH",
"261 550 OFFCURVE",
"264 527 QCURVE SMOOTH",
"283 383 OFFCURVE",
"283 275 QCURVE SMOOTH",
"283 221 OFFCURVE",
"279 177 QCURVE SMOOTH",
"277 154 OFFCURVE",
"277 110 QCURVE SMOOTH",
"277 77 OFFCURVE",
"278 63 QCURVE",
"278 46 OFFCURVE",
"286 16 QCURVE",
"289 2 LINE SMOOTH",
"295 -25 OFFCURVE",
"333 -58 OFFCURVE",
"362 -63 QCURVE",
"364 -64 OFFCURVE",
"367 -64 QCURVE SMOOTH",
"376 -64 OFFCURVE",
"396 -55 QCURVE SMOOTH",
"409 -49 LINE",
"421 -45 LINE",
"416 -33 LINE",
"415 -29 OFFCURVE",
"413 -23 OFFCURVE",
"412 -20 QCURVE",
"406 -5 OFFCURVE",
"403 0 QCURVE",
"370 66 OFFCURVE",
"370 135 QCURVE SMOOTH",
"370 147 OFFCURVE",
"372 169 QCURVE SMOOTH",
"378 228 OFFCURVE",
"378 285 QCURVE SMOOTH",
"378 374 OFFCURVE",
"362 516 QCURVE SMOOTH",
"361 527 OFFCURVE",
"361 551 QCURVE SMOOTH",
"361 564 LINE",
"363 565 OFFCURVE",
"372 568 QCURVE SMOOTH",
"391 575 OFFCURVE",
"399 576 QCURVE",
"434 579 OFFCURVE",
"466 585 QCURVE SMOOTH",
"518 594 OFFCURVE",
"551 594 QCURVE SMOOTH",
"568 594 OFFCURVE",
"576 593 QCURVE SMOOTH",
"587 592 OFFCURVE",
"612 604 OFFCURVE",
"618 614 QCURVE",
"624 621 OFFCURVE",
"624 632 QCURVE SMOOTH",
"624 651 OFFCURVE",
"603 668 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
17 1 3 2 45 33 2 1 3 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
0 6 8 6 133 0 2 0 3 0 2 3 128 0 1 3 1 134 0 7 7 30 77 0 0 0 8 97 0 8 8 36 77 0 3 3 4 97 5 1 4 4 30 3 78 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 46 values pushed */
0 6 8 6 133 0 7 8 4 8 7 4 128 0 2 0 3 0 2 3 128 0 1 3 1 134 0 8 0 0 2 8 0 105 0 3 3 4 97 5 1 4 4 32 3 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 52 values pushed */
0 6 8 6 133 0 7 8 4 8 7 4 128 0 2 0 3 0 2 3 128 0 1 3 1 134 5 1 4 0 3 4 89 0 8 0 0 2 8 0 105 5 1 4 4 3 97 0 3 4 3 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 20 values pushed */
112 110 104 102 92 90 78 76 75 71 65 63 58 57 37 36 39 9 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 674;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"504 547 OFFCURVE",
"514 546 QCURVE",
"544 545 LINE SMOOTH",
"558 545 OFFCURVE",
"565 546 QCURVE SMOOTH",
"573 547 OFFCURVE",
"592 568 OFFCURVE",
"592 575 QCURVE",
"593 583 OFFCURVE",
"577 604 OFFCURVE",
"568 608 QCURVE SMOOTH",
"554 614 OFFCURVE",
"514 617 OFFCURVE",
"508 618 QCURVE",
"484 620 LINE SMOOTH",
"441 623 OFFCURVE",
"383 638 OFFCURVE",
"354 661 QCURVE",
"352 675 OFFCURVE",
"350 683 QCURVE",
"346 719 OFFCURVE",
"339 743 QCURVE SMOOTH",
"329 780 OFFCURVE",
"312 796 QCURVE SMOOTH",
"303 804 OFFCURVE",
"272 812 OFFCURVE",
"259 810 QCURVE",
"252 810 OFFCURVE",
"235 787 OFFCURVE",
"234 777 QCURVE",
"232 739 OFFCURVE",
"232 718 QCURVE SMOOTH",
"233 634 LINE",
"210 625 LINE SMOOTH",
"180 613 OFFCURVE",
"164 610 QCURVE",
"151 607 OFFCURVE",
"124 605 QCURVE",
"90 601 OFFCURVE",
"73 597 QCURVE",
"66 596 OFFCURVE",
"50 572 OFFCURVE",
"50 563 QCURVE SMOOTH",
"50 555 OFFCURVE",
"69 534 OFFCURVE",
"77 533 QCURVE SMOOTH",
"97 530 OFFCURVE",
"148 527 OFFCURVE",
"158 526 QCURVE",
"171 526 OFFCURVE",
"199 524 QCURVE SMOOTH",
"225 522 OFFCURVE",
"256 492 OFFCURVE",
"260 467 QCURVE SMOOTH",
"265 436 OFFCURVE",
"267 375 QCURVE SMOOTH",
"269 238 LINE",
"145 229 LINE",
"118 226 OFFCURVE",
"93 215 QCURVE SMOOTH",
"64 203 OFFCURVE",
"64 183 QCURVE SMOOTH",
"64 168 OFFCURVE",
"85 151 QCURVE SMOOTH",
"130 117 OFFCURVE",
"179 117 QCURVE SMOOTH",
"185 117 OFFCURVE",
"201 119 QCURVE",
"236 126 LINE SMOOTH",
"245 128 OFFCURVE",
"270 133 QCURVE",
"272 -3 OFFCURVE",
"272 -69 QCURVE SMOOTH",
"272 -109 OFFCURVE",
"279 -132 QCURVE SMOOTH",
"293 -173 OFFCURVE",
"327 -173 QCURVE SMOOTH",
"344 -173 OFFCURVE",
"366 -160 QCURVE",
"367 -154 OFFCURVE",
"376 -128 OFFCURVE",
"375 -118 QCURVE",
"373 -34 OFFCURVE",
"367 142 QCURVE",
"419 146 OFFCURVE",
"444 146 QCURVE SMOOTH",
"502 146 OFFCURVE",
"549 134 QCURVE SMOOTH",
"553 133 OFFCURVE",
"568 136 QCURVE",
"575 147 OFFCURVE",
"575 157 QCURVE SMOOTH",
"575 173 OFFCURVE",
"552 191 QCURVE SMOOTH",
"514 219 OFFCURVE",
"422 241 OFFCURVE",
"368 241 QCURVE SMOOTH",
"364 241 LINE",
"362 329 OFFCURVE",
"360 374 QCURVE",
"360 385 OFFCURVE",
"358 409 QCURVE SMOOTH",
"356 433 OFFCURVE",
"356 446 QCURVE SMOOTH",
"356 502 OFFCURVE",
"387 542 QCURVE",
"460 547 OFFCURVE",
"483 547 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
50 1 2 1 36 23 2 4 2 25 1 3 4 3 76 77 74 2 7 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
34 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 42 values pushed */
6 1 5 0 1 0 5 1 128 0 4 2 3 2 4 3 128 0 3 3 132 0 1 0 2 4 1 2 105 8 9 2 0 0 7 97 0 7 7 32 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 47 values pushed */
6 1 5 0 1 0 5 1 128 0 4 2 3 2 4 3 128 0 3 3 132 0 7 8 9 2 0 5 7 0 103 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 25 values pushed */
1 0 105 102 92 91 60 59 58 57 42 40 31 29 22 20 11 9 0 107 1 106 10 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 642;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = bullet;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"262 363 OFFCURVE",
"218 412 OFFCURVE",
"186 411 QCURVE SMOOTH",
"143 409 OFFCURVE",
"69 354 OFFCURVE",
"50 311 QCURVE",
"51 303 OFFCURVE",
"52 274 OFFCURVE",
"55 266 QCURVE",
"78 216 OFFCURVE",
"140 206 QCURVE",
"144 205 OFFCURVE",
"152 205 QCURVE SMOOTH",
"181 205 OFFCURVE",
"231 236 OFFCURVE",
"262 290 OFFCURVE",
"262 322 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
49 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 0 1 97 0 1 1 33 0 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
41 18 2 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 313;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = ellipsis;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"480 115 OFFCURVE",
"467 96 OFFCURVE",
"467 90 QCURVE SMOOTH",
"467 84 OFFCURVE",
"474 76 QCURVE SMOOTH",
"495 52 OFFCURVE",
"535 17 QCURVE",
"558 -5 LINE",
"592 31 LINE",
"581 67 OFFCURVE",
"532 109 OFFCURVE",
"492 130 QCURVE"
);
},
{
closed = 1;
nodes = (
"63 110 OFFCURVE",
"63 87 QCURVE SMOOTH",
"63 83 OFFCURVE",
"65 73 QCURVE",
"74 44 OFFCURVE",
"123 10 OFFCURVE",
"152 10 QCURVE SMOOTH",
"176 10 OFFCURVE",
"198 22 QCURVE",
"203 32 OFFCURVE",
"203 45 QCURVE SMOOTH",
"203 58 OFFCURVE",
"190 78 OFFCURVE",
"178 90 QCURVE SMOOTH",
"157 111 OFFCURVE",
"152 125 QCURVE",
"102 119 OFFCURVE",
"87 116 QCURVE"
);
},
{
closed = 1;
nodes = (
"317 128 OFFCURVE",
"307 128 QCURVE SMOOTH",
"296 128 OFFCURVE",
"282 111 OFFCURVE",
"282 97 QCURVE SMOOTH",
"282 85 OFFCURVE",
"314 44 OFFCURVE",
"356 11 OFFCURVE",
"371 11 QCURVE",
"374 13 OFFCURVE",
"392 22 OFFCURVE",
"393 28 QCURVE SMOOTH",
"395 38 OFFCURVE",
"395 46 QCURVE SMOOTH",
"395 65 OFFCURVE",
"387 73 QCURVE",
"367 96 OFFCURVE",
"327 122 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
33 13 2 3 0 1 1 76 11 1 1 74 3 1 0 73 0 1 0 1 133 0 0 0 40 0 78 46 44 23 21 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 650;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = perthousand;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"560 800 OFFCURVE",
"550 800 QCURVE SMOOTH",
"515 800 OFFCURVE",
"499 761 QCURVE SMOOTH",
"452 650 OFFCURVE",
"403 542 QCURVE SMOOTH",
"350 423 OFFCURVE",
"338 396 QCURVE SMOOTH",
"311 333 OFFCURVE",
"273 238 OFFCURVE",
"260 207 QCURVE SMOOTH",
"238 151 LINE",
"242 150 OFFCURVE",
"250 146 QCURVE",
"250 141 OFFCURVE",
"249 119 OFFCURVE",
"253 115 QCURVE SMOOTH",
"272 96 OFFCURVE",
"296 76 OFFCURVE",
"310 71 QCURVE",
"315 69 OFFCURVE",
"343 101 OFFCURVE",
"347 113 QCURVE SMOOTH",
"358 145 OFFCURVE",
"372 192 QCURVE SMOOTH",
"389 254 OFFCURVE",
"404 291 QCURVE SMOOTH",
"435 367 OFFCURVE",
"488 496 OFFCURVE",
"510 550 QCURVE SMOOTH",
"536 610 OFFCURVE",
"586 732 QCURVE",
"597 756 OFFCURVE",
"597 769 QCURVE SMOOTH",
"597 790 OFFCURVE",
"572 797 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"363 702 OFFCURVE",
"312 756 OFFCURVE",
"239 787 OFFCURVE",
"203 787 QCURVE SMOOTH",
"168 787 OFFCURVE",
"143 773 QCURVE",
"133 768 OFFCURVE",
"128 763 QCURVE",
"110 747 LINE",
"106 743 OFFCURVE",
"77 719 OFFCURVE",
"68 706 QCURVE SMOOTH",
"50 678 OFFCURVE",
"50 655 QCURVE SMOOTH",
"50 650 OFFCURVE",
"51 647 QCURVE",
"69 581 OFFCURVE",
"172 507 OFFCURVE",
"244 507 QCURVE",
"281 505 OFFCURVE",
"339 548 OFFCURVE",
"371 616 OFFCURVE",
"371 650 QCURVE SMOOTH",
"371 656 OFFCURVE",
"369 670 QCURVE"
);
},
{
closed = 1;
nodes = (
"189 592 OFFCURVE",
"151 626 OFFCURVE",
"123 672 OFFCURVE",
"123 687 QCURVE SMOOTH",
"123 705 OFFCURVE",
"173 744 OFFCURVE",
"197 744 QCURVE",
"223 743 OFFCURVE",
"251 707 OFFCURVE",
"251 674 QCURVE SMOOTH",
"251 640 OFFCURVE",
"221 592 OFFCURVE",
"201 592 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"676 323 OFFCURVE",
"639 337 OFFCURVE",
"615 335 QCURVE",
"611 334 OFFCURVE",
"602 339 OFFCURVE",
"599 343 QCURVE SMOOTH",
"586 360 OFFCURVE",
"570 360 QCURVE SMOOTH",
"553 360 OFFCURVE",
"535 338 QCURVE SMOOTH",
"476 265 OFFCURVE",
"476 183 QCURVE SMOOTH",
"476 138 OFFCURVE",
"495 86 QCURVE SMOOTH",
"507 53 OFFCURVE",
"584 7 OFFCURVE",
"622 7 QCURVE SMOOTH",
"640 7 OFFCURVE",
"658 15 QCURVE",
"700 36 OFFCURVE",
"731 109 OFFCURVE",
"737 167 QCURVE",
"737 190 LINE",
"736 221 OFFCURVE",
"712 276 OFFCURVE",
"690 305 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"1054 249 OFFCURVE",
"973 320 OFFCURVE",
"933 320 QCURVE SMOOTH",
"897 320 LINE SMOOTH",
"866 320 OFFCURVE",
"854 311 QCURVE SMOOTH",
"832 294 OFFCURVE",
"795 251 OFFCURVE",
"786 228 QCURVE SMOOTH",
"773 194 OFFCURVE",
"773 157 QCURVE SMOOTH",
"773 115 OFFCURVE",
"804 38 OFFCURVE",
"867 -10 OFFCURVE",
"913 -10 QCURVE SMOOTH",
"925 -10 OFFCURVE",
"931 -9 QCURVE",
"932 -11 OFFCURVE",
"974 -3 OFFCURVE",
"1019 12 OFFCURVE",
"1031 22 QCURVE",
"1083 62 OFFCURVE",
"1083 126 QCURVE SMOOTH",
"1083 163 OFFCURVE",
"1069 205 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"907 59 OFFCURVE",
"897 59 QCURVE SMOOTH",
"882 59 OFFCURVE",
"877 80 QCURVE SMOOTH",
"869 110 OFFCURVE",
"863 160 QCURVE",
"862 184 OFFCURVE",
"856 217 QCURVE",
"853 229 OFFCURVE",
"868 272 OFFCURVE",
"894 301 OFFCURVE",
"908 298 QCURVE SMOOTH",
"926 294 OFFCURVE",
"964 264 OFFCURVE",
"989 226 OFFCURVE",
"989 213 QCURVE",
"985 155 OFFCURVE",
"957 86 OFFCURVE",
"918 66 QCURVE"
);
},
{
closed = 1;
nodes = (
"558 127 OFFCURVE",
"558 190 QCURVE SMOOTH",
"558 247 OFFCURVE",
"597 298 QCURVE",
"617 274 OFFCURVE",
"639 208 OFFCURVE",
"639 175 QCURVE SMOOTH",
"639 112 OFFCURVE",
"603 83 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 93 values pushed */
46 1 4 3 152 148 137 77 4 9 8 2 76 0 0 2 0 133 0 6 1 8 1 6 8 128 0 8 9 1 8 9 126 0 2 0 3 4 2 3 105 10 1 4 0 1 6 4 1 105 0 5 5 40 77 0 9 9 7 98 0 7 7 31 7 78 61 61 142 140 122 119 110 106 92 90 83 81 61 73 61 72 67 65 57 55 42 40 34 32 11 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1133;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"252 220 LINE",
"203 254 OFFCURVE",
"192 263 QCURVE",
"173 277 OFFCURVE",
"173 291 QCURVE SMOOTH",
"173 304 OFFCURVE",
"186 318 QCURVE SMOOTH",
"202 336 OFFCURVE",
"237 386 OFFCURVE",
"253 409 QCURVE SMOOTH",
"261 420 OFFCURVE",
"261 437 QCURVE SMOOTH",
"261 452 OFFCURVE",
"248 477 OFFCURVE",
"237 483 QCURVE SMOOTH",
"214 496 OFFCURVE",
"204 496 QCURVE SMOOTH",
"194 496 OFFCURVE",
"178 482 OFFCURVE",
"167 465 QCURVE",
"113 389 OFFCURVE",
"68 337 QCURVE SMOOTH",
"50 316 OFFCURVE",
"50 300 QCURVE SMOOTH",
"50 280 OFFCURVE",
"75 264 QCURVE SMOOTH",
"147 220 OFFCURVE",
"180 204 QCURVE SMOOTH",
"191 199 OFFCURVE",
"227 196 OFFCURVE",
"237 195 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
29 1 0 73 0 0 0 118 44 1 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 311;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"197 257 OFFCURVE",
"237 292 OFFCURVE",
"259 305 QCURVE",
"276 316 OFFCURVE",
"289 327 OFFCURVE",
"289 335 QCURVE SMOOTH",
"289 345 OFFCURVE",
"275 360 QCURVE SMOOTH",
"208 435 OFFCURVE",
"143 489 QCURVE SMOOTH",
"116 512 OFFCURVE",
"90 512 QCURVE SMOOTH",
"70 512 OFFCURVE",
"50 498 QCURVE",
"55 491 OFFCURVE",
"68 466 OFFCURVE",
"75 459 QCURVE SMOOTH",
"103 429 OFFCURVE",
"140 399 QCURVE SMOOTH",
"155 387 OFFCURVE",
"155 374 QCURVE SMOOTH",
"155 361 OFFCURVE",
"141 342 QCURVE SMOOTH",
"91 274 OFFCURVE",
"68 239 QCURVE",
"63 232 OFFCURVE",
"56 205 OFFCURVE",
"54 198 QCURVE",
"70 195 OFFCURVE",
"84 195 QCURVE SMOOTH",
"132 195 OFFCURVE",
"169 230 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
25 17 3 3 0 1 1 76 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 20 18 32 2 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 339;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = uni2074;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"313 614 OFFCURVE",
"283 701 OFFCURVE",
"249 743 QCURVE",
"242 741 OFFCURVE",
"212 735 OFFCURVE",
"203 730 QCURVE",
"181 715 OFFCURVE",
"161 688 QCURVE",
"152 677 OFFCURVE",
"101 608 QCURVE SMOOTH",
"71 568 LINE",
"59 549 OFFCURVE",
"56 542 QCURVE SMOOTH",
"50 529 OFFCURVE",
"50 514 QCURVE SMOOTH",
"50 489 OFFCURVE",
"84 452 OFFCURVE",
"111 450 QCURVE SMOOTH",
"125 449 OFFCURVE",
"151 451 QCURVE",
"165 453 OFFCURVE",
"171 453 QCURVE",
"230 460 LINE",
"257 401 OFFCURVE",
"267 384 QCURVE",
"270 377 OFFCURVE",
"291 361 OFFCURVE",
"298 355 QCURVE",
"321 489 LINE",
"351 501 OFFCURVE",
"397 520 QCURVE",
"391 533 OFFCURVE",
"371 543 OFFCURVE",
"356 545 QCURVE SMOOTH",
"342 547 OFFCURVE",
"327 552 OFFCURVE",
"320 560 QCURVE"
);
},
{
closed = 1;
nodes = (
"142 562 OFFCURVE",
"175 614 OFFCURVE",
"209 633 QCURVE",
"219 612 OFFCURVE",
"219 572 QCURVE SMOOTH",
"219 566 OFFCURVE",
"220 548 OFFCURVE",
"222 535 QCURVE",
"199 525 OFFCURVE",
"172 516 OFFCURVE",
"159 516 QCURVE SMOOTH",
"152 516 OFFCURVE",
"136 520 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
49 46 33 5 4 0 74 13 8 2 0 73 0 0 0 118 39 37 1 9 22 
CALL[ ]\011/* CallFunction */";
};
width = 447;
}
);
note = uni2074;
unicode = 2074;
},
{
glyphname = trademark;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"136 514 LINE",
"138 516 OFFCURVE",
"148 525 OFFCURVE",
"150 529 QCURVE",
"162 557 OFFCURVE",
"166 572 QCURVE SMOOTH",
"169 584 OFFCURVE",
"176 620 OFFCURVE",
"178 630 QCURVE SMOOTH",
"184 659 LINE SMOOTH",
"187 676 OFFCURVE",
"191 688 QCURVE",
"201 732 OFFCURVE",
"204 754 QCURVE SMOOTH",
"205 763 OFFCURVE",
"211 792 OFFCURVE",
"211 803 QCURVE SMOOTH",
"211 819 OFFCURVE",
"204 833 QCURVE",
"206 834 OFFCURVE",
"211 837 OFFCURVE",
"213 837 QCURVE",
"278 855 OFFCURVE",
"299 860 QCURVE",
"316 865 OFFCURVE",
"325 880 QCURVE",
"310 893 OFFCURVE",
"292 892 QCURVE",
"167 875 OFFCURVE",
"89 858 QCURVE",
"82 857 OFFCURVE",
"68 849 OFFCURVE",
"56 836 OFFCURVE",
"54 834 QCURVE SMOOTH",
"50 830 OFFCURVE",
"50 824 QCURVE SMOOTH",
"50 817 OFFCURVE",
"53 811 QCURVE SMOOTH",
"57 803 OFFCURVE",
"67 803 QCURVE SMOOTH",
"70 803 LINE",
"103 810 OFFCURVE",
"114 813 QCURVE SMOOTH",
"135 819 LINE",
"154 825 LINE",
"152 821 OFFCURVE",
"143 802 OFFCURVE",
"143 794 QCURVE SMOOTH",
"143 790 OFFCURVE",
"150 787 OFFCURVE",
"159 785 OFFCURVE",
"162 784 QCURVE",
"155 741 LINE",
"148 701 LINE SMOOTH",
"137 643 OFFCURVE",
"134 621 QCURVE SMOOTH",
"130 593 OFFCURVE",
"126 539 QCURVE",
"125 534 OFFCURVE",
"128 519 OFFCURVE",
"129 515 QCURVE"
);
},
{
closed = 1;
nodes = (
"600 523 LINE",
"605 523 LINE",
"617 524 OFFCURVE",
"628 532 OFFCURVE",
"628 541 QCURVE SMOOTH",
"628 545 OFFCURVE",
"626 553 QCURVE",
"619 586 OFFCURVE",
"610 636 QCURVE",
"607 658 LINE SMOOTH",
"601 706 OFFCURVE",
"599 727 QCURVE SMOOTH",
"598 739 OFFCURVE",
"598 763 QCURVE SMOOTH",
"598 793 OFFCURVE",
"600 807 QCURVE SMOOTH",
"601 816 OFFCURVE",
"601 827 QCURVE SMOOTH",
"601 837 OFFCURVE",
"594 844 OFFCURVE",
"584 844 QCURVE SMOOTH",
"574 844 OFFCURVE",
"568 843 QCURVE",
"564 841 LINE",
"539 784 LINE",
"513 729 LINE SMOOTH",
"508 718 OFFCURVE",
"488 671 QCURVE",
"482 655 OFFCURVE",
"478 647 QCURVE",
"473 631 OFFCURVE",
"463 610 QCURVE",
"453 628 OFFCURVE",
"446 664 OFFCURVE",
"445 667 QCURVE",
"434 720 OFFCURVE",
"427 802 QCURVE SMOOTH",
"426 813 OFFCURVE",
"419 822 OFFCURVE",
"410 824 QCURVE",
"388 827 OFFCURVE",
"380 812 QCURVE",
"375 801 OFFCURVE",
"352 751 QCURVE",
"314 651 LINE SMOOTH",
"306 629 OFFCURVE",
"303 618 QCURVE SMOOTH",
"302 614 OFFCURVE",
"286 570 OFFCURVE",
"274 551 QCURVE",
"273 549 OFFCURVE",
"274 540 OFFCURVE",
"276 538 QCURVE SMOOTH",
"280 534 OFFCURVE",
"289 537 QCURVE",
"316 550 OFFCURVE",
"331 591 QCURVE SMOOTH",
"337 606 OFFCURVE",
"347 633 OFFCURVE",
"351 644 QCURVE SMOOTH",
"366 687 LINE",
"382 722 LINE",
"384 719 OFFCURVE",
"387 716 OFFCURVE",
"388 715 QCURVE",
"414 607 LINE",
"428 557 OFFCURVE",
"437 532 QCURVE",
"440 525 OFFCURVE",
"456 515 OFFCURVE",
"465 515 QCURVE SMOOTH",
"476 515 OFFCURVE",
"480 521 QCURVE SMOOTH",
"492 538 OFFCURVE",
"496 556 QCURVE SMOOTH",
"498 564 OFFCURVE",
"502 581 OFFCURVE",
"504 591 QCURVE SMOOTH",
"508 610 OFFCURVE",
"525 654 QCURVE",
"538 684 OFFCURVE",
"541 695 QCURVE",
"542 700 OFFCURVE",
"551 715 QCURVE",
"555 714 LINE",
"571 588 OFFCURVE",
"580 524 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
34 1 3 1 116 86 63 8 4 4 0 2 76 60 1 2 73 0 1 3 1 133 0 3 0 3 133 0 0 4 0 133 5 1 4 2 4 133 0 2 2 118 61 61 61 147 61 146 128 126 78 76 33 32 21 19 6 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 678;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = partialdiff;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"587 518 OFFCURVE",
"539 575 QCURVE SMOOTH",
"410 725 OFFCURVE",
"216 725 QCURVE SMOOTH",
"192 725 OFFCURVE",
"180 724 QCURVE SMOOTH",
"162 723 OFFCURVE",
"125 711 OFFCURVE",
"95 699 QCURVE SMOOTH",
"75 691 LINE",
"64 686 OFFCURVE",
"50 662 OFFCURVE",
"50 649 QCURVE SMOOTH",
"50 632 OFFCURVE",
"77 606 OFFCURVE",
"96 606 QCURVE SMOOTH",
"125 606 OFFCURVE",
"162 622 QCURVE SMOOTH",
"205 642 OFFCURVE",
"253 642 QCURVE SMOOTH",
"322 642 OFFCURVE",
"448 566 OFFCURVE",
"479 513 QCURVE SMOOTH",
"489 496 OFFCURVE",
"499 469 OFFCURVE",
"499 453 QCURVE SMOOTH",
"499 442 OFFCURVE",
"496 428 QCURVE",
"467 430 OFFCURVE",
"463 431 QCURVE SMOOTH",
"435 437 OFFCURVE",
"422 441 QCURVE",
"388 449 OFFCURVE",
"371 452 QCURVE SMOOTH",
"352 455 OFFCURVE",
"333 455 QCURVE SMOOTH",
"244 455 OFFCURVE",
"190 380 QCURVE SMOOTH",
"156 333 OFFCURVE",
"137 274 QCURVE SMOOTH",
"121 225 OFFCURVE",
"121 171 QCURVE SMOOTH",
"121 97 OFFCURVE",
"158 27 QCURVE SMOOTH",
"199 -51 OFFCURVE",
"288 -51 QCURVE SMOOTH",
"442 -51 OFFCURVE",
"524 80 QCURVE SMOOTH",
"601 200 OFFCURVE",
"601 359 QCURVE SMOOTH",
"601 403 OFFCURVE",
"594 462 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"364 61 OFFCURVE",
"346 51 QCURVE SMOOTH",
"316 33 OFFCURVE",
"288 33 QCURVE SMOOTH",
"258 33 OFFCURVE",
"213 74 OFFCURVE",
"204 111 QCURVE SMOOTH",
"198 137 OFFCURVE",
"198 162 QCURVE SMOOTH",
"198 198 OFFCURVE",
"210 231 QCURVE SMOOTH",
"218 253 OFFCURVE",
"223 264 QCURVE SMOOTH",
"265 351 OFFCURVE",
"333 357 QCURVE",
"340 358 OFFCURVE",
"355 358 QCURVE SMOOTH",
"442 358 OFFCURVE",
"486 298 QCURVE",
"476 176 OFFCURVE",
"390 87 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
23 1 6 1 53 1 7 6 2 76 0 3 2 1 2 3 1 128 5 1 4 0 2 3 4 2 105 0 1 0 6 7 1 6 105 0 7 0 0 7 89 0 7 7 0 97 0 0 7 0 81 43 38 33 24 34 46 40 36 8 6 30 
CALL[ ]\011/* CallFunction */";
};
width = 650;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = uni2206;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"565 323 OFFCURVE",
"516 538 QCURVE SMOOTH",
"500 614 OFFCURVE",
"415 616 QCURVE",
"397 614 OFFCURVE",
"388 614 QCURVE SMOOTH",
"351 613 OFFCURVE",
"309 592 OFFCURVE",
"304 553 QCURVE",
"303 548 OFFCURVE",
"292 536 OFFCURVE",
"289 532 QCURVE",
"213 394 LINE SMOOTH",
"115 220 OFFCURVE",
"70 131 QCURVE SMOOTH",
"50 89 OFFCURVE",
"50 60 QCURVE SMOOTH",
"50 28 OFFCURVE",
"92 -10 OFFCURVE",
"132 -12 QCURVE SMOOTH",
"174 -14 OFFCURVE",
"194 -14 QCURVE SMOOTH",
"249 -14 OFFCURVE",
"317 -9 QCURVE SMOOTH",
"483 0 OFFCURVE",
"645 15 QCURVE SMOOTH",
"663 17 OFFCURVE",
"696 28 OFFCURVE",
"705 38 QCURVE",
"709 43 OFFCURVE",
"709 55 QCURVE SMOOTH",
"709 65 OFFCURVE",
"703 88 OFFCURVE",
"698 95 QCURVE"
);
},
{
closed = 1;
nodes = (
"471 118 OFFCURVE",
"360 105 OFFCURVE",
"346 103 QCURVE",
"265 95 OFFCURVE",
"229 89 QCURVE",
"213 112 LINE",
"369 496 LINE",
"400 496 LINE",
"443 403 LINE SMOOTH",
"507 270 OFFCURVE",
"540 190 QCURVE",
"541 188 OFFCURVE",
"541 181 QCURVE SMOOTH",
"541 167 OFFCURVE",
"526 129 OFFCURVE",
"518 127 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
44 36 2 0 4 1 76 0 0 4 1 4 0 1 128 0 1 1 132 3 1 2 4 4 2 89 3 1 2 2 4 95 0 4 2 4 79 27 17 44 65 24 5 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 759;
}
);
note = uni2206;
unicode = 2206;
},
{
glyphname = product;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"353 408 LINE SMOOTH",
"351 264 OFFCURVE",
"346 192 QCURVE SMOOTH",
"342 151 LINE",
"338 121 OFFCURVE",
"338 113 QCURVE SMOOTH",
"338 84 OFFCURVE",
"358 79 QCURVE",
"364 77 OFFCURVE",
"375 77 QCURVE SMOOTH",
"404 77 OFFCURVE",
"436 97 QCURVE",
"440 100 OFFCURVE",
"442 131 OFFCURVE",
"442 148 QCURVE SMOOTH",
"442 171 LINE SMOOTH",
"442 179 OFFCURVE",
"440 196 OFFCURVE",
"440 203 QCURVE",
"436 651 LINE",
"436 659 OFFCURVE",
"432 675 OFFCURVE",
"429 679 QCURVE",
"423 685 OFFCURVE",
"397 713 OFFCURVE",
"369 739 OFFCURVE",
"354 748 QCURVE",
"350 751 OFFCURVE",
"335 741 OFFCURVE",
"327 734 QCURVE",
"318 725 OFFCURVE",
"311 721 QCURVE SMOOTH",
"294 711 OFFCURVE",
"279 708 QCURVE",
"219 700 LINE SMOOTH",
"134 691 OFFCURVE",
"71 680 QCURVE SMOOTH",
"65 679 OFFCURVE",
"50 653 OFFCURVE",
"50 643 QCURVE SMOOTH",
"50 531 OFFCURVE",
"54 309 QCURVE SMOOTH",
"54 251 LINE SMOOTH",
"54 234 OFFCURVE",
"56 125 OFFCURVE",
"59 79 QCURVE SMOOTH",
"60 59 OFFCURVE",
"76 16 OFFCURVE",
"88 1 QCURVE",
"92 -5 OFFCURVE",
"127 68 OFFCURVE",
"162 157 OFFCURVE",
"161 162 QCURVE",
"156 214 LINE SMOOTH",
"140 364 OFFCURVE",
"140 453 QCURVE SMOOTH",
"140 521 OFFCURVE",
"148 569 QCURVE",
"190 579 LINE",
"221 585 LINE SMOOTH",
"310 603 OFFCURVE",
"348 606 QCURVE",
"351 557 LINE SMOOTH",
"352 543 OFFCURVE",
"354 504 OFFCURVE",
"354 480 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
62 59 46 12 3 2 6 0 74 0 0 0 118 56 54 1 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 492;
}
);
note = product;
unicode = 220F;
},
{
glyphname = summation;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"505 122 OFFCURVE",
"478 122 QCURVE SMOOTH",
"464 122 OFFCURVE",
"447 117 QCURVE SMOOTH",
"403 104 OFFCURVE",
"337 104 QCURVE SMOOTH",
"304 104 LINE SMOOTH",
"293 104 OFFCURVE",
"260 105 OFFCURVE",
"238 104 QCURVE",
"232 104 OFFCURVE",
"216 109 OFFCURVE",
"212 110 QCURVE",
"211 114 OFFCURVE",
"208 118 OFFCURVE",
"208 120 QCURVE",
"209 123 OFFCURVE",
"211 137 OFFCURVE",
"215 141 QCURVE",
"252 190 OFFCURVE",
"322 252 OFFCURVE",
"369 266 QCURVE SMOOTH",
"411 278 OFFCURVE",
"411 303 QCURVE SMOOTH",
"411 321 OFFCURVE",
"393 343 QCURVE",
"390 347 OFFCURVE",
"372 365 QCURVE SMOOTH",
"342 395 OFFCURVE",
"326 409 QCURVE",
"258 477 OFFCURVE",
"245 491 QCURVE SMOOTH",
"208 531 OFFCURVE",
"163 600 OFFCURVE",
"152 645 QCURVE",
"159 649 OFFCURVE",
"179 662 OFFCURVE",
"186 664 QCURVE",
"283 698 OFFCURVE",
"363 698 QCURVE SMOOTH",
"369 698 OFFCURVE",
"402 697 OFFCURVE",
"415 700 QCURVE SMOOTH",
"423 702 OFFCURVE",
"439 716 OFFCURVE",
"441 723 QCURVE SMOOTH",
"443 730 OFFCURVE",
"437 750 OFFCURVE",
"431 755 QCURVE",
"408 780 OFFCURVE",
"375 780 QCURVE SMOOTH",
"363 780 OFFCURVE",
"356 778 QCURVE",
"255 757 OFFCURVE",
"131 730 OFFCURVE",
"109 725 QCURVE SMOOTH",
"55 713 LINE",
"50 700 OFFCURVE",
"50 689 QCURVE SMOOTH",
"50 672 OFFCURVE",
"59 657 QCURVE",
"70 637 LINE SMOOTH",
"105 572 OFFCURVE",
"156 492 OFFCURVE",
"191 457 QCURVE SMOOTH",
"242 406 OFFCURVE",
"275 337 QCURVE",
"272 332 OFFCURVE",
"263 317 OFFCURVE",
"260 314 QCURVE",
"188 228 OFFCURVE",
"151 186 QCURVE SMOOTH",
"80 102 LINE",
"63 80 OFFCURVE",
"63 66 QCURVE SMOOTH",
"63 48 OFFCURVE",
"90 28 QCURVE",
"109 15 OFFCURVE",
"129 15 QCURVE SMOOTH",
"137 15 OFFCURVE",
"149 17 OFFCURVE",
"154 18 QCURVE",
"162 19 OFFCURVE",
"239 31 OFFCURVE",
"273 33 QCURVE SMOOTH",
"305 35 OFFCURVE",
"369 35 QCURVE SMOOTH",
"420 35 OFFCURVE",
"446 36 QCURVE SMOOTH",
"493 38 OFFCURVE",
"519 46 QCURVE SMOOTH",
"542 53 OFFCURVE",
"542 74 QCURVE SMOOTH",
"542 92 OFFCURVE",
"526 105 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
59 1 5 3 1 76 0 5 3 4 4 5 114 0 1 0 1 134 0 2 0 3 5 2 3 105 0 4 0 0 4 87 0 4 4 0 96 0 0 4 0 80 93 91 89 83 55 52 44 42 36 100 6 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 592;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = uni2215;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"706 889 OFFCURVE",
"701 889 QCURVE SMOOTH",
"687 889 OFFCURVE",
"660 859 OFFCURVE",
"642 829 QCURVE SMOOTH",
"631 811 OFFCURVE",
"620 796 QCURVE SMOOTH",
"605 776 OFFCURVE",
"597 765 QCURVE SMOOTH",
"333 408 OFFCURVE",
"169 179 QCURVE SMOOTH",
"154 158 OFFCURVE",
"121 102 OFFCURVE",
"107 73 QCURVE",
"78 22 LINE",
"99 -6 OFFCURVE",
"122 -6 QCURVE SMOOTH",
"160 -6 OFFCURVE",
"217 62 QCURVE SMOOTH",
"360 238 LINE SMOOTH",
"559 478 OFFCURVE",
"697 651 QCURVE SMOOTH",
"710 667 OFFCURVE",
"737 729 OFFCURVE",
"742 753 QCURVE SMOOTH",
"749 788 OFFCURVE",
"749 810 QCURVE SMOOTH",
"749 865 OFFCURVE",
"711 886 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
0 1 0 1 133 0 0 0 118 29 42 2 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 827;
}
);
note = uni2215;
unicode = 2215;
},
{
glyphname = radical;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"160 321 OFFCURVE",
"154 343 QCURVE SMOOTH",
"147 370 OFFCURVE",
"131 388 OFFCURVE",
"105 388 QCURVE SMOOTH",
"76 388 OFFCURVE",
"50 374 OFFCURVE",
"50 358 QCURVE SMOOTH",
"50 345 OFFCURVE",
"59 325 QCURVE SMOOTH",
"72 295 OFFCURVE",
"161 133 OFFCURVE",
"249 0 OFFCURVE",
"268 0 QCURVE",
"296 -1 OFFCURVE",
"328 36 OFFCURVE",
"340 68 QCURVE SMOOTH",
"356 108 OFFCURVE",
"387 217 QCURVE SMOOTH",
"431 363 OFFCURVE",
"498 547 OFFCURVE",
"534 595 QCURVE SMOOTH",
"542 606 OFFCURVE",
"553 634 OFFCURVE",
"553 647 QCURVE",
"552 660 OFFCURVE",
"540 686 OFFCURVE",
"531 692 QCURVE",
"526 696 OFFCURVE",
"514 696 QCURVE SMOOTH",
"496 696 OFFCURVE",
"485 688 QCURVE SMOOTH",
"455 666 OFFCURVE",
"375 444 OFFCURVE",
"320 265 QCURVE SMOOTH",
"284 142 OFFCURVE",
"274 124 QCURVE",
"269 140 OFFCURVE",
"233 198 OFFCURVE",
"214 226 QCURVE SMOOTH",
"169 294 OFFCURVE",
"162 314 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
16 1 2 0 4 1 1 2 2 76 0 0 2 0 133 0 2 1 2 133 0 1 1 118 39 46 42 3 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 603;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = infinity;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"1022 459 OFFCURVE",
"920 505 OFFCURVE",
"867 505 QCURVE SMOOTH",
"831 505 OFFCURVE",
"798 494 QCURVE SMOOTH",
"763 483 OFFCURVE",
"697 451 OFFCURVE",
"642 423 QCURVE SMOOTH",
"628 416 OFFCURVE",
"591 397 OFFCURVE",
"569 386 QCURVE",
"541 402 LINE",
"481 435 LINE",
"460 446 LINE SMOOTH",
"394 478 OFFCURVE",
"310 508 OFFCURVE",
"262 508 QCURVE SMOOTH",
"230 508 OFFCURVE",
"201 501 QCURVE SMOOTH",
"166 493 OFFCURVE",
"97 447 OFFCURVE",
"51 384 OFFCURVE",
"50 351 QCURVE SMOOTH",
"49 309 OFFCURVE",
"62 238 QCURVE",
"65 216 LINE SMOOTH",
"73 166 OFFCURVE",
"140 84 OFFCURVE",
"237 37 OFFCURVE",
"289 37 QCURVE SMOOTH",
"343 37 OFFCURVE",
"390 62 QCURVE SMOOTH",
"495 118 OFFCURVE",
"594 194 QCURVE SMOOTH",
"623 217 OFFCURVE",
"649 217 QCURVE SMOOTH",
"672 217 OFFCURVE",
"697 200 QCURVE SMOOTH",
"747 167 OFFCURVE",
"792 158 QCURVE SMOOTH",
"834 150 OFFCURVE",
"868 150 QCURVE SMOOTH",
"959 150 OFFCURVE",
"1047 199 QCURVE SMOOTH",
"1084 220 OFFCURVE",
"1125 285 OFFCURVE",
"1125 321 QCURVE SMOOTH",
"1125 348 OFFCURVE",
"1099 399 OFFCURVE",
"1074 419 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"337 188 OFFCURVE",
"297 173 OFFCURVE",
"266 164 QCURVE",
"242 156 OFFCURVE",
"221 156 QCURVE SMOOTH",
"182 156 OFFCURVE",
"152 185 QCURVE SMOOTH",
"103 232 OFFCURVE",
"103 284 QCURVE SMOOTH",
"103 293 OFFCURVE",
"107 313 QCURVE",
"113 334 OFFCURVE",
"150 363 QCURVE SMOOTH",
"217 415 OFFCURVE",
"290 415 QCURVE SMOOTH",
"343 415 OFFCURVE",
"454 361 OFFCURVE",
"522 310 QCURVE",
"470 274 LINE SMOOTH",
"386 217 OFFCURVE",
"355 199 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"923 264 OFFCURVE",
"874 247 QCURVE SMOOTH",
"852 239 OFFCURVE",
"834 233 QCURVE",
"831 241 LINE",
"819 240 LINE",
"816 240 OFFCURVE",
"810 242 QCURVE",
"754 272 LINE SMOOTH",
"716 292 OFFCURVE",
"697 301 QCURVE",
"722 326 LINE SMOOTH",
"741 346 OFFCURVE",
"769 371 OFFCURVE",
"785 378 QCURVE SMOOTH",
"866 416 OFFCURVE",
"930 413 QCURVE SMOOTH",
"953 412 OFFCURVE",
"1010 374 OFFCURVE",
"1017 353 QCURVE SMOOTH",
"1020 344 OFFCURVE",
"1020 335 QCURVE SMOOTH",
"1020 313 OFFCURVE",
"983 280 OFFCURVE",
"954 272 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 9 values pushed */
91 84 52 38 4 1 5 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
9 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 42 values pushed */
0 1 5 6 5 1 6 128 0 0 6 2 6 0 2 128 4 1 3 7 1 5 1 3 5 105 0 6 0 2 6 89 0 6 6 2 97 0 2 6 2 81 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 47 values pushed */
0 1 5 6 5 1 6 128 0 0 6 2 6 0 2 128 0 3 4 5 3 89 0 4 7 1 5 1 4 5 105 0 6 0 2 6 89 0 6 6 2 97 0 2 6 2 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 42 values pushed */
0 1 5 6 5 1 6 128 0 0 6 2 6 0 2 128 4 1 3 7 1 5 1 3 5 105 0 6 0 2 6 89 0 6 6 2 97 0 2 6 2 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
43 40 39 44 43 36 36 38 8 6 30 
CALL[ ]\011/* CallFunction */";
};
width = 1175;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = approxequal;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"197 399 OFFCURVE",
"220 399 QCURVE SMOOTH",
"248 399 OFFCURVE",
"273 381 QCURVE SMOOTH",
"280 376 OFFCURVE",
"304 358 OFFCURVE",
"313 353 QCURVE SMOOTH",
"340 338 OFFCURVE",
"363 338 QCURVE SMOOTH",
"406 338 OFFCURVE",
"431 388 QCURVE SMOOTH",
"433 392 OFFCURVE",
"440 413 QCURVE",
"442 421 OFFCURVE",
"442 424 QCURVE SMOOTH",
"442 437 OFFCURVE",
"429 447 QCURVE SMOOTH",
"424 451 OFFCURVE",
"406 458 OFFCURVE",
"399 462 QCURVE",
"375 437 OFFCURVE",
"364 426 QCURVE SMOOTH",
"354 416 OFFCURVE",
"342 416 QCURVE SMOOTH",
"339 416 OFFCURVE",
"329 420 QCURVE",
"281 447 LINE SMOOTH",
"243 467 OFFCURVE",
"204 467 QCURVE SMOOTH",
"181 467 OFFCURVE",
"160 460 QCURVE SMOOTH",
"88 437 OFFCURVE",
"50 369 QCURVE",
"62 356 OFFCURVE",
"76 346 OFFCURVE",
"82 346 QCURVE SMOOTH",
"88 346 OFFCURVE",
"96 350 QCURVE",
"111 356 OFFCURVE",
"133 367 OFFCURVE",
"141 371 QCURVE",
"148 374 OFFCURVE",
"164 382 OFFCURVE",
"175 387 QCURVE"
);
},
{
closed = 1;
nodes = (
"461 337 OFFCURVE",
"445 337 QCURVE SMOOTH",
"434 337 OFFCURVE",
"415 326 OFFCURVE",
"410 317 QCURVE",
"408 313 OFFCURVE",
"394 287 OFFCURVE",
"371 265 OFFCURVE",
"347 265 QCURVE SMOOTH",
"335 265 OFFCURVE",
"313 275 OFFCURVE",
"287 292 OFFCURVE",
"279 297 QCURVE",
"247 314 OFFCURVE",
"214 326 QCURVE",
"200 330 OFFCURVE",
"193 330 QCURVE SMOOTH",
"172 330 OFFCURVE",
"157 318 QCURVE",
"125 290 OFFCURVE",
"96 253 QCURVE SMOOTH",
"93 249 OFFCURVE",
"97 234 OFFCURVE",
"102 229 QCURVE",
"114 216 OFFCURVE",
"130 216 QCURVE SMOOTH",
"141 216 OFFCURVE",
"150 220 QCURVE SMOOTH",
"180 234 OFFCURVE",
"213 250 QCURVE",
"221 245 OFFCURVE",
"247 230 OFFCURVE",
"257 226 QCURVE",
"295 207 OFFCURVE",
"311 202 QCURVE SMOOTH",
"333 195 OFFCURVE",
"359 195 QCURVE SMOOTH",
"400 195 OFFCURVE",
"471 231 OFFCURVE",
"490 261 QCURVE SMOOTH",
"498 273 OFFCURVE",
"498 289 QCURVE SMOOTH",
"498 312 OFFCURVE",
"478 326 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 92 values pushed */
28 23 2 2 1 10 1 0 4 57 1 6 8 3 76 0 0 4 3 4 0 3 128 0 9 3 7 3 9 7 128 0 7 8 3 7 8 126 0 6 8 5 8 6 5 128 0 1 0 4 0 1 4 105 0 2 0 3 9 2 3 105 0 8 6 5 8 89 0 8 8 5 97 0 5 8 5 81 86 84 39 23 41 39 37 45 35 37 38 10 6 31 
CALL[ ]\011/* CallFunction */";
};
width = 548;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = notequal;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"488 324 LINE",
"529 329 LINE SMOOTH",
"718 352 OFFCURVE",
"806 365 QCURVE SMOOTH",
"818 367 OFFCURVE",
"846 390 OFFCURVE",
"853 395 QCURVE",
"834 406 LINE",
"808 423 OFFCURVE",
"792 424 QCURVE SMOOTH",
"778 425 OFFCURVE",
"749 425 QCURVE SMOOTH",
"706 425 OFFCURVE",
"684 424 QCURVE SMOOTH",
"619 423 LINE SMOOTH",
"588 423 OFFCURVE",
"573 424 QCURVE",
"555 426 LINE",
"651 566 LINE SMOOTH",
"690 624 OFFCURVE",
"722 679 QCURVE",
"727 689 OFFCURVE",
"727 700 QCURVE SMOOTH",
"727 706 OFFCURVE",
"725 712 QCURVE",
"724 716 OFFCURVE",
"710 722 OFFCURVE",
"704 722 QCURVE SMOOTH",
"700 722 OFFCURVE",
"699 721 QCURVE",
"661 708 OFFCURVE",
"650 693 QCURVE SMOOTH",
"615 646 OFFCURVE",
"563 569 QCURVE SMOOTH",
"515 499 OFFCURVE",
"490 465 QCURVE SMOOTH",
"467 433 LINE",
"335 449 LINE SMOOTH",
"318 451 OFFCURVE",
"300 455 QCURVE SMOOTH",
"268 461 OFFCURVE",
"252 461 QCURVE SMOOTH",
"233 461 OFFCURVE",
"199 447 OFFCURVE",
"174 433 QCURVE SMOOTH",
"156 423 OFFCURVE",
"147 419 QCURVE",
"164 403 LINE SMOOTH",
"176 391 OFFCURVE",
"190 380 OFFCURVE",
"200 378 QCURVE SMOOTH",
"274 361 OFFCURVE",
"399 340 QCURVE",
"312 222 LINE",
"272 223 LINE SMOOTH",
"252 224 OFFCURVE",
"207 232 OFFCURVE",
"201 233 QCURVE SMOOTH",
"147 243 OFFCURVE",
"121 244 QCURVE",
"103 244 OFFCURVE",
"57 224 OFFCURVE",
"51 213 QCURVE SMOOTH",
"46 204 OFFCURVE",
"75 168 OFFCURVE",
"90 164 QCURVE SMOOTH",
"137 153 OFFCURVE",
"214 139 QCURVE SMOOTH",
"245 133 LINE",
"224 107 OFFCURVE",
"180 57 QCURVE SMOOTH",
"119 -14 OFFCURVE",
"106 -30 QCURVE",
"99 -38 OFFCURVE",
"95 -70 OFFCURVE",
"93 -78 QCURVE",
"101 -80 OFFCURVE",
"133 -89 OFFCURVE",
"141 -86 QCURVE",
"172 -70 OFFCURVE",
"210 -45 QCURVE",
"215 -42 OFFCURVE",
"227 -34 OFFCURVE",
"235 -29 QCURVE",
"345 122 LINE",
"391 126 LINE SMOOTH",
"544 139 OFFCURVE",
"632 150 QCURVE SMOOTH",
"651 153 OFFCURVE",
"679 172 QCURVE SMOOTH",
"682 174 OFFCURVE",
"701 185 QCURVE",
"682 194 LINE",
"650 211 OFFCURVE",
"631 212 QCURVE SMOOTH",
"576 215 OFFCURVE",
"494 217 OFFCURVE",
"467 218 QCURVE SMOOTH",
"412 219 LINE",
"437 254 OFFCURVE",
"485 324 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
82 63 2 4 3 93 53 47 3 1 4 2 76 31 24 8 3 0 73 0 3 4 3 133 5 1 4 1 4 133 0 1 2 1 133 0 2 0 2 133 0 0 0 118 91 90 89 83 59 57 46 44 41 39 81 6 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 903;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = lessequal;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"301 407 OFFCURVE",
"380 441 QCURVE SMOOTH",
"444 468 OFFCURVE",
"531 508 OFFCURVE",
"566 529 QCURVE SMOOTH",
"611 557 OFFCURVE",
"611 594 QCURVE SMOOTH",
"611 623 OFFCURVE",
"586 652 QCURVE",
"583 656 OFFCURVE",
"578 656 QCURVE SMOOTH",
"572 656 OFFCURVE",
"556 646 OFFCURVE",
"553 644 QCURVE",
"547 639 OFFCURVE",
"533 631 QCURVE",
"482 608 OFFCURVE",
"361 549 OFFCURVE",
"340 539 QCURVE SMOOTH",
"276 506 OFFCURVE",
"219 479 QCURVE SMOOTH",
"190 466 OFFCURVE",
"176 462 QCURVE",
"148 451 OFFCURVE",
"120 434 OFFCURVE",
"100 398 OFFCURVE",
"96 364 QCURVE",
"101 357 OFFCURVE",
"110 339 QCURVE",
"125 313 OFFCURVE",
"143 285 OFFCURVE",
"157 274 QCURVE SMOOTH",
"195 242 OFFCURVE",
"290 189 OFFCURVE",
"360 155 QCURVE SMOOTH",
"420 126 OFFCURVE",
"505 79 OFFCURVE",
"540 53 QCURVE",
"545 49 OFFCURVE",
"566 71 OFFCURVE",
"583 108 OFFCURVE",
"583 127 QCURVE SMOOTH",
"583 155 OFFCURVE",
"561 173 QCURVE SMOOTH",
"539 190 OFFCURVE",
"480 220 OFFCURVE",
"422 246 QCURVE SMOOTH",
"368 270 OFFCURVE",
"298 306 OFFCURVE",
"275 325 QCURVE SMOOTH",
"248 347 OFFCURVE",
"248 363 QCURVE SMOOTH",
"248 382 OFFCURVE",
"287 401 QCURVE"
);
},
{
closed = 1;
nodes = (
"436 19 OFFCURVE",
"405 18 QCURVE SMOOTH",
"249 18 OFFCURVE",
"171 15 QCURVE SMOOTH",
"130 14 OFFCURVE",
"76 3 OFFCURVE",
"50 -18 QCURVE",
"54 -24 OFFCURVE",
"69 -49 OFFCURVE",
"76 -55 QCURVE SMOOTH",
"117 -92 OFFCURVE",
"182 -87 QCURVE SMOOTH",
"316 -79 OFFCURVE",
"384 -76 QCURVE SMOOTH",
"569 -68 LINE",
"568 -27 OFFCURVE",
"530 19 OFFCURVE",
"498 19 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
26 1 2 0 64 1 1 2 2 76 0 0 2 0 133 3 1 2 1 1 2 87 3 1 2 2 1 95 0 1 2 1 79 54 54 54 71 54 66 59 56 43 41 4 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 661;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = greaterequal;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"186 86 OFFCURVE",
"213 101 QCURVE SMOOTH",
"457 239 OFFCURVE",
"531 325 QCURVE SMOOTH",
"546 343 OFFCURVE",
"546 363 QCURVE SMOOTH",
"546 400 OFFCURVE",
"489 448 QCURVE SMOOTH",
"461 471 LINE SMOOTH",
"362 552 OFFCURVE",
"346 563 QCURVE",
"302 596 OFFCURVE",
"252 627 QCURVE SMOOTH",
"212 653 OFFCURVE",
"168 684 QCURVE",
"149 669 LINE",
"148 663 OFFCURVE",
"141 643 OFFCURVE",
"141 637 QCURVE SMOOTH",
"141 635 OFFCURVE",
"143 629 QCURVE SMOOTH",
"150 610 OFFCURVE",
"170 588 OFFCURVE",
"189 571 QCURVE SMOOTH",
"213 549 OFFCURVE",
"220 541 QCURVE",
"274 507 OFFCURVE",
"385 414 QCURVE SMOOTH",
"399 402 OFFCURVE",
"406 397 QCURVE",
"424 382 OFFCURVE",
"424 370 QCURVE SMOOTH",
"424 362 OFFCURVE",
"412 346 OFFCURVE",
"396 330 QCURVE SMOOTH",
"370 304 OFFCURVE",
"303 269 OFFCURVE",
"254 250 QCURVE SMOOTH",
"200 229 OFFCURVE",
"133 193 OFFCURVE",
"107 164 QCURVE",
"93 147 OFFCURVE",
"93 111 QCURVE SMOOTH",
"93 101 OFFCURVE",
"95 85 QCURVE",
"96 79 OFFCURVE",
"118 73 OFFCURVE",
"134 73 QCURVE SMOOTH",
"151 73 OFFCURVE",
"179 79 OFFCURVE",
"185 85 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"482 1 OFFCURVE",
"389 15 OFFCURVE",
"328 15 QCURVE SMOOTH",
"259 15 OFFCURVE",
"163 8 QCURVE SMOOTH",
"128 6 LINE SMOOTH",
"106 5 OFFCURVE",
"78 -4 QCURVE SMOOTH",
"65 -8 OFFCURVE",
"50 -20 OFFCURVE",
"50 -26 QCURVE SMOOTH",
"50 -38 OFFCURVE",
"70 -49 QCURVE SMOOTH",
"111 -72 OFFCURVE",
"159 -72 QCURVE SMOOTH",
"179 -72 OFFCURVE",
"223 -66 QCURVE",
"244 -62 OFFCURVE",
"267 -60 QCURVE SMOOTH",
"295 -58 LINE SMOOTH",
"310 -57 OFFCURVE",
"385 -53 OFFCURVE",
"416 -53 QCURVE SMOOTH",
"473 -53 OFFCURVE",
"520 -61 QCURVE",
"526 -61 OFFCURVE",
"538 -59 QCURVE",
"545 -51 OFFCURVE",
"545 -44 QCURVE SMOOTH",
"545 -38 OFFCURVE",
"533 -28 OFFCURVE",
"522 -21 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
71 1 1 3 1 76 35 31 2 0 74 0 0 4 0 133 0 3 1 2 3 89 0 4 0 1 2 4 1 103 0 3 3 2 97 0 2 3 2 81 80 78 77 75 68 66 62 58 33 5 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 596;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = lozenge;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"432 425 OFFCURVE",
"384 491 OFFCURVE",
"358 558 OFFCURVE",
"338 621 QCURVE SMOOTH",
"330 647 LINE SMOOTH",
"326 659 OFFCURVE",
"290 684 OFFCURVE",
"282 681 QCURVE",
"226 656 OFFCURVE",
"204 622 QCURVE SMOOTH",
"191 601 OFFCURVE",
"175 559 OFFCURVE",
"165 527 QCURVE SMOOTH",
"154 490 OFFCURVE",
"134 441 OFFCURVE",
"116 418 QCURVE SMOOTH",
"75 368 OFFCURVE",
"50 328 OFFCURVE",
"50 305 QCURVE SMOOTH",
"50 285 OFFCURVE",
"71 232 OFFCURVE",
"96 190 QCURVE",
"126 148 OFFCURVE",
"247 -12 OFFCURVE",
"275 -48 QCURVE",
"302 -46 OFFCURVE",
"400 92 OFFCURVE",
"488 257 OFFCURVE",
"492 282 QCURVE SMOOTH",
"493 289 OFFCURVE",
"501 322 OFFCURVE",
"501 336 QCURVE SMOOTH",
"501 371 OFFCURVE",
"473 393 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"259 102 OFFCURVE",
"188 246 OFFCURVE",
"168 312 QCURVE",
"233 427 OFFCURVE",
"258 473 QCURVE",
"275 448 OFFCURVE",
"337 380 QCURVE SMOOTH",
"385 329 OFFCURVE",
"396 312 QCURVE",
"393 303 OFFCURVE",
"336 195 QCURVE SMOOTH",
"287 103 OFFCURVE",
"287 101 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
43 41 37 3 0 74 8 1 0 73 0 0 0 118 46 45 1 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 551;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = uniE0FF;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"618 419 LINE",
"618 477 LINE SMOOTH",
"618 491 OFFCURVE",
"616 602 OFFCURVE",
"612 649 QCURVE SMOOTH",
"610 669 OFFCURVE",
"585 712 OFFCURVE",
"569 727 QCURVE SMOOTH",
"563 733 OFFCURVE",
"539 740 OFFCURVE",
"527 740 QCURVE SMOOTH",
"513 740 OFFCURVE",
"503 735 QCURVE SMOOTH",
"426 698 OFFCURVE",
"328 701 QCURVE",
"317 702 OFFCURVE",
"291 692 OFFCURVE",
"278 686 QCURVE",
"267 680 OFFCURVE",
"248 673 QCURVE",
"282 637 OFFCURVE",
"330 614 OFFCURVE",
"367 607 QCURVE SMOOTH",
"409 600 OFFCURVE",
"433 592 QCURVE",
"442 590 OFFCURVE",
"461 573 OFFCURVE",
"462 565 QCURVE SMOOTH",
"471 499 LINE SMOOTH",
"493 357 OFFCURVE",
"493 274 QCURVE SMOOTH",
"493 213 OFFCURVE",
"481 159 QCURVE",
"429 150 OFFCURVE",
"419 149 QCURVE SMOOTH",
"371 143 LINE SMOOTH",
"245 125 OFFCURVE",
"188 122 QCURVE",
"186 146 OFFCURVE",
"184 158 QCURVE",
"178 221 OFFCURVE",
"179 248 QCURVE",
"179 269 OFFCURVE",
"180 280 QCURVE",
"182 439 OFFCURVE",
"191 536 QCURVE",
"192 543 OFFCURVE",
"197 576 QCURVE",
"202 601 OFFCURVE",
"202 615 QCURVE SMOOTH",
"202 629 OFFCURVE",
"189 646 OFFCURVE",
"173 649 QCURVE",
"165 651 OFFCURVE",
"147 651 QCURVE SMOOTH",
"102 651 OFFCURVE",
"59 631 QCURVE SMOOTH",
"53 628 OFFCURVE",
"51 607 OFFCURVE",
"51 582 QCURVE SMOOTH",
"51 564 OFFCURVE",
"50 557 QCURVE SMOOTH",
"49 549 OFFCURVE",
"52 530 OFFCURVE",
"53 525 QCURVE",
"55 375 LINE SMOOTH",
"57 175 OFFCURVE",
"59 77 QCURVE SMOOTH",
"59 69 OFFCURVE",
"64 52 OFFCURVE",
"69 49 QCURVE",
"81 41 OFFCURVE",
"87 36 QCURVE",
"117 14 OFFCURVE",
"157 -11 OFFCURVE",
"178 -20 QCURVE SMOOTH",
"185 -23 OFFCURVE",
"203 -15 OFFCURVE",
"218 -6 QCURVE SMOOTH",
"234 4 OFFCURVE",
"242 7 QCURVE",
"246 8 OFFCURVE",
"275 18 OFFCURVE",
"288 20 QCURVE",
"315 23 OFFCURVE",
"374 27 QCURVE SMOOTH",
"519 39 OFFCURVE",
"593 48 QCURVE SMOOTH",
"602 49 OFFCURVE",
"625 75 OFFCURVE",
"625 85 QCURVE SMOOTH",
"625 152 OFFCURVE",
"621 320 OFFCURVE",
"620 353 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
73 1 1 3 49 31 28 3 2 1 2 76 0 4 3 4 133 0 3 1 3 133 0 1 2 1 133 0 2 0 2 133 0 0 0 118 83 81 79 78 56 55 39 37 23 5 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 675;
}
);
note = uniE0FF;
unicode = E0FF;
},
{
glyphname = uniE977;
lastChange = "2019-06-19 01:04:41 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"151 253 LINE SMOOTH",
"147 337 OFFCURVE",
"145 421 QCURVE SMOOTH",
"144 455 OFFCURVE",
"121 504 OFFCURVE",
"99 523 QCURVE",
"89 531 OFFCURVE",
"80 531 QCURVE SMOOTH",
"69 531 OFFCURVE",
"52 510 OFFCURVE",
"51 493 QCURVE",
"50 488 OFFCURVE",
"50 477 QCURVE SMOOTH",
"50 462 OFFCURVE",
"51 454 QCURVE",
"64 309 LINE",
"67 273 LINE",
"67 197 LINE",
"67 163 LINE SMOOTH",
"68 130 OFFCURVE",
"94 93 OFFCURVE",
"117 90 QCURVE SMOOTH",
"134 88 OFFCURVE",
"156 117 OFFCURVE",
"156 141 QCURVE SMOOTH",
"156 149 OFFCURVE",
"155 153 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
26 9 1 3 0 73 0 0 0 118 19 17 1 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 206;
}
);
leftKerningGroup = i;
note = uniE977;
rightKerningGroup = i;
unicode = E977;
},
{
glyphname = uniE9AD;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"565 479 OFFCURVE",
"529 490 OFFCURVE",
"529 504 QCURVE SMOOTH",
"529 509 OFFCURVE",
"535 538 OFFCURVE",
"535 550 QCURVE SMOOTH",
"535 567 OFFCURVE",
"493 590 OFFCURVE",
"471 587 QCURVE",
"441 584 OFFCURVE",
"441 551 QCURVE",
"440 538 OFFCURVE",
"442 513 OFFCURVE",
"442 507 QCURVE SMOOTH",
"442 495 OFFCURVE",
"429 486 OFFCURVE",
"407 486 QCURVE SMOOTH",
"356 486 OFFCURVE",
"343 488 QCURVE",
"304 498 OFFCURVE",
"260 498 QCURVE SMOOTH",
"217 498 OFFCURVE",
"161 488 QCURVE SMOOTH",
"124 482 OFFCURVE",
"88 433 OFFCURVE",
"88 400 QCURVE SMOOTH",
"88 365 OFFCURVE",
"106 336 QCURVE SMOOTH",
"141 281 LINE SMOOTH",
"183 215 OFFCURVE",
"189 205 QCURVE SMOOTH",
"198 189 OFFCURVE",
"198 170 QCURVE SMOOTH",
"198 142 OFFCURVE",
"179 117 QCURVE SMOOTH",
"151 81 OFFCURVE",
"112 81 QCURVE SMOOTH",
"107 81 OFFCURVE",
"93 83 QCURVE",
"88 84 OFFCURVE",
"64 92 OFFCURVE",
"57 92 QCURVE SMOOTH",
"54 92 OFFCURVE",
"50 88 OFFCURVE",
"50 86 QCURVE",
"51 83 LINE",
"62 54 OFFCURVE",
"118 20 OFFCURVE",
"153 20 QCURVE SMOOTH",
"242 21 OFFCURVE",
"278 110 QCURVE SMOOTH",
"289 137 OFFCURVE",
"289 160 QCURVE SMOOTH",
"289 202 OFFCURVE",
"256 244 QCURVE SMOOTH",
"215 295 OFFCURVE",
"189 337 QCURVE SMOOTH",
"178 356 OFFCURVE",
"178 374 QCURVE SMOOTH",
"178 398 OFFCURVE",
"212 431 OFFCURVE",
"240 433 QCURVE",
"256 435 OFFCURVE",
"378 424 OFFCURVE",
"391 421 QCURVE",
"418 416 OFFCURVE",
"437 408 OFFCURVE",
"439 368 OFFCURVE",
"439 362 QCURVE",
"451 136 OFFCURVE",
"460 66 QCURVE",
"461 51 OFFCURVE",
"486 34 OFFCURVE",
"503 34 QCURVE SMOOTH",
"526 34 OFFCURVE",
"536 54 OFFCURVE",
"536 76 QCURVE",
"535 119 OFFCURVE",
"535 243 QCURVE SMOOTH",
"535 408 LINE SMOOTH",
"535 424 OFFCURVE",
"549 438 OFFCURVE",
"565 438 QCURVE SMOOTH",
"627 437 LINE SMOOTH",
"631 437 OFFCURVE",
"631 451 QCURVE SMOOTH",
"631 460 OFFCURVE",
"626 475 OFFCURVE",
"622 476 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
17 1 1 4 1 76 77 1 5 74 0 5 6 5 133 0 6 7 6 133 0 3 0 4 0 3 4 128 0 1 4 2 4 1 2 128 0 7 0 0 3 7 0 105 0 4 1 2 4 89 0 4 4 2 97 0 2 4 2 81 88 87 72 70 68 66 52 50 47 45 40 38 39 51 8 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 681;
}
);
note = uniE9AD;
unicode = E9AD;
},
{
glyphname = U.alt1;
lastChange = "2019-10-02 10:54:02 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"563 594 OFFCURVE",
"540 627 OFFCURVE",
"518 654 QCURVE SMOOTH",
"488 692 OFFCURVE",
"484 698 QCURVE",
"474 671 OFFCURVE",
"474 670 QCURVE SMOOTH",
"474 665 OFFCURVE",
"476 658 OFFCURVE",
"477 655 QCURVE",
"489 591 OFFCURVE",
"489 529 QCURVE SMOOTH",
"489 301 OFFCURVE",
"320 141 QCURVE SMOOTH",
"303 125 OFFCURVE",
"255 101 OFFCURVE",
"245 107 QCURVE SMOOTH",
"227 117 OFFCURVE",
"199 162 OFFCURVE",
"195 184 QCURVE SMOOTH",
"185 244 OFFCURVE",
"185 309 QCURVE SMOOTH",
"185 427 OFFCURVE",
"218 554 QCURVE",
"221 568 OFFCURVE",
"221 579 QCURVE SMOOTH",
"221 631 OFFCURVE",
"143 653 QCURVE SMOOTH",
"131 656 OFFCURVE",
"121 656 QCURVE SMOOTH",
"99 656 OFFCURVE",
"75 625 OFFCURVE",
"73 600 QCURVE SMOOTH",
"67 547 LINE SMOOTH",
"66 535 OFFCURVE",
"57 451 OFFCURVE",
"50 355 OFFCURVE",
"50 307 QCURVE SMOOTH",
"50 199 OFFCURVE",
"149 57 OFFCURVE",
"251 17 QCURVE SMOOTH",
"283 5 OFFCURVE",
"315 5 QCURVE SMOOTH",
"376 5 OFFCURVE",
"418 48 QCURVE SMOOTH",
"502 134 OFFCURVE",
"539 205 QCURVE SMOOTH",
"591 309 OFFCURVE",
"591 424 QCURVE SMOOTH",
"591 502 OFFCURVE",
"569 575 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
45 1 1 74 0 1 0 1 133 0 0 0 118 43 38 2 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 641;
}
);
leftKerningGroup = U;
note = U.alt1;
rightKerningGroup = U;
unicode = F002;
},
{
glyphname = quoteright.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"84 732 OFFCURVE",
"84 699 QCURVE SMOOTH",
"84 687 OFFCURVE",
"87 645 QCURVE SMOOTH",
"88 623 LINE",
"83 597 OFFCURVE",
"71 559 QCURVE SMOOTH",
"60 523 OFFCURVE",
"50 480 OFFCURVE",
"50 457 QCURVE SMOOTH",
"50 453 OFFCURVE",
"63 449 QCURVE",
"67 446 OFFCURVE",
"72 450 QCURVE",
"113 490 OFFCURVE",
"167 610 OFFCURVE",
"180 672 QCURVE SMOOTH",
"188 710 OFFCURVE",
"189 728 QCURVE",
"189 731 OFFCURVE",
"191 755 QCURVE SMOOTH",
"192 770 OFFCURVE",
"149 770 QCURVE SMOOTH",
"129 770 OFFCURVE",
"92 763 OFFCURVE",
"91 759 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
21 20 4 3 0 73 0 0 0 118 33 1 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 241;
}
);
note = quoteright.alt1;
unicode = F003;
},
{
glyphname = bullet.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"396 501 OFFCURVE",
"262 593 OFFCURVE",
"178 601 QCURVE",
"156 592 LINE",
"153 591 OFFCURVE",
"138 585 OFFCURVE",
"115 574 OFFCURVE",
"107 566 QCURVE",
"50 513 OFFCURVE",
"50 437 QCURVE SMOOTH",
"50 417 OFFCURVE",
"55 390 QCURVE SMOOTH",
"68 325 OFFCURVE",
"180 240 OFFCURVE",
"251 240 QCURVE SMOOTH",
"311 240 OFFCURVE",
"364 273 QCURVE SMOOTH",
"397 293 OFFCURVE",
"432 352 OFFCURVE",
"432 385 QCURVE SMOOTH",
"432 408 OFFCURVE",
"423 430 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
18 1 0 74 0 0 0 118 37 1 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 482;
}
);
note = bullet.alt1;
unicode = F004;
},
{
glyphname = oe.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"622 142 OFFCURVE",
"613 142 QCURVE SMOOTH",
"604 142 OFFCURVE",
"593 131 QCURVE SMOOTH",
"581 119 OFFCURVE",
"575 111 QCURVE",
"562 96 OFFCURVE",
"545 79 OFFCURVE",
"534 75 QCURVE",
"515 67 OFFCURVE",
"485 67 QCURVE SMOOTH",
"465 67 OFFCURVE",
"434 74 OFFCURVE",
"430 79 QCURVE",
"401 100 LINE",
"411 111 OFFCURVE",
"439 129 QCURVE SMOOTH",
"442 131 OFFCURVE",
"466 147 OFFCURVE",
"471 154 QCURVE",
"490 176 OFFCURVE",
"519 199 QCURVE SMOOTH",
"552 226 OFFCURVE",
"570 248 QCURVE",
"580 259 OFFCURVE",
"593 288 OFFCURVE",
"593 304 QCURVE SMOOTH",
"593 354 OFFCURVE",
"522 378 QCURVE SMOOTH",
"477 392 OFFCURVE",
"445 392 QCURVE SMOOTH",
"408 392 OFFCURVE",
"371 375 QCURVE SMOOTH",
"356 368 LINE",
"343 374 OFFCURVE",
"306 388 OFFCURVE",
"297 392 QCURVE",
"260 405 OFFCURVE",
"230 405 QCURVE SMOOTH",
"173 405 OFFCURVE",
"132 360 QCURVE",
"126 354 OFFCURVE",
"115 334 QCURVE",
"105 314 OFFCURVE",
"97 307 QCURVE SMOOTH",
"71 284 OFFCURVE",
"50 227 OFFCURVE",
"50 192 QCURVE SMOOTH",
"50 180 OFFCURVE",
"52 156 QCURVE SMOOTH",
"56 115 OFFCURVE",
"102 52 OFFCURVE",
"138 32 QCURVE",
"164 16 OFFCURVE",
"195 11 QCURVE",
"204 11 LINE",
"224 9 OFFCURVE",
"233 9 QCURVE SMOOTH",
"251 9 OFFCURVE",
"267 12 QCURVE",
"286 14 LINE",
"318 25 OFFCURVE",
"353 53 QCURVE",
"411 0 OFFCURVE",
"496 0 QCURVE SMOOTH",
"595 0 OFFCURVE",
"648 77 QCURVE",
"651 82 OFFCURVE",
"651 88 QCURVE SMOOTH",
"651 99 OFFCURVE",
"635 123 OFFCURVE",
"633 125 QCURVE"
);
},
{
closed = 1;
nodes = (
"238 64 LINE",
"224 62 OFFCURVE",
"220 62 QCURVE SMOOTH",
"193 62 OFFCURVE",
"181 88 QCURVE",
"172 110 OFFCURVE",
"159 160 OFFCURVE",
"156 169 QCURVE",
"163 216 OFFCURVE",
"180 280 OFFCURVE",
"196 305 QCURVE SMOOTH",
"203 316 LINE",
"225 345 OFFCURVE",
"239 347 QCURVE SMOOTH",
"246 348 OFFCURVE",
"254 348 QCURVE SMOOTH",
"261 348 OFFCURVE",
"272 343 OFFCURVE",
"273 342 QCURVE",
"280 338 OFFCURVE",
"286 318 QCURVE",
"290 302 OFFCURVE",
"294 297 QCURVE",
"280 265 OFFCURVE",
"280 221 QCURVE SMOOTH",
"280 199 OFFCURVE",
"283 181 QCURVE",
"293 141 OFFCURVE",
"308 113 QCURVE",
"294 96 OFFCURVE",
"269 73 OFFCURVE",
"254 69 QCURVE",
"248 66 OFFCURVE",
"239 64 QCURVE"
);
},
{
closed = 1;
nodes = (
"351 250 OFFCURVE",
"393 295 OFFCURVE",
"460 324 OFFCURVE",
"489 326 QCURVE",
"494 325 OFFCURVE",
"511 314 OFFCURVE",
"512 310 QCURVE",
"515 301 OFFCURVE",
"500 274 OFFCURVE",
"493 269 QCURVE",
"473 257 OFFCURVE",
"426 214 QCURVE SMOOTH",
"388 179 OFFCURVE",
"378 171 QCURVE",
"376 170 OFFCURVE",
"358 214 OFFCURVE",
"355 226 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 88 values pushed */
37 1 7 4 97 82 2 6 9 76 56 2 3 5 6 8 1 1 8 4 76 0 6 9 5 9 6 5 128 0 3 0 7 9 3 7 105 0 4 0 9 6 4 9 105 0 5 8 0 5 89 0 8 2 1 1 0 8 1 105 0 5 5 0 97 0 0 5 0 81 119 117 102 101 90 88 70 68 61 59 38 47 17 37 37 10 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 701;
}
);
note = oe.alt1;
unicode = F005;
},
{
glyphname = X.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"145 37 LINE",
"167 35 OFFCURVE",
"178 35 QCURVE SMOOTH",
"209 35 OFFCURVE",
"259 52 OFFCURVE",
"280 74 QCURVE SMOOTH",
"292 87 OFFCURVE",
"328 113 OFFCURVE",
"345 124 QCURVE SMOOTH",
"367 138 OFFCURVE",
"377 146 QCURVE",
"413 172 LINE",
"410 174 OFFCURVE",
"441 150 QCURVE SMOOTH",
"524 86 OFFCURVE",
"556 64 QCURVE SMOOTH",
"604 31 OFFCURVE",
"678 -2 OFFCURVE",
"721 0 QCURVE",
"724 12 OFFCURVE",
"724 20 QCURVE SMOOTH",
"724 37 OFFCURVE",
"705 59 OFFCURVE",
"686 72 QCURVE SMOOTH",
"590 136 OFFCURVE",
"529 182 QCURVE SMOOTH",
"514 193 OFFCURVE",
"489 224 QCURVE SMOOTH",
"474 242 LINE",
"667 445 LINE",
"697 474 LINE SMOOTH",
"731 508 OFFCURVE",
"738 516 QCURVE",
"759 542 OFFCURVE",
"759 568 QCURVE SMOOTH",
"759 607 OFFCURVE",
"719 635 QCURVE SMOOTH",
"677 663 OFFCURVE",
"677 663 QCURVE",
"590 563 LINE SMOOTH",
"466 421 OFFCURVE",
"396 340 QCURVE",
"386 352 OFFCURVE",
"382 358 QCURVE SMOOTH",
"377 365 OFFCURVE",
"365 380 OFFCURVE",
"358 388 QCURVE",
"343 407 LINE SMOOTH",
"326 430 OFFCURVE",
"303 454 OFFCURVE",
"287 464 QCURVE",
"252 484 OFFCURVE",
"217 484 QCURVE SMOOTH",
"191 484 OFFCURVE",
"144 462 OFFCURVE",
"126 441 QCURVE SMOOTH",
"115 428 OFFCURVE",
"105 396 OFFCURVE",
"106 357 OFFCURVE",
"106 351 QCURVE SMOOTH",
"106 336 OFFCURVE",
"105 329 QCURVE",
"114 325 LINE",
"132 348 LINE",
"165 387 OFFCURVE",
"196 387 QCURVE SMOOTH",
"225 387 OFFCURVE",
"261 354 QCURVE SMOOTH",
"277 340 OFFCURVE",
"305 300 QCURVE",
"327 271 LINE",
"296 238 LINE",
"249 190 LINE",
"215 158 OFFCURVE",
"155 114 OFFCURVE",
"121 101 QCURVE SMOOTH",
"95 91 OFFCURVE",
"82 91 QCURVE SMOOTH",
"65 91 OFFCURVE",
"50 103 QCURVE",
"58 69 OFFCURVE",
"86 39 OFFCURVE",
"111 38 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
53 40 20 19 11 2 6 0 1 61 1 3 4 2 76 43 1 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
9 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 3 4 3 134 0 2 0 1 0 2 1 105 0 0 4 4 0 89 0 0 0 4 97 6 5 2 4 0 4 81 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 4 5 3 5 4 3 128 0 3 3 132 0 2 0 1 0 2 1 105 0 0 5 5 0 89 0 0 0 5 97 6 1 5 0 5 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 3 4 3 134 0 2 0 1 0 2 1 105 0 0 4 4 0 89 0 0 0 4 97 6 5 2 4 0 4 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 0 82 0 81 80 78 64 63 43 42 35 7 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 810;
}
);
note = X.alt1;
unicode = F007;
},
{
glyphname = a.alt1;
lastChange = "2019-06-19 01:37:09 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"246 444 OFFCURVE",
"184 431 QCURVE",
"172 430 OFFCURVE",
"153 427 QCURVE",
"137 425 OFFCURVE",
"128 414 QCURVE",
"113 394 OFFCURVE",
"110 378 QCURVE",
"109 366 OFFCURVE",
"133 347 OFFCURVE",
"145 347 QCURVE",
"190 347 OFFCURVE",
"242 360 OFFCURVE",
"268 364 QCURVE",
"275 366 OFFCURVE",
"290 361 QCURVE",
"305 332 OFFCURVE",
"305 299 QCURVE SMOOTH",
"305 277 OFFCURVE",
"299 241 QCURVE",
"295 213 LINE",
"246 234 OFFCURVE",
"231 240 QCURVE",
"202 252 OFFCURVE",
"176 252 QCURVE SMOOTH",
"124 252 OFFCURVE",
"69 208 QCURVE SMOOTH",
"43 187 OFFCURVE",
"44 152 QCURVE SMOOTH",
"45 115 OFFCURVE",
"86 51 OFFCURVE",
"155 15 OFFCURVE",
"192 15 QCURVE SMOOTH",
"200 15 OFFCURVE",
"214 16 QCURVE",
"224 18 OFFCURVE",
"280 30 QCURVE",
"285 7 LINE",
"293 -12 LINE SMOOTH",
"299 -27 OFFCURVE",
"306 -31 OFFCURVE",
"317 -39 QCURVE",
"333 -49 OFFCURVE",
"348 -49 QCURVE SMOOTH",
"363 -49 OFFCURVE",
"382 -41 QCURVE",
"381 40 LINE",
"381 75 OFFCURVE",
"382 93 QCURVE SMOOTH",
"383 118 OFFCURVE",
"389 168 QCURVE SMOOTH",
"395 219 OFFCURVE",
"396 245 QCURVE SMOOTH",
"397 276 OFFCURVE",
"398 293 QCURVE SMOOTH",
"400 323 OFFCURVE",
"394 347 QCURVE SMOOTH",
"383 391 OFFCURVE",
"324 444 OFFCURVE",
"278 444 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"184 95 OFFCURVE",
"180 95 QCURVE SMOOTH",
"167 95 OFFCURVE",
"143 107 OFFCURVE",
"135 118 QCURVE",
"128 131 OFFCURVE",
"128 149 QCURVE SMOOTH",
"128 169 OFFCURVE",
"137 180 QCURVE SMOOTH",
"142 186 OFFCURVE",
"162 192 OFFCURVE",
"169 192 QCURVE SMOOTH",
"187 192 OFFCURVE",
"225 170 OFFCURVE",
"261 142 QCURVE",
"249 123 OFFCURVE",
"217 104 OFFCURVE",
"193 97 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
2 1 0 6 8 1 2 0 53 1 1 2 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
9 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 6 0 6 133 0 2 0 1 0 2 1 128 0 1 4 3 1 89 0 0 0 4 3 0 4 105 0 1 1 3 97 5 1 3 1 3 81 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 42 values pushed */
0 6 0 6 133 0 2 0 1 0 2 1 128 0 5 3 5 134 0 1 4 3 1 89 0 0 0 4 3 0 4 105 0 1 1 3 97 0 3 1 3 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
0 6 0 6 133 0 2 0 1 0 2 1 128 0 1 4 3 1 89 0 0 0 4 3 0 4 105 0 1 1 3 97 5 1 3 1 3 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
42 36 36 38 36 24 44 7 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 454;
}
);
leftKerningGroup = a;
note = a.alt1;
rightKerningGroup = a;
unicode = F009;
},
{
glyphname = ntilde.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"137 433 OFFCURVE",
"186 421 OFFCURVE",
"194 419 QCURVE",
"229 424 LINE SMOOTH",
"294 432 OFFCURVE",
"339 441 QCURVE SMOOTH",
"348 443 OFFCURVE",
"369 463 OFFCURVE",
"374 467 QCURVE",
"369 471 OFFCURVE",
"349 488 OFFCURVE",
"340 490 QCURVE SMOOTH",
"283 503 OFFCURVE",
"242 505 QCURVE SMOOTH",
"229 506 OFFCURVE",
"203 506 QCURVE SMOOTH",
"160 506 OFFCURVE",
"125 502 QCURVE SMOOTH",
"115 501 OFFCURVE",
"95 482 OFFCURVE",
"95 474 QCURVE SMOOTH",
"95 466 OFFCURVE",
"109 445 OFFCURVE",
"117 441 QCURVE"
);
},
{
closed = 1;
nodes = (
"444 145 OFFCURVE",
"437 171 OFFCURVE",
"437 181 QCURVE SMOOTH",
"437 193 OFFCURVE",
"439 211 OFFCURVE",
"440 217 QCURVE",
"441 225 OFFCURVE",
"443 247 OFFCURVE",
"443 262 QCURVE SMOOTH",
"443 301 OFFCURVE",
"387 360 OFFCURVE",
"346 366 QCURVE SMOOTH",
"328 368 OFFCURVE",
"320 368 QCURVE SMOOTH",
"288 368 OFFCURVE",
"229 348 OFFCURVE",
"186 328 QCURVE",
"183 327 OFFCURVE",
"159 314 OFFCURVE",
"149 314 QCURVE SMOOTH",
"134 314 OFFCURVE",
"120 337 QCURVE SMOOTH",
"116 344 OFFCURVE",
"89 351 OFFCURVE",
"81 349 QCURVE SMOOTH",
"73 347 OFFCURVE",
"58 329 OFFCURVE",
"54 318 QCURVE",
"50 309 OFFCURVE",
"50 290 QCURVE SMOOTH",
"50 278 LINE",
"51 263 OFFCURVE",
"51 234 QCURVE SMOOTH",
"53 160 OFFCURVE",
"57 124 QCURVE SMOOTH",
"61 82 OFFCURVE",
"78 29 QCURVE SMOOTH",
"82 17 OFFCURVE",
"114 0 OFFCURVE",
"130 0 QCURVE SMOOTH",
"139 0 OFFCURVE",
"145 3 QCURVE",
"165 14 OFFCURVE",
"165 39 QCURVE SMOOTH",
"165 51 OFFCURVE",
"164 58 QCURVE SMOOTH",
"161 85 OFFCURVE",
"161 114 QCURVE SMOOTH",
"162 158 LINE",
"163 172 OFFCURVE",
"163 200 QCURVE",
"192 216 LINE SMOOTH",
"214 228 OFFCURVE",
"225 235 QCURVE SMOOTH",
"243 247 LINE",
"257 258 OFFCURVE",
"271 265 QCURVE",
"282 270 OFFCURVE",
"304 276 QCURVE SMOOTH",
"324 282 LINE",
"326 268 OFFCURVE",
"326 262 QCURVE",
"328 249 OFFCURVE",
"330 227 QCURVE",
"330 220 OFFCURVE",
"327 207 OFFCURVE",
"327 199 QCURVE",
"326 191 OFFCURVE",
"326 175 QCURVE SMOOTH",
"326 117 OFFCURVE",
"385 53 OFFCURVE",
"441 48 QCURVE SMOOTH",
"470 45 OFFCURVE",
"504 71 OFFCURVE",
"504 97 QCURVE SMOOTH",
"504 124 OFFCURVE",
"475 138 OFFCURVE",
"445 138 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
20 14 2 4 0 55 52 50 41 4 2 3 2 76 1 1 0 4 0 133 0 4 3 4 133 0 3 2 3 133 0 2 2 118 87 86 82 80 62 60 17 38 5 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 554;
}
);
note = ntilde.alt1;
unicode = F00A;
},
{
glyphname = z.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"253 317 LINE SMOOTH",
"185 207 OFFCURVE",
"153 151 QCURVE SMOOTH",
"132 115 OFFCURVE",
"132 80 QCURVE SMOOTH",
"132 51 OFFCURVE",
"166 11 OFFCURVE",
"203 5 QCURVE SMOOTH",
"234 0 OFFCURVE",
"278 0 QCURVE SMOOTH",
"302 0 OFFCURVE",
"350 2 QCURVE SMOOTH",
"386 3 LINE SMOOTH",
"421 3 OFFCURVE",
"475 16 OFFCURVE",
"498 35 QCURVE",
"502 38 OFFCURVE",
"516 49 OFFCURVE",
"526 60 OFFCURVE",
"526 69 QCURVE SMOOTH",
"526 73 OFFCURVE",
"522 83 QCURVE",
"510 108 OFFCURVE",
"484 108 QCURVE SMOOTH",
"475 108 OFFCURVE",
"466 105 QCURVE",
"420 94 OFFCURVE",
"357 85 QCURVE",
"336 81 OFFCURVE",
"291 79 QCURVE",
"274 79 OFFCURVE",
"265 78 QCURVE",
"260 91 LINE",
"276 117 LINE SMOOTH",
"303 163 OFFCURVE",
"333 210 QCURVE",
"333 210 OFFCURVE",
"405 315 QCURVE SMOOTH",
"425 343 LINE",
"442 369 OFFCURVE",
"442 393 QCURVE SMOOTH",
"442 411 OFFCURVE",
"424 437 OFFCURVE",
"407 444 QCURVE SMOOTH",
"310 481 OFFCURVE",
"224 481 QCURVE SMOOTH",
"152 481 OFFCURVE",
"83 456 QCURVE SMOOTH",
"75 453 OFFCURVE",
"56 435 OFFCURVE",
"50 431 QCURVE",
"75 402 OFFCURVE",
"130 380 OFFCURVE",
"163 380 QCURVE SMOOTH",
"190 380 OFFCURVE",
"223 385 QCURVE SMOOTH",
"269 391 OFFCURVE",
"292 390 QCURVE",
"289 383 OFFCURVE",
"283 366 OFFCURVE",
"281 362 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
9 1 0 2 1 76 0 1 0 4 0 1 114 0 4 3 0 4 3 126 0 2 0 0 1 2 0 105 0 3 5 5 3 89 0 3 3 5 95 0 5 3 5 79 89 36 46 38 34 18 6 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 575;
}
);
note = z.alt1;
unicode = F00B;
},
{
glyphname = y.alt1;
lastChange = "2019-06-23 23:14:07 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"246 156 LINE",
"224 156 LINE",
"210 189 LINE",
"208 195 OFFCURVE",
"184 249 OFFCURVE",
"178 274 QCURVE SMOOTH",
"171 301 OFFCURVE",
"141 334 OFFCURVE",
"115 345 QCURVE",
"107 349 OFFCURVE",
"96 349 QCURVE SMOOTH",
"78 349 OFFCURVE",
"50 323 OFFCURVE",
"50 305 QCURVE SMOOTH",
"50 299 OFFCURVE",
"51 296 QCURVE",
"67 223 OFFCURVE",
"120 118 OFFCURVE",
"172 84 QCURVE SMOOTH",
"202 64 OFFCURVE",
"202 33 QCURVE SMOOTH",
"202 25 OFFCURVE",
"198 5 QCURVE SMOOTH",
"194 -14 OFFCURVE",
"184 -52 QCURVE SMOOTH",
"173 -92 OFFCURVE",
"161 -149 OFFCURVE",
"161 -178 QCURVE SMOOTH",
"161 -203 OFFCURVE",
"167 -230 QCURVE SMOOTH",
"173 -256 OFFCURVE",
"185 -256 QCURVE SMOOTH",
"193 -256 OFFCURVE",
"202 -246 QCURVE SMOOTH",
"240 -206 OFFCURVE",
"259 -163 QCURVE SMOOTH",
"321 -17 OFFCURVE",
"375 129 QCURVE SMOOTH",
"409 218 OFFCURVE",
"424 300 QCURVE SMOOTH",
"426 312 OFFCURVE",
"426 316 QCURVE SMOOTH",
"426 349 OFFCURVE",
"376 387 OFFCURVE",
"334 387 QCURVE SMOOTH",
"306 387 OFFCURVE",
"282 353 OFFCURVE",
"277 312 QCURVE SMOOTH",
"273 272 OFFCURVE",
"255 199 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
36 8 2 3 2 1 76 0 0 2 0 133 0 2 3 2 133 0 3 1 3 133 0 1 1 118 49 48 40 38 43 36 4 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 476;
}
);
note = y.alt1;
unicode = F00C;
},
{
glyphname = x.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"267 52 LINE",
"313 6 LINE",
"336 -15 OFFCURVE",
"345 -11 QCURVE",
"353 -7 OFFCURVE",
"368 12 OFFCURVE",
"371 21 QCURVE",
"374 33 OFFCURVE",
"374 43 QCURVE SMOOTH",
"374 60 OFFCURVE",
"359 98 OFFCURVE",
"332 137 OFFCURVE",
"328 143 QCURVE SMOOTH",
"313 166 OFFCURVE",
"313 181 QCURVE SMOOTH",
"313 196 OFFCURVE",
"328 214 QCURVE",
"337 224 OFFCURVE",
"365 264 QCURVE SMOOTH",
"391 300 OFFCURVE",
"405 317 QCURVE SMOOTH",
"416 330 OFFCURVE",
"425 344 OFFCURVE",
"425 353 QCURVE SMOOTH",
"425 364 OFFCURVE",
"415 375 QCURVE",
"400 393 OFFCURVE",
"371 393 QCURVE SMOOTH",
"350 393 OFFCURVE",
"336 381 QCURVE SMOOTH",
"323 370 OFFCURVE",
"301 344 QCURVE",
"275 316 LINE SMOOTH",
"263 303 OFFCURVE",
"245 287 OFFCURVE",
"240 287 QCURVE SMOOTH",
"234 287 OFFCURVE",
"223 299 OFFCURVE",
"209 319 QCURVE SMOOTH",
"185 354 OFFCURVE",
"152 386 OFFCURVE",
"125 386 QCURVE SMOOTH",
"112 386 OFFCURVE",
"105 384 QCURVE",
"68 375 OFFCURVE",
"51 352 QCURVE",
"48 347 OFFCURVE",
"59 318 OFFCURVE",
"67 304 QCURVE",
"89 271 OFFCURVE",
"129 222 QCURVE SMOOTH",
"145 202 OFFCURVE",
"145 184 QCURVE SMOOTH",
"145 164 OFFCURVE",
"126 140 QCURVE SMOOTH",
"104 111 OFFCURVE",
"82 66 QCURVE",
"69 42 LINE SMOOTH",
"64 32 OFFCURVE",
"64 25 QCURVE SMOOTH",
"64 8 OFFCURVE",
"91 -5 QCURVE",
"104 -10 OFFCURVE",
"118 -10 QCURVE SMOOTH",
"140 -10 OFFCURVE",
"181 12 OFFCURVE",
"193 31 QCURVE",
"197 38 OFFCURVE",
"210 56 OFFCURVE",
"215 63 QCURVE",
"224 74 OFFCURVE",
"233 87 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
71 11 2 0 2 1 76 0 3 1 3 133 0 1 2 1 133 0 2 0 2 133 0 0 0 118 44 42 36 34 30 28 38 4 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 475;
}
);
note = x.alt1;
unicode = F00D;
},
{
glyphname = w.alt1;
lastChange = "2019-06-19 03:22:45 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"216 202 LINE",
"197 235 OFFCURVE",
"139 350 OFFCURVE",
"103 350 QCURVE SMOOTH",
"95 350 OFFCURVE",
"76 341 OFFCURVE",
"55 324 OFFCURVE",
"51 321 QCURVE",
"49 319 OFFCURVE",
"55 298 OFFCURVE",
"59 293 QCURVE",
"87 246 OFFCURVE",
"119 190 OFFCURVE",
"137 133 QCURVE SMOOTH",
"157 75 LINE SMOOTH",
"173 32 OFFCURVE",
"212 -3 OFFCURVE",
"247 -3 QCURVE SMOOTH",
"255 -3 OFFCURVE",
"273 -1 QCURVE SMOOTH",
"284 0 OFFCURVE",
"307 21 OFFCURVE",
"313 33 QCURVE SMOOTH",
"320 47 OFFCURVE",
"335 90 QCURVE",
"342 114 OFFCURVE",
"345 121 QCURVE",
"358 108 OFFCURVE",
"373 83 OFFCURVE",
"382 65 QCURVE SMOOTH",
"400 29 OFFCURVE",
"465 -12 OFFCURVE",
"502 -15 QCURVE SMOOTH",
"516 -16 OFFCURVE",
"546 5 OFFCURVE",
"557 36 OFFCURVE",
"560 61 QCURVE",
"562 69 OFFCURVE",
"564 81 QCURVE",
"593 215 LINE SMOOTH",
"614 313 OFFCURVE",
"621 348 QCURVE SMOOTH",
"622 353 OFFCURVE",
"622 361 QCURVE SMOOTH",
"622 378 OFFCURVE",
"603 395 OFFCURVE",
"585 403 QCURVE SMOOTH",
"578 406 OFFCURVE",
"569 406 QCURVE SMOOTH",
"548 406 OFFCURVE",
"523 384 OFFCURVE",
"518 368 QCURVE SMOOTH",
"514 266 OFFCURVE",
"496 204 QCURVE SMOOTH",
"467 102 LINE",
"458 118 OFFCURVE",
"446 152 QCURVE SMOOTH",
"433 190 OFFCURVE",
"404 229 OFFCURVE",
"371 235 QCURVE",
"355 237 OFFCURVE",
"350 237 QCURVE SMOOTH",
"315 237 OFFCURVE",
"271 178 OFFCURVE",
"243 133 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
20 1 4 1 64 37 9 3 3 0 2 76 0 1 4 1 133 0 4 0 4 133 0 0 3 0 133 0 3 2 3 133 0 2 2 118 44 45 46 44 17 5 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 672;
}
);
note = w.alt1;
unicode = F00E;
},
{
glyphname = v.alt1;
lastChange = "2019-06-23 23:21:47 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"213 200 LINE SMOOTH",
"200 234 OFFCURVE",
"148 344 OFFCURVE",
"115 344 QCURVE SMOOTH",
"98 344 OFFCURVE",
"57 329 OFFCURVE",
"52 318 QCURVE",
"50 312 OFFCURVE",
"50 308 QCURVE SMOOTH",
"50 297 OFFCURVE",
"63 265 OFFCURVE",
"65 261 QCURVE",
"68 251 OFFCURVE",
"83 224 OFFCURVE",
"87 216 QCURVE",
"101 182 OFFCURVE",
"107 165 QCURVE SMOOTH",
"124 119 OFFCURVE",
"136 93 QCURVE SMOOTH",
"163 33 OFFCURVE",
"225 -33 OFFCURVE",
"280 -38 QCURVE SMOOTH",
"335 -43 OFFCURVE",
"350 6 QCURVE SMOOTH",
"409 201 OFFCURVE",
"432 291 QCURVE SMOOTH",
"435 303 OFFCURVE",
"435 315 QCURVE SMOOTH",
"435 338 OFFCURVE",
"412 366 OFFCURVE",
"393 366 QCURVE SMOOTH",
"385 366 OFFCURVE",
"376 363 QCURVE SMOOTH",
"361 358 OFFCURVE",
"334 327 OFFCURVE",
"327 310 QCURVE SMOOTH",
"318 290 OFFCURVE",
"303 240 OFFCURVE",
"301 233 QCURVE SMOOTH",
"299 226 OFFCURVE",
"294 205 OFFCURVE",
"279 112 OFFCURVE",
"265 83 QCURVE",
"233 148 OFFCURVE",
"232 150 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
38 2 2 1 73 0 0 1 0 133 0 1 1 118 44 42 47 2 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 485;
}
);
note = v.alt1;
unicode = F00F;
},
{
glyphname = u.alt1;
lastChange = "2019-06-19 01:34:16 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"253 90 OFFCURVE",
"238 78 OFFCURVE",
"230 77 QCURVE",
"228 76 OFFCURVE",
"214 90 OFFCURVE",
"210 98 QCURVE",
"187 135 OFFCURVE",
"187 192 QCURVE SMOOTH",
"187 208 OFFCURVE",
"189 240 QCURVE SMOOTH",
"190 281 OFFCURVE",
"162 329 OFFCURVE",
"125 342 QCURVE SMOOTH",
"116 345 OFFCURVE",
"107 345 QCURVE SMOOTH",
"83 345 OFFCURVE",
"49 316 OFFCURVE",
"50 293 QCURVE",
"53 260 OFFCURVE",
"63 201 QCURVE SMOOTH",
"67 179 OFFCURVE",
"72 138 QCURVE SMOOTH",
"84 56 OFFCURVE",
"153 12 QCURVE SMOOTH",
"193 -14 OFFCURVE",
"246 -14 QCURVE SMOOTH",
"289 -14 OFFCURVE",
"360 28 OFFCURVE",
"377 70 QCURVE SMOOTH",
"409 150 OFFCURVE",
"409 237 QCURVE SMOOTH",
"409 316 OFFCURVE",
"384 398 QCURVE",
"377 423 OFFCURVE",
"326 445 QCURVE",
"318 448 OFFCURVE",
"310 448 QCURVE SMOOTH",
"287 448 OFFCURVE",
"287 416 QCURVE SMOOTH",
"287 380 LINE",
"287 313 LINE",
"291 262 OFFCURVE",
"291 237 QCURVE SMOOTH",
"291 154 OFFCURVE",
"258 98 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
26 3 2 1 2 1 76 0 0 2 0 133 0 2 1 2 133 0 1 1 118 41 42 22 3 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 468;
}
);
leftKerningGroup = u;
note = u.alt1;
rightKerningGroup = u;
unicode = F010;
},
{
glyphname = t.alt1;
lastChange = "2019-06-23 23:25:08 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"245 491 OFFCURVE",
"237 491 QCURVE SMOOTH",
"214 491 OFFCURVE",
"223 521 QCURVE SMOOTH",
"223 531 OFFCURVE",
"226 546 QCURVE SMOOTH",
"227 551 OFFCURVE",
"231 559 OFFCURVE",
"232 564 QCURVE",
"240 596 OFFCURVE",
"240 616 QCURVE SMOOTH",
"240 664 OFFCURVE",
"205 683 QCURVE SMOOTH",
"191 690 OFFCURVE",
"155 695 OFFCURVE",
"150 696 QCURVE",
"141 697 LINE",
"116 691 OFFCURVE",
"118 653 QCURVE SMOOTH",
"123 573 OFFCURVE",
"114 508 QCURVE SMOOTH",
"111 487 OFFCURVE",
"101 448 OFFCURVE",
"81 442 QCURVE SMOOTH",
"60 436 OFFCURVE",
"50 404 QCURVE SMOOTH",
"50 385 OFFCURVE",
"65 384 QCURVE SMOOTH",
"106 381 OFFCURVE",
"102 356 OFFCURVE",
"104 333 QCURVE SMOOTH",
"107 296 LINE SMOOTH",
"111 233 OFFCURVE",
"118 204 QCURVE SMOOTH",
"145 100 OFFCURVE",
"176 33 QCURVE SMOOTH",
"188 8 OFFCURVE",
"256 -23 OFFCURVE",
"291 -23 QCURVE SMOOTH",
"323 -23 OFFCURVE",
"337 -10 QCURVE",
"373 21 OFFCURVE",
"417 85 OFFCURVE",
"423 125 QCURVE",
"424 129 OFFCURVE",
"424 138 QCURVE SMOOTH",
"424 157 OFFCURVE",
"405 177 OFFCURVE",
"389 182 QCURVE",
"381 184 OFFCURVE",
"379 184 QCURVE SMOOTH",
"369 184 OFFCURVE",
"355 171 OFFCURVE",
"341 147 OFFCURVE",
"338 142 QCURVE SMOOTH",
"326 123 OFFCURVE",
"286 75 QCURVE",
"265 62 OFFCURVE",
"251 68 OFFCURVE",
"238 103 OFFCURVE",
"236 116 QCURVE SMOOTH",
"230 152 OFFCURVE",
"222 229 QCURVE SMOOTH",
"217 271 LINE SMOOTH",
"211 321 OFFCURVE",
"211 333 QCURVE SMOOTH",
"211 358 OFFCURVE",
"228 390 OFFCURVE",
"265 416 OFFCURVE",
"303 435 QCURVE",
"346 444 OFFCURVE",
"369 461 QCURVE SMOOTH",
"382 471 LINE",
"359 506 OFFCURVE",
"331 506 QCURVE SMOOTH",
"317 506 OFFCURVE",
"282 503 OFFCURVE",
"277 501 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
47 4 2 1 4 1 76 0 3 0 3 133 0 0 4 0 133 0 4 1 4 133 0 1 2 1 133 0 2 2 118 77 76 62 61 41 39 28 27 33 5 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 474;
}
);
leftKerningGroup = t;
note = t.alt1;
rightKerningGroup = t;
unicode = F011;
},
{
glyphname = s.alt1;
lastChange = "2019-06-19 03:27:11 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"258 131 OFFCURVE",
"258 149 QCURVE SMOOTH",
"258 169 OFFCURVE",
"249 217 OFFCURVE",
"248 225 QCURVE SMOOTH",
"244 252 OFFCURVE",
"234 289 QCURVE SMOOTH",
"220 347 OFFCURVE",
"218 377 QCURVE SMOOTH",
"214 430 OFFCURVE",
"272 473 QCURVE",
"282 481 OFFCURVE",
"296 514 OFFCURVE",
"292 523 QCURVE",
"288 533 OFFCURVE",
"255 547 OFFCURVE",
"242 545 QCURVE",
"224 544 OFFCURVE",
"185 528 OFFCURVE",
"170 517 QCURVE SMOOTH",
"135 492 OFFCURVE",
"106 437 OFFCURVE",
"106 404 QCURVE SMOOTH",
"106 384 OFFCURVE",
"116 332 OFFCURVE",
"122 307 QCURVE SMOOTH",
"130 273 OFFCURVE",
"135 256 QCURVE",
"137 248 OFFCURVE",
"151 197 OFFCURVE",
"154 175 QCURVE",
"155 170 OFFCURVE",
"155 161 QCURVE SMOOTH",
"155 135 OFFCURVE",
"124 93 OFFCURVE",
"98 81 QCURVE",
"88 77 OFFCURVE",
"50 57 QCURVE",
"99 15 OFFCURVE",
"148 15 QCURVE SMOOTH",
"186 15 OFFCURVE",
"242 69 OFFCURVE",
"254 118 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
33 4 2 0 1 1 76 0 1 0 1 133 0 0 0 118 25 24 33 2 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 343;
}
);
note = s.alt1;
rightKerningGroup = s;
unicode = F012;
},
{
glyphname = s.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"282 2 OFFCURVE",
"355 44 OFFCURVE",
"411 110 OFFCURVE",
"418 143 QCURVE SMOOTH",
"421 158 OFFCURVE",
"421 176 QCURVE SMOOTH",
"421 207 OFFCURVE",
"410 218 QCURVE",
"376 249 OFFCURVE",
"306 277 QCURVE SMOOTH",
"286 285 OFFCURVE",
"242 293 QCURVE SMOOTH",
"231 295 OFFCURVE",
"201 301 QCURVE",
"166 310 OFFCURVE",
"166 334 QCURVE SMOOTH",
"166 347 OFFCURVE",
"176 363 QCURVE SMOOTH",
"189 383 OFFCURVE",
"234 408 OFFCURVE",
"293 418 OFFCURVE",
"300 419 QCURVE SMOOTH",
"308 420 OFFCURVE",
"328 412 OFFCURVE",
"337 407 QCURVE SMOOTH",
"352 398 OFFCURVE",
"357 397 QCURVE",
"379 388 LINE",
"414 371 OFFCURVE",
"436 369 QCURVE SMOOTH",
"451 368 OFFCURVE",
"467 380 OFFCURVE",
"467 390 QCURVE SMOOTH",
"467 403 OFFCURVE",
"457 414 QCURVE",
"430 447 OFFCURVE",
"407 459 QCURVE",
"358 488 OFFCURVE",
"283 488 QCURVE SMOOTH",
"253 488 OFFCURVE",
"225 485 QCURVE SMOOTH",
"125 475 OFFCURVE",
"68 407 QCURVE SMOOTH",
"50 386 OFFCURVE",
"50 362 QCURVE SMOOTH",
"50 342 OFFCURVE",
"64 322 QCURVE SMOOTH",
"109 261 OFFCURVE",
"191 247 QCURVE SMOOTH",
"234 241 OFFCURVE",
"294 219 QCURVE",
"301 217 OFFCURVE",
"314 201 OFFCURVE",
"315 194 QCURVE",
"315 166 OFFCURVE",
"278 109 OFFCURVE",
"220 72 OFFCURVE",
"192 72 QCURVE SMOOTH",
"185 72 OFFCURVE",
"181 73 QCURVE SMOOTH",
"177 74 OFFCURVE",
"171 74 QCURVE SMOOTH",
"156 74 OFFCURVE",
"136 55 OFFCURVE",
"127 34 QCURVE",
"151 27 OFFCURVE",
"167 21 QCURVE SMOOTH",
"194 11 OFFCURVE",
"230 2 OFFCURVE",
"248 2 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
15 1 0 3 4 1 4 0 2 76 0 2 3 2 133 0 3 0 3 133 1 1 0 4 0 133 5 1 4 4 118 0 0 0 69 0 68 39 38 31 29 20 22 6 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 517;
}
);
note = s.alt2;
unicode = F013;
},
{
glyphname = r.alt1;
lastChange = "2019-06-23 23:26:34 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"73 97 OFFCURVE",
"73 89 QCURVE SMOOTH",
"73 44 OFFCURVE",
"118 27 QCURVE SMOOTH",
"131 22 OFFCURVE",
"152 22 QCURVE SMOOTH",
"178 22 OFFCURVE",
"194 30 QCURVE",
"205 37 OFFCURVE",
"205 87 QCURVE SMOOTH",
"205 97 OFFCURVE",
"203 121 QCURVE SMOOTH",
"201 143 OFFCURVE",
"201 156 QCURVE SMOOTH",
"201 165 OFFCURVE",
"202 170 QCURVE",
"201 220 OFFCURVE",
"210 285 OFFCURVE",
"219 316 QCURVE SMOOTH",
"235 371 OFFCURVE",
"252 412 OFFCURVE",
"309 462 OFFCURVE",
"348 470 QCURVE",
"352 471 OFFCURVE",
"363 486 OFFCURVE",
"363 494 OFFCURVE",
"350 507 OFFCURVE",
"345 509 QCURVE SMOOTH",
"328 516 OFFCURVE",
"300 516 QCURVE SMOOTH",
"271 516 OFFCURVE",
"214 490 OFFCURVE",
"193 468 QCURVE SMOOTH",
"180 454 OFFCURVE",
"157 427 OFFCURVE",
"142 427 QCURVE SMOOTH",
"135 427 OFFCURVE",
"118 443 OFFCURVE",
"107 443 QCURVE SMOOTH",
"62 443 OFFCURVE",
"62 390 QCURVE",
"63 375 LINE",
"75 201 LINE",
"76 142 LINE SMOOTH",
"76 115 OFFCURVE",
"74 101 QCURVE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 7 values pushed */
45 33 2 3 1 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 7 values pushed */
45 33 2 3 0 1 76 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 7 values pushed */
45 33 2 3 1 1 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 2 0 2 133 0 0 1 0 133 0 1 3 1 133 0 3 3 118 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
0 2 0 2 133 1 1 0 3 0 133 0 3 3 118 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 19 values pushed */
0 2 0 2 133 0 0 1 0 133 0 1 3 1 133 0 3 3 118 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
42 40 36 19 37 4 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 336;
}
);
leftKerningGroup = r;
note = r.alt1;
rightKerningGroup = r;
unicode = F014;
},
{
glyphname = q.alt1;
lastChange = "2019-06-19 01:40:34 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"246 32 LINE",
"246 -51 LINE SMOOTH",
"246 -70 OFFCURVE",
"228 -91 OFFCURVE",
"209 -95 QCURVE",
"158 -103 OFFCURVE",
"98 -123 QCURVE",
"91 -125 OFFCURVE",
"77 -140 OFFCURVE",
"77 -146 QCURVE SMOOTH",
"77 -156 OFFCURVE",
"100 -171 QCURVE",
"112 -177 OFFCURVE",
"121 -177 QCURVE SMOOTH",
"124 -177 LINE",
"179 -171 OFFCURVE",
"214 -160 QCURVE SMOOTH",
"230 -155 OFFCURVE",
"235 -156 QCURVE SMOOTH",
"244 -158 OFFCURVE",
"253 -168 OFFCURVE",
"255 -183 QCURVE SMOOTH",
"258 -209 OFFCURVE",
"272 -269 OFFCURVE",
"274 -279 QCURVE",
"281 -306 OFFCURVE",
"285 -325 QCURVE SMOOTH",
"291 -352 OFFCURVE",
"314 -352 QCURVE SMOOTH",
"322 -352 OFFCURVE",
"329 -349 QCURVE",
"336 -347 OFFCURVE",
"346 -322 OFFCURVE",
"345 -312 QCURVE",
"340 -234 OFFCURVE",
"329 -165 QCURVE",
"328 -161 OFFCURVE",
"328 -155 QCURVE SMOOTH",
"328 -139 OFFCURVE",
"346 -125 OFFCURVE",
"365 -122 QCURVE SMOOTH",
"429 -112 OFFCURVE",
"468 -98 QCURVE",
"475 -96 OFFCURVE",
"488 -72 OFFCURVE",
"492 -66 QCURVE",
"472 -55 OFFCURVE",
"463 -54 QCURVE",
"460 -53 OFFCURVE",
"453 -53 QCURVE SMOOTH",
"444 -53 OFFCURVE",
"428 -55 QCURVE SMOOTH",
"401 -58 OFFCURVE",
"374 -64 QCURVE",
"336 -70 LINE",
"335 -38 LINE",
"334 -30 OFFCURVE",
"334 -13 QCURVE SMOOTH",
"334 4 OFFCURVE",
"337 19 QCURVE",
"348 76 OFFCURVE",
"363 153 QCURVE SMOOTH",
"376 220 LINE SMOOTH",
"380 240 OFFCURVE",
"380 249 QCURVE SMOOTH",
"380 271 OFFCURVE",
"361 284 QCURVE SMOOTH",
"358 286 OFFCURVE",
"358 297 QCURVE SMOOTH",
"358 305 LINE",
"356 312 OFFCURVE",
"351 343 OFFCURVE",
"344 351 QCURVE",
"306 399 OFFCURVE",
"246 399 QCURVE SMOOTH",
"196 399 OFFCURVE",
"122 349 OFFCURVE",
"88 304 QCURVE SMOOTH",
"50 254 OFFCURVE",
"50 190 QCURVE SMOOTH",
"50 170 OFFCURVE",
"55 145 QCURVE SMOOTH",
"63 106 OFFCURVE",
"105 52 OFFCURVE",
"143 43 QCURVE SMOOTH",
"160 39 OFFCURVE",
"203 35 OFFCURVE",
"209 35 QCURVE"
);
},
{
closed = 1;
nodes = (
"242 328 OFFCURVE",
"254 328 QCURVE SMOOTH",
"269 328 OFFCURVE",
"292 307 OFFCURVE",
"292 292 QCURVE SMOOTH",
"292 287 OFFCURVE",
"291 284 QCURVE",
"282 237 OFFCURVE",
"246 163 QCURVE",
"237 149 OFFCURVE",
"218 128 QCURVE SMOOTH",
"201 110 LINE SMOOTH",
"184 92 OFFCURVE",
"170 92 QCURVE SMOOTH",
"151 92 OFFCURVE",
"140 123 QCURVE",
"136 133 OFFCURVE",
"131 160 OFFCURVE",
"130 166 QCURVE",
"133 217 OFFCURVE",
"187 290 OFFCURVE",
"232 321 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 89 values pushed */
104 90 18 3 5 6 87 32 2 1 5 78 50 42 33 4 3 1 54 1 2 4 4 76 0 5 6 1 6 5 1 128 0 1 3 6 1 3 126 0 3 4 6 3 4 126 0 4 2 6 4 2 126 0 2 2 132 0 0 6 6 0 89 0 0 0 6 97 0 6 0 6 81 108 106 96 94 75 73 69 68 60 58 38 37 44 7 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 483;
}
);
note = q.alt1;
rightKerningGroup = q;
unicode = F015;
},
{
glyphname = p.alt1;
lastChange = "2019-06-19 01:18:10 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"53 -160 LINE",
"53 -234 LINE SMOOTH",
"53 -257 OFFCURVE",
"87 -291 OFFCURVE",
"110 -291 QCURVE SMOOTH",
"136 -291 OFFCURVE",
"168 -259 OFFCURVE",
"168 -233 QCURVE",
"169 -205 LINE",
"170 -195 OFFCURVE",
"170 -176 QCURVE SMOOTH",
"170 -144 OFFCURVE",
"169 -127 QCURVE",
"169 -56 OFFCURVE",
"166 18 QCURVE",
"163 53 OFFCURVE",
"184 53 QCURVE SMOOTH",
"188 53 OFFCURVE",
"202 49 QCURVE",
"223 42 OFFCURVE",
"244 42 QCURVE SMOOTH",
"304 42 OFFCURVE",
"337 102 QCURVE SMOOTH",
"374 168 OFFCURVE",
"384 209 QCURVE SMOOTH",
"394 251 OFFCURVE",
"394 277 QCURVE SMOOTH",
"394 324 OFFCURVE",
"342 375 OFFCURVE",
"283 379 QCURVE SMOOTH",
"260 381 OFFCURVE",
"247 376 QCURVE",
"195 353 LINE SMOOTH",
"132 325 OFFCURVE",
"91 310 QCURVE SMOOTH",
"67 301 OFFCURVE",
"50 272 OFFCURVE",
"50 246 QCURVE SMOOTH",
"51 111 OFFCURVE",
"51 -160 QCURVE"
);
},
{
closed = 1;
nodes = (
"182 243 OFFCURVE",
"238 278 OFFCURVE",
"264 294 QCURVE",
"265 295 OFFCURVE",
"283 275 OFFCURVE",
"283 270 QCURVE",
"273 163 OFFCURVE",
"207 107 QCURVE",
"195 96 OFFCURVE",
"183 96 QCURVE SMOOTH",
"174 96 OFFCURVE",
"160 111 OFFCURVE",
"157 125 QCURVE",
"155 137 OFFCURVE",
"153 167 OFFCURVE",
"153 173 QCURVE",
"152 174 OFFCURVE",
"149 174 OFFCURVE",
"148 175 QCURVE",
"150 183 OFFCURVE",
"152 202 OFFCURVE",
"157 221 OFFCURVE",
"162 225 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
56 1 4 0 30 24 2 3 1 2 76 0 0 4 0 133 0 1 2 3 2 1 3 128 0 3 3 132 0 4 2 2 4 89 0 4 4 2 97 0 2 4 2 81 53 51 42 34 39 25 5 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 444;
}
);
leftKerningGroup = p;
note = p.alt1;
rightKerningGroup = p;
unicode = F016;
},
{
glyphname = o.alt1;
lastChange = "2019-06-23 23:19:15 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"401 361 OFFCURVE",
"363 393 OFFCURVE",
"306 413 OFFCURVE",
"301 415 QCURVE",
"262 428 OFFCURVE",
"233 428 QCURVE SMOOTH",
"175 428 OFFCURVE",
"133 383 QCURVE SMOOTH",
"125 374 OFFCURVE",
"116 356 QCURVE SMOOTH",
"106 336 OFFCURVE",
"98 329 QCURVE SMOOTH",
"71 305 OFFCURVE",
"50 247 OFFCURVE",
"50 212 QCURVE SMOOTH",
"50 199 OFFCURVE",
"52 175 QCURVE SMOOTH",
"57 128 OFFCURVE",
"115 53 OFFCURVE",
"200 11 OFFCURVE",
"246 11 QCURVE SMOOTH",
"288 11 OFFCURVE",
"325 30 QCURVE SMOOTH",
"365 50 OFFCURVE",
"411 113 OFFCURVE",
"435 186 OFFCURVE",
"447 243 QCURVE",
"438 269 LINE",
"435 276 OFFCURVE",
"420 321 OFFCURVE",
"411 339 QCURVE"
);
},
{
closed = 1;
nodes = (
"253 385 OFFCURVE",
"265 385 QCURVE SMOOTH",
"276 385 OFFCURVE",
"290 374 QCURVE SMOOTH",
"345 328 OFFCURVE",
"345 261 QCURVE SMOOTH",
"345 227 OFFCURVE",
"319 147 OFFCURVE",
"272 88 OFFCURVE",
"241 82 QCURVE",
"227 80 OFFCURVE",
"222 80 QCURVE SMOOTH",
"194 80 OFFCURVE",
"183 107 QCURVE",
"173 129 OFFCURVE",
"159 181 OFFCURVE",
"157 189 QCURVE",
"169 259 OFFCURVE",
"200 342 OFFCURVE",
"237 372 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
33 3 2 2 3 1 76 0 1 0 3 2 1 3 105 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 41 28 45 40 4 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 497;
}
);
leftKerningGroup = o;
note = o.alt1;
rightKerningGroup = o;
unicode = F017;
},
{
glyphname = n.alt1;
lastChange = "2019-06-19 03:25:23 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"230 356 OFFCURVE",
"201 398 OFFCURVE",
"169 397 QCURVE SMOOTH",
"126 396 OFFCURVE",
"89 364 QCURVE SMOOTH",
"75 352 OFFCURVE",
"58 333 OFFCURVE",
"51 323 QCURVE",
"43 308 OFFCURVE",
"38 275 OFFCURVE",
"59 262 OFFCURVE",
"85 256 OFFCURVE",
"103 252 QCURVE SMOOTH",
"108 251 OFFCURVE",
"127 253 OFFCURVE",
"133 253 QCURVE SMOOTH",
"147 253 OFFCURVE",
"155 223 OFFCURVE",
"155 203 QCURVE SMOOTH",
"155 133 OFFCURVE",
"159 77 QCURVE SMOOTH",
"162 30 OFFCURVE",
"210 30 QCURVE SMOOTH",
"231 30 OFFCURVE",
"251 47 OFFCURVE",
"256 69 QCURVE",
"256 127 OFFCURVE",
"261 198 OFFCURVE",
"280 229 QCURVE",
"293 251 OFFCURVE",
"349 252 OFFCURVE",
"373 179 QCURVE",
"383 127 LINE SMOOTH",
"398 50 OFFCURVE",
"421 -62 OFFCURVE",
"483 -62 QCURVE SMOOTH",
"500 -62 OFFCURVE",
"526 -54 QCURVE",
"517 -20 LINE SMOOTH",
"514 -9 OFFCURVE",
"506 13 QCURVE",
"492 47 OFFCURVE",
"487 75 QCURVE SMOOTH",
"453 253 LINE",
"434 301 LINE SMOOTH",
"416 347 OFFCURVE",
"369 384 QCURVE SMOOTH",
"350 399 OFFCURVE",
"295 388 OFFCURVE",
"277 362 QCURVE SMOOTH",
"245 316 LINE",
"243 319 OFFCURVE",
"238 327 OFFCURVE",
"238 329 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 60 values pushed */
52 27 2 3 0 37 1 2 3 17 1 1 2 3 76 0 0 4 3 4 0 3 128 0 2 3 1 3 2 1 128 0 1 1 132 0 4 0 3 4 89 0 4 4 3 97 0 3 4 3 81 63 61 21 46 44 36 5 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 566;
}
);
leftKerningGroup = n;
note = n.alt1;
rightKerningGroup = n;
unicode = F018;
},
{
glyphname = m.alt1;
lastChange = "2019-06-19 01:39:52 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"422 248 LINE",
"403 322 LINE SMOOTH",
"396 350 OFFCURVE",
"356 373 OFFCURVE",
"321 373 OFFCURVE",
"268 352 OFFCURVE",
"239 321 QCURVE SMOOTH",
"225 306 OFFCURVE",
"210 287 OFFCURVE",
"204 287 QCURVE SMOOTH",
"197 287 OFFCURVE",
"189 309 OFFCURVE",
"177 328 QCURVE SMOOTH",
"164 349 OFFCURVE",
"112 383 OFFCURVE",
"83 383 QCURVE SMOOTH",
"60 383 OFFCURVE",
"40 371 QCURVE SMOOTH",
"27 363 OFFCURVE",
"25 330 OFFCURVE",
"43 313 QCURVE",
"109 275 OFFCURVE",
"123 243 OFFCURVE",
"125 235 QCURVE",
"132 200 OFFCURVE",
"131 120 OFFCURVE",
"139 64 QCURVE SMOOTH",
"142 44 OFFCURVE",
"150 7 OFFCURVE",
"193 -12 OFFCURVE",
"209 -3 OFFCURVE",
"228 32 OFFCURVE",
"230 47 QCURVE SMOOTH",
"238 104 OFFCURVE",
"271 200 OFFCURVE",
"293 235 OFFCURVE",
"350 242 OFFCURVE",
"361 97 OFFCURVE",
"361 47 QCURVE SMOOTH",
"361 23 OFFCURVE",
"394 7 OFFCURVE",
"429 16 OFFCURVE",
"454 74 QCURVE",
"462 97 OFFCURVE",
"477 161 OFFCURVE",
"503 212 QCURVE",
"553 231 OFFCURVE",
"553 159 QCURVE",
"566 67 OFFCURVE",
"573 39 QCURVE SMOOTH",
"586 -13 OFFCURVE",
"607 -38 QCURVE SMOOTH",
"621 -55 OFFCURVE",
"643 -49 QCURVE SMOOTH",
"677 -40 OFFCURVE",
"677 -9 QCURVE SMOOTH",
"677 -1 OFFCURVE",
"676 2 QCURVE",
"669 60 OFFCURVE",
"652 188 OFFCURVE",
"640 219 QCURVE SMOOTH",
"610 299 LINE SMOOTH",
"599 329 OFFCURVE",
"494 369 OFFCURVE",
"453 309 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
101 54 31 3 2 5 14 1 1 3 2 76 0 4 6 4 133 0 6 0 6 133 0 0 5 0 133 0 5 2 5 133 0 2 3 2 133 0 3 1 3 133 0 1 1 118 98 97 91 89 85 83 63 61 43 41 45 20 7 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 727;
}
);
leftKerningGroup = m;
note = m.alt1;
rightKerningGroup = m;
unicode = F019;
},
{
glyphname = l.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"63 9 OFFCURVE",
"75 -19 OFFCURVE",
"99 -21 QCURVE",
"105 -22 OFFCURVE",
"115 -22 QCURVE SMOOTH",
"138 -22 OFFCURVE",
"159 0 OFFCURVE",
"161 26 QCURVE SMOOTH",
"165 116 OFFCURVE",
"166 161 QCURVE SMOOTH",
"171 296 LINE SMOOTH",
"174 363 OFFCURVE",
"180 429 QCURVE",
"181 453 OFFCURVE",
"189 578 OFFCURVE",
"191 628 QCURVE SMOOTH",
"192 664 OFFCURVE",
"167 708 QCURVE SMOOTH",
"161 719 OFFCURVE",
"133 729 OFFCURVE",
"117 729 QCURVE SMOOTH",
"92 729 OFFCURVE",
"76 719 QCURVE",
"50 704 OFFCURVE",
"50 678 QCURVE SMOOTH",
"50 665 OFFCURVE",
"57 646 QCURVE SMOOTH",
"60 637 OFFCURVE",
"74 602 OFFCURVE",
"74 589 QCURVE SMOOTH",
"75 404 OFFCURVE",
"75 35 QCURVE",
"67 35 OFFCURVE",
"64 34 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
33 25 20 1 4 1 0 1 76 0 0 1 0 133 0 1 1 118 46 43 2 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 241;
}
);
note = l.alt1;
unicode = F01A;
},
{
glyphname = k.alt1;
lastChange = "2019-11-20 01:35:29 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"365 155 OFFCURVE",
"276 203 OFFCURVE",
"238 236 QCURVE",
"217 256 OFFCURVE",
"217 270 QCURVE SMOOTH",
"217 284 OFFCURVE",
"232 302 QCURVE SMOOTH",
"280 360 OFFCURVE",
"306 408 QCURVE SMOOTH",
"326 444 OFFCURVE",
"326 476 QCURVE SMOOTH",
"326 512 OFFCURVE",
"275 552 OFFCURVE",
"229 550 QCURVE",
"213 550 OFFCURVE",
"192 543 QCURVE SMOOTH",
"177 518 OFFCURVE",
"171 518 QCURVE SMOOTH",
"156 518 OFFCURVE",
"156 536 QCURVE SMOOTH",
"156 548 OFFCURVE",
"158 555 QCURVE",
"172 622 OFFCURVE",
"178 703 QCURVE SMOOTH",
"180 728 OFFCURVE",
"142 767 OFFCURVE",
"116 767 QCURVE SMOOTH",
"91 767 OFFCURVE",
"56 734 OFFCURVE",
"56 710 QCURVE SMOOTH",
"52 434 OFFCURVE",
"50 157 QCURVE SMOOTH",
"50 77 OFFCURVE",
"55 -23 QCURVE",
"55 -35 OFFCURVE",
"80 -63 OFFCURVE",
"112 -79 OFFCURVE",
"123 -75 QCURVE SMOOTH",
"135 -71 OFFCURVE",
"144 -56 OFFCURVE",
"144 -44 QCURVE SMOOTH",
"144 -37 OFFCURVE",
"142 -17 QCURVE SMOOTH",
"139 24 OFFCURVE",
"139 105 QCURVE SMOOTH",
"139 166 LINE SMOOTH",
"139 174 OFFCURVE",
"150 196 OFFCURVE",
"152 202 QCURVE",
"180 188 LINE SMOOTH",
"196 180 OFFCURVE",
"212 168 QCURVE",
"273 130 OFFCURVE",
"302 118 QCURVE SMOOTH",
"311 114 OFFCURVE",
"345 100 OFFCURVE",
"379 89 OFFCURVE",
"397 89 QCURVE SMOOTH",
"429 89 OFFCURVE",
"460 110 QCURVE",
"430 128 OFFCURVE",
"426 130 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
12 1 2 0 2 1 76 0 1 3 1 133 0 3 2 3 133 0 2 0 2 133 0 0 0 118 48 46 43 42 35 33 34 4 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 470;
}
);
note = k.alt1;
unicode = F01B;
},
{
glyphname = j.alt1;
lastChange = "2019-06-23 23:15:22 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"292 400 OFFCURVE",
"312 418 OFFCURVE",
"315 421 QCURVE",
"315 449 OFFCURVE",
"290 483 OFFCURVE",
"268 483 QCURVE",
"252 484 OFFCURVE",
"211 470 OFFCURVE",
"201 467 QCURVE",
"205 460 OFFCURVE",
"225 426 OFFCURVE",
"236 415 QCURVE",
"245 407 OFFCURVE",
"271 398 OFFCURVE",
"283 399 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"371 -97 LINE SMOOTH",
"358 -3 OFFCURVE",
"337 156 QCURVE SMOOTH",
"331 204 OFFCURVE",
"329 232 QCURVE SMOOTH",
"325 270 LINE SMOOTH",
"322 294 OFFCURVE",
"292 316 OFFCURVE",
"268 314 QCURVE",
"263 314 OFFCURVE",
"236 314 OFFCURVE",
"213 304 OFFCURVE",
"213 284 QCURVE SMOOTH",
"216 187 OFFCURVE",
"227 109 QCURVE SMOOTH",
"232 69 OFFCURVE",
"246 -9 QCURVE SMOOTH",
"249 -26 OFFCURVE",
"262 -110 OFFCURVE",
"266 -144 QCURVE",
"267 -157 LINE",
"267 -192 OFFCURVE",
"229 -250 OFFCURVE",
"204 -255 QCURVE",
"196 -257 OFFCURVE",
"180 -257 QCURVE SMOOTH",
"146 -257 OFFCURVE",
"88 -225 OFFCURVE",
"69 -196 QCURVE SMOOTH",
"56 -175 OFFCURVE",
"43 -158 QCURVE",
"31 -141 LINE",
"10 -164 OFFCURVE",
"10 -196 QCURVE SMOOTH",
"10 -217 OFFCURVE",
"30 -255 OFFCURVE",
"48 -264 QCURVE SMOOTH",
"76 -279 OFFCURVE",
"140 -302 OFFCURVE",
"185 -314 QCURVE SMOOTH",
"209 -320 OFFCURVE",
"231 -320 QCURVE SMOOTH",
"274 -320 OFFCURVE",
"340 -276 OFFCURVE",
"377 -202 OFFCURVE",
"377 -157 QCURVE SMOOTH",
"377 -148 OFFCURVE",
"375 -128 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
11 5 2 3 0 41 30 2 2 3 2 76 0 0 3 0 133 0 3 2 3 133 0 2 1 2 133 0 1 1 118 62 46 42 39 4 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 417;
}
);
note = j.alt1;
rightKerningGroup = j;
unicode = F01C;
},
{
glyphname = i.alt1;
lastChange = "2019-12-27 09:53:50 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"159 487 OFFCURVE",
"175 499 OFFCURVE",
"175 508 QCURVE SMOOTH",
"175 518 OFFCURVE",
"169 525 QCURVE",
"146 557 OFFCURVE",
"111 557 QCURVE SMOOTH",
"92 557 OFFCURVE",
"61 534 QCURVE",
"99 480 OFFCURVE",
"147 486 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"197 270 LINE",
"193 278 OFFCURVE",
"187 294 QCURVE SMOOTH",
"180 314 OFFCURVE",
"168 338 OFFCURVE",
"159 345 QCURVE SMOOTH",
"147 354 OFFCURVE",
"121 354 QCURVE SMOOTH",
"101 354 OFFCURVE",
"85 351 QCURVE SMOOTH",
"79 350 OFFCURVE",
"69 320 OFFCURVE",
"68 307 QCURVE",
"67 280 OFFCURVE",
"68 240 OFFCURVE",
"68 226 QCURVE",
"69 208 OFFCURVE",
"69 172 QCURVE SMOOTH",
"69 140 OFFCURVE",
"68 124 QCURVE SMOOTH",
"67 88 OFFCURVE",
"111 45 OFFCURVE",
"145 35 QCURVE",
"148 34 OFFCURVE",
"154 34 QCURVE SMOOTH",
"168 34 OFFCURVE",
"186 57 OFFCURVE",
"184 73 QCURVE",
"183 78 OFFCURVE",
"177 108 OFFCURVE",
"177 121 QCURVE",
"183 193 LINE SMOOTH",
"187 241 OFFCURVE",
"188 265 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
1 1 2 0 44 43 31 13 4 1 2 2 76 0 0 2 0 133 0 2 1 2 133 0 1 1 118 37 35 30 34 3 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 230;
}
);
leftKerningGroup = i;
note = i.alt1;
rightKerningGroup = i;
unicode = F01D;
},
{
glyphname = h.alt1;
lastChange = "2019-11-20 00:23:02 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"159 367 LINE",
"159 441 OFFCURVE",
"156 514 QCURVE SMOOTH",
"152 605 OFFCURVE",
"82 605 QCURVE SMOOTH",
"56 605 OFFCURVE",
"44 583 OFFCURVE",
"46 553 QCURVE SMOOTH",
"63 380 OFFCURVE",
"86 62 QCURVE SMOOTH",
"88 34 OFFCURVE",
"123 -6 OFFCURVE",
"154 -8 QCURVE SMOOTH",
"167 -9 OFFCURVE",
"184 3 OFFCURVE",
"210 153 OFFCURVE",
"235 175 OFFCURVE",
"283 161 OFFCURVE",
"300 104 OFFCURVE",
"320 -14 QCURVE SMOOTH",
"324 -38 OFFCURVE",
"348 -72 OFFCURVE",
"367 -68 QCURVE",
"396 -63 OFFCURVE",
"396 -27 QCURVE SMOOTH",
"396 -19 OFFCURVE",
"394 -3 QCURVE SMOOTH",
"384 80 OFFCURVE",
"373 118 QCURVE SMOOTH",
"355 181 OFFCURVE",
"279 257 OFFCURVE",
"235 257 QCURVE SMOOTH",
"224 257 OFFCURVE",
"201 251 OFFCURVE",
"170 222 OFFCURVE",
"163 219 QCURVE",
"161 247 OFFCURVE",
"161 269 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
1 1 0 73 0 1 0 1 133 0 0 0 118 42 40 36 2 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 440;
}
);
leftKerningGroup = b;
note = h.alt1;
rightKerningGroup = b;
unicode = F01E;
},
{
glyphname = g.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"459 -329 OFFCURVE",
"457 -222 QCURVE SMOOTH",
"455 -167 OFFCURVE",
"450 -85 OFFCURVE",
"448 -57 QCURVE SMOOTH",
"442 13 OFFCURVE",
"439 85 QCURVE SMOOTH",
"438 103 OFFCURVE",
"441 148 OFFCURVE",
"441 157 QCURVE",
"445 209 OFFCURVE",
"443 235 QCURVE SMOOTH",
"441 256 OFFCURVE",
"424 300 OFFCURVE",
"411 307 QCURVE SMOOTH",
"342 343 OFFCURVE",
"271 343 QCURVE SMOOTH",
"166 343 OFFCURVE",
"94 263 QCURVE SMOOTH",
"50 213 OFFCURVE",
"50 156 QCURVE SMOOTH",
"50 107 OFFCURVE",
"114 27 OFFCURVE",
"168 11 QCURVE SMOOTH",
"217 -3 OFFCURVE",
"251 -3 QCURVE SMOOTH",
"295 -3 OFFCURVE",
"332 17 QCURVE",
"340 10 OFFCURVE",
"341 9 QCURVE",
"360 -66 OFFCURVE",
"360 -143 QCURVE SMOOTH",
"360 -228 OFFCURVE",
"337 -306 QCURVE",
"330 -334 OFFCURVE",
"275 -371 OFFCURVE",
"245 -371 QCURVE SMOOTH",
"164 -371 LINE",
"180 -400 OFFCURVE",
"250 -431 OFFCURVE",
"291 -431 QCURVE SMOOTH",
"324 -431 OFFCURVE",
"383 -410 OFFCURVE",
"402 -390 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"261 74 OFFCURVE",
"232 65 OFFCURVE",
"216 65 QCURVE SMOOTH",
"190 65 OFFCURVE",
"178 74 QCURVE",
"166 82 OFFCURVE",
"150 121 OFFCURVE",
"150 141 QCURVE SMOOTH",
"150 165 OFFCURVE",
"161 179 QCURVE SMOOTH",
"207 235 OFFCURVE",
"262 267 QCURVE SMOOTH",
"276 275 OFFCURVE",
"288 275 QCURVE SMOOTH",
"306 275 OFFCURVE",
"329 244 OFFCURVE",
"329 219 QCURVE SMOOTH",
"329 182 OFFCURVE",
"299 124 OFFCURVE",
"268 82 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
33 1 5 4 15 1 2 5 2 76 0 3 0 4 5 3 4 105 0 5 0 2 1 5 2 105 0 1 0 0 1 87 0 1 1 0 97 0 0 1 0 81 61 59 50 48 39 41 34 33 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 507;
}
);
note = g.alt1;
unicode = F01F;
},
{
glyphname = f.alt1;
lastChange = "2019-11-20 01:35:46 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"294 -159 OFFCURVE",
"291 -129 QCURVE SMOOTH",
"275 1 OFFCURVE",
"255 120 QCURVE SMOOTH",
"254 126 OFFCURVE",
"254 136 QCURVE SMOOTH",
"254 149 OFFCURVE",
"266 163 OFFCURVE",
"281 167 QCURVE SMOOTH",
"326 179 OFFCURVE",
"371 194 QCURVE",
"397 204 OFFCURVE",
"398 213 QCURVE SMOOTH",
"399 221 OFFCURVE",
"390 240 OFFCURVE",
"384 247 QCURVE",
"367 264 OFFCURVE",
"346 264 QCURVE SMOOTH",
"332 264 OFFCURVE",
"304 254 QCURVE SMOOTH",
"286 247 OFFCURVE",
"268 247 QCURVE SMOOTH",
"250 247 OFFCURVE",
"233 265 OFFCURVE",
"229 280 QCURVE SMOOTH",
"192 421 OFFCURVE",
"242 496 QCURVE SMOOTH",
"252 511 OFFCURVE",
"245 526 QCURVE SMOOTH",
"237 542 OFFCURVE",
"226 564 OFFCURVE",
"200 571 QCURVE SMOOTH",
"192 573 OFFCURVE",
"188 573 QCURVE SMOOTH",
"168 573 OFFCURVE",
"129 544 OFFCURVE",
"125 524 QCURVE SMOOTH",
"113 465 OFFCURVE",
"109 389 QCURVE SMOOTH",
"109 346 OFFCURVE",
"123 291 QCURVE SMOOTH",
"131 269 OFFCURVE",
"131 256 QCURVE SMOOTH",
"131 237 OFFCURVE",
"105 214 OFFCURVE",
"76 204 QCURVE SMOOTH",
"60 198 OFFCURVE",
"30 168 OFFCURVE",
"30 156 QCURVE SMOOTH",
"30 139 OFFCURVE",
"61 122 OFFCURVE",
"82 123 QCURVE",
"94 122 LINE",
"129 121 OFFCURVE",
"151 115 OFFCURVE",
"161 93 OFFCURVE",
"168 58 QCURVE SMOOTH",
"172 35 LINE SMOOTH",
"182 -13 OFFCURVE",
"192 -80 OFFCURVE",
"192 -113 QCURVE SMOOTH",
"192 -177 OFFCURVE",
"171 -227 QCURVE",
"204 -248 OFFCURVE",
"228 -248 QCURVE SMOOTH",
"266 -248 OFFCURVE",
"284 -191 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
3 1 0 1 1 76 0 3 5 3 133 0 5 4 5 133 0 4 1 4 133 2 1 1 0 1 133 0 0 0 118 49 47 45 43 32 31 17 26 32 6 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 428;
}
);
leftKerningGroup = f;
note = f.alt1;
rightKerningGroup = f;
unicode = F020;
},
{
glyphname = e.alt1;
lastChange = "2019-11-20 00:09:13 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"93 379 OFFCURVE",
"55 307 QCURVE",
"47 292 OFFCURVE",
"40 247 OFFCURVE",
"39 240 QCURVE SMOOTH",
"36 220 OFFCURVE",
"36 198 QCURVE SMOOTH",
"36 127 OFFCURVE",
"104 18 OFFCURVE",
"168 1 QCURVE SMOOTH",
"206 -9 OFFCURVE",
"232 -9 QCURVE SMOOTH",
"329 -10 OFFCURVE",
"413 74 QCURVE SMOOTH",
"432 93 OFFCURVE",
"432 106 QCURVE SMOOTH",
"432 118 OFFCURVE",
"420 129 QCURVE",
"403 145 OFFCURVE",
"388 145 QCURVE SMOOTH",
"376 145 OFFCURVE",
"360 134 QCURVE",
"305 94 OFFCURVE",
"246 64 QCURVE SMOOTH",
"230 56 OFFCURVE",
"209 58 QCURVE SMOOTH",
"189 60 OFFCURVE",
"179 66 QCURVE",
"170 74 OFFCURVE",
"157 99 OFFCURVE",
"147 136 OFFCURVE",
"145 142 QCURVE SMOOTH",
"144 146 OFFCURVE",
"157 163 OFFCURVE",
"163 165 QCURVE",
"203 172 OFFCURVE",
"270 208 OFFCURVE",
"318 240 QCURVE SMOOTH",
"346 259 OFFCURVE",
"370 275 QCURVE SMOOTH",
"399 294 OFFCURVE",
"400 314 QCURVE SMOOTH",
"401 334 OFFCURVE",
"371 352 QCURVE SMOOTH",
"305 391 OFFCURVE",
"237 391 QCURVE SMOOTH",
"223 391 OFFCURVE",
"216 390 QCURVE",
"211 390 OFFCURVE",
"199 391 OFFCURVE",
"190 390 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238 296 OFFCURVE",
"183 265 OFFCURVE",
"159 268 QCURVE",
"167 296 OFFCURVE",
"193 324 OFFCURVE",
"216 324 QCURVE SMOOTH",
"230 324 OFFCURVE",
"248 318 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
58 55 2 2 4 1 76 0 2 4 1 4 2 1 128 0 0 0 4 2 0 4 105 0 1 3 3 1 89 0 1 1 3 97 0 3 1 3 81 53 51 39 37 31 29 25 23 35 5 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 436;
}
);
leftKerningGroup = e;
note = e.alt1;
rightKerningGroup = e;
unicode = F021;
},
{
glyphname = d.alt1;
lastChange = "2019-11-20 01:36:07 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"492 82 OFFCURVE",
"513 93 OFFCURVE",
"520 96 QCURVE",
"517 100 OFFCURVE",
"501 121 OFFCURVE",
"492 127 QCURVE",
"488 131 OFFCURVE",
"473 137 OFFCURVE",
"470 139 QCURVE",
"447 149 OFFCURVE",
"442 159 QCURVE SMOOTH",
"421 202 OFFCURVE",
"400 252 OFFCURVE",
"398 279 QCURVE SMOOTH",
"392 372 OFFCURVE",
"386 560 QCURVE SMOOTH",
"384 623 LINE",
"384 672 OFFCURVE",
"336 681 QCURVE",
"333 682 OFFCURVE",
"326 682 QCURVE SMOOTH",
"305 682 OFFCURVE",
"275 657 OFFCURVE",
"271 637 QCURVE SMOOTH",
"263 595 OFFCURVE",
"263 572 QCURVE SMOOTH",
"264 489 OFFCURVE",
"273 389 QCURVE SMOOTH",
"275 366 OFFCURVE",
"257 348 OFFCURVE",
"236 348 QCURVE SMOOTH",
"192 348 OFFCURVE",
"127 326 OFFCURVE",
"102 295 QCURVE SMOOTH",
"44 224 OFFCURVE",
"45 156 QCURVE SMOOTH",
"46 93 OFFCURVE",
"93 41 QCURVE SMOOTH",
"113 19 OFFCURVE",
"165 -4 OFFCURVE",
"193 -4 QCURVE SMOOTH",
"233 -4 OFFCURVE",
"299 41 OFFCURVE",
"310 79 QCURVE",
"309 78 OFFCURVE",
"324 118 QCURVE SMOOTH",
"334 144 LINE",
"365 111 OFFCURVE",
"423 77 OFFCURVE",
"456 77 QCURVE SMOOTH",
"470 77 OFFCURVE",
"485 80 QCURVE"
);
},
{
closed = 1;
nodes = (
"223 284 OFFCURVE",
"234 284 QCURVE SMOOTH",
"254 284 OFFCURVE",
"254 263 QCURVE SMOOTH",
"254 215 OFFCURVE",
"220 124 OFFCURVE",
"188 70 QCURVE",
"153 101 OFFCURVE",
"153 154 QCURVE SMOOTH",
"153 191 OFFCURVE",
"185 260 OFFCURVE",
"210 276 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
4 1 0 4 56 1 1 0 2 76 0 3 2 3 133 0 0 4 1 4 0 1 128 0 1 1 132 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 62 60 24 40 39 32 5 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 550;
}
);
leftKerningGroup = d;
note = d.alt1;
unicode = F022;
},
{
glyphname = c.alt1;
lastChange = "2019-06-19 01:41:49 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"309 146 LINE SMOOTH",
"284 131 OFFCURVE",
"231 101 OFFCURVE",
"207 92 QCURVE SMOOTH",
"177 81 OFFCURVE",
"161 81 QCURVE SMOOTH",
"144 81 OFFCURVE",
"128 105 OFFCURVE",
"128 131 QCURVE SMOOTH",
"128 167 OFFCURVE",
"146 239 OFFCURVE",
"165 293 QCURVE SMOOTH",
"181 341 OFFCURVE",
"225 341 QCURVE SMOOTH",
"232 341 OFFCURVE",
"246 339 QCURVE",
"251 338 OFFCURVE",
"272 334 OFFCURVE",
"280 334 QCURVE SMOOTH",
"311 335 OFFCURVE",
"311 353 QCURVE SMOOTH",
"311 362 OFFCURVE",
"303 376 QCURVE SMOOTH",
"286 405 OFFCURVE",
"225 440 OFFCURVE",
"191 440 QCURVE SMOOTH",
"160 440 OFFCURVE",
"102 408 OFFCURVE",
"80 374 QCURVE SMOOTH",
"24 289 OFFCURVE",
"24 183 QCURVE SMOOTH",
"24 171 OFFCURVE",
"26 145 QCURVE SMOOTH",
"28 110 OFFCURVE",
"74 47 OFFCURVE",
"143 8 OFFCURVE",
"177 8 QCURVE SMOOTH",
"190 8 OFFCURVE",
"203 11 QCURVE",
"269 29 OFFCURVE",
"371 90 OFFCURVE",
"407 140 QCURVE",
"394 160 OFFCURVE",
"379 176 OFFCURVE",
"370 176 QCURVE SMOOTH",
"359 176 OFFCURVE",
"331 159 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
13 4 2 5 0 1 76 0 3 4 0 4 3 0 128 0 0 5 4 0 5 126 0 2 0 4 3 2 4 105 0 5 1 1 5 89 0 5 5 1 97 0 1 5 1 81 38 36 21 41 38 32 6 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 427;
}
);
note = c.alt1;
unicode = F023;
},
{
glyphname = b.alt1;
lastChange = "2019-06-19 01:40:06 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"167 450 OFFCURVE",
"167 485 QCURVE",
"166 536 LINE",
"166 568 OFFCURVE",
"140 610 OFFCURVE",
"108 610 QCURVE SMOOTH",
"82 610 OFFCURVE",
"50 578 OFFCURVE",
"50 554 QCURVE SMOOTH",
"50 543 OFFCURVE",
"52 537 QCURVE",
"61 503 OFFCURVE",
"64 468 QCURVE",
"72 239 LINE",
"72 234 OFFCURVE",
"75 220 OFFCURVE",
"75 217 QCURVE",
"79 199 OFFCURVE",
"78 190 QCURVE SMOOTH",
"75 166 OFFCURVE",
"75 146 QCURVE SMOOTH",
"75 108 OFFCURVE",
"105 61 OFFCURVE",
"128 47 QCURVE SMOOTH",
"139 40 OFFCURVE",
"152 34 QCURVE SMOOTH",
"204 0 OFFCURVE",
"257 0 QCURVE SMOOTH",
"318 0 OFFCURVE",
"376 43 QCURVE SMOOTH",
"429 81 OFFCURVE",
"490 183 OFFCURVE",
"490 243 QCURVE SMOOTH",
"490 315 OFFCURVE",
"409 396 OFFCURVE",
"349 396 QCURVE SMOOTH",
"301 396 OFFCURVE",
"255 371 QCURVE SMOOTH",
"236 361 OFFCURVE",
"202 337 QCURVE SMOOTH",
"179 321 LINE",
"175 341 LINE SMOOTH",
"170 364 OFFCURVE",
"169 382 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"343 320 OFFCURVE",
"350 323 QCURVE SMOOTH",
"365 323 OFFCURVE",
"372 297 QCURVE",
"376 284 OFFCURVE",
"376 265 QCURVE SMOOTH",
"376 213 OFFCURVE",
"311 104 OFFCURVE",
"264 79 QCURVE SMOOTH",
"258 76 OFFCURVE",
"243 67 OFFCURVE",
"223 58 OFFCURVE",
"214 58 QCURVE SMOOTH",
"201 58 OFFCURVE",
"187 68 QCURVE",
"179 251 OFFCURVE",
"327 313 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
34 30 2 0 2 45 2 2 3 4 2 76 0 2 0 2 133 0 0 0 4 3 0 4 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 59 57 48 46 38 36 38 38 5 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 540;
}
);
note = b.alt1;
unicode = F024;
},
{
glyphname = a.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"276 440 OFFCURVE",
"256 440 QCURVE SMOOTH",
"206 440 OFFCURVE",
"125 386 OFFCURVE",
"101 336 QCURVE SMOOTH",
"74 278 OFFCURVE",
"63 230 QCURVE SMOOTH",
"47 164 OFFCURVE",
"50 115 QCURVE",
"52 96 OFFCURVE",
"69 56 OFFCURVE",
"81 45 QCURVE",
"121 11 OFFCURVE",
"166 11 QCURVE SMOOTH",
"193 11 OFFCURVE",
"241 39 OFFCURVE",
"259 67 QCURVE SMOOTH",
"269 82 OFFCURVE",
"280 95 OFFCURVE",
"285 95 QCURVE SMOOTH",
"291 95 OFFCURVE",
"303 83 OFFCURVE",
"314 69 QCURVE SMOOTH",
"336 42 OFFCURVE",
"394 14 OFFCURVE",
"424 14 QCURVE SMOOTH",
"471 14 OFFCURVE",
"507 47 QCURVE SMOOTH",
"527 65 OFFCURVE",
"527 87 QCURVE SMOOTH",
"527 100 OFFCURVE",
"518 115 QCURVE",
"505 134 OFFCURVE",
"487 134 QCURVE SMOOTH",
"471 134 OFFCURVE",
"456 122 QCURVE",
"431 105 LINE",
"418 97 OFFCURVE",
"410 97 QCURVE SMOOTH",
"397 97 OFFCURVE",
"390 116 QCURVE SMOOTH",
"378 150 OFFCURVE",
"377 169 QCURVE SMOOTH",
"376 208 OFFCURVE",
"380 286 QCURVE SMOOTH",
"383 329 OFFCURVE",
"344 341 QCURVE SMOOTH",
"326 346 OFFCURVE",
"313 346 QCURVE SMOOTH",
"277 346 OFFCURVE",
"263 318 QCURVE SMOOTH",
"236 267 OFFCURVE",
"180 167 QCURVE",
"169 143 LINE",
"163 164 OFFCURVE",
"163 185 QCURVE SMOOTH",
"163 230 OFFCURVE",
"208 323 OFFCURVE",
"286 396 OFFCURVE",
"331 413 QCURVE",
"325 417 OFFCURVE",
"302 434 OFFCURVE",
"293 436 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
2 1 0 6 8 1 2 0 53 1 1 2 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
9 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 38 values pushed */
0 6 0 6 133 0 2 0 1 0 2 1 128 0 1 4 3 1 89 0 0 0 4 3 0 4 105 0 1 1 3 97 5 1 3 1 3 81 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 42 values pushed */
0 6 0 6 133 0 2 0 1 0 2 1 128 0 5 3 5 134 0 1 4 3 1 89 0 0 0 4 3 0 4 105 0 1 1 3 97 0 3 1 3 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
0 6 0 6 133 0 2 0 1 0 2 1 128 0 1 4 3 1 89 0 0 0 4 3 0 4 105 0 1 1 3 97 5 1 3 1 3 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
42 36 36 38 36 24 44 7 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 577;
}
);
note = a.alt2;
unicode = F025;
},
{
glyphname = A.alt1;
lastChange = "2019-06-19 01:36:06 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"146 59 OFFCURVE",
"208 92 OFFCURVE",
"227 127 QCURVE SMOOTH",
"232 136 OFFCURVE",
"253 190 QCURVE SMOOTH",
"281 265 OFFCURVE",
"289 269 QCURVE",
"303 275 OFFCURVE",
"331 275 QCURVE SMOOTH",
"372 274 LINE SMOOTH",
"394 274 OFFCURVE",
"403 277 QCURVE",
"420 282 OFFCURVE",
"464 288 QCURVE",
"501 291 OFFCURVE",
"525 298 QCURVE",
"531 278 OFFCURVE",
"564 97 QCURVE SMOOTH",
"569 69 LINE SMOOTH",
"570 63 OFFCURVE",
"570 35 OFFCURVE",
"577 16 OFFCURVE",
"590 12 QCURVE",
"623 0 OFFCURVE",
"650 0 QCURVE SMOOTH",
"660 0 OFFCURVE",
"690 12 OFFCURVE",
"699 15 QCURVE",
"700 42 LINE",
"700 49 OFFCURVE",
"699 53 QCURVE SMOOTH",
"687 108 LINE SMOOTH",
"683 127 OFFCURVE",
"658 234 OFFCURVE",
"646 277 QCURVE SMOOTH",
"637 309 OFFCURVE",
"637 327 QCURVE SMOOTH",
"637 360 OFFCURVE",
"667 380 QCURVE",
"663 385 OFFCURVE",
"651 400 OFFCURVE",
"646 402 QCURVE",
"610 413 OFFCURVE",
"605 459 QCURVE SMOOTH",
"601 487 OFFCURVE",
"594 503 QCURVE SMOOTH",
"575 543 LINE SMOOTH",
"557 582 OFFCURVE",
"533 629 OFFCURVE",
"518 649 QCURVE SMOOTH",
"500 673 OFFCURVE",
"453 698 OFFCURVE",
"428 698 QCURVE SMOOTH",
"400 698 OFFCURVE",
"350 669 OFFCURVE",
"332 641 QCURVE SMOOTH",
"262 527 OFFCURVE",
"228 447 QCURVE SMOOTH",
"202 388 OFFCURVE",
"153 252 OFFCURVE",
"147 236 QCURVE SMOOTH",
"126 176 LINE SMOOTH",
"113 142 OFFCURVE",
"82 108 OFFCURVE",
"50 111 QCURVE",
"56 81 OFFCURVE",
"85 59 OFFCURVE",
"107 59 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"346 431 OFFCURVE",
"391 517 OFFCURVE",
"429 578 QCURVE",
"441 544 OFFCURVE",
"472 483 QCURVE SMOOTH",
"500 429 OFFCURVE",
"508 407 QCURVE",
"490 396 OFFCURVE",
"445 389 OFFCURVE",
"413 389 QCURVE SMOOTH",
"377 389 LINE SMOOTH",
"352 389 OFFCURVE",
"333 386 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 72 values pushed */
77 73 2 4 0 80 51 28 3 2 4 2 1 3 2 39 38 2 1 3 4 76 0 0 4 0 133 5 1 3 2 1 2 3 1 128 0 1 1 132 0 4 2 2 4 89 0 4 4 2 97 0 2 4 2 81 0 0 71 68 0 67 0 66 59 56 43 41 45 6 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 750;
}
);
note = A.alt1;
rightKerningGroup = A;
unicode = F026;
},
{
glyphname = A.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"101 137 OFFCURVE",
"101 111 QCURVE SMOOTH",
"101 105 OFFCURVE",
"99 93 QCURVE",
"95 76 OFFCURVE",
"95 52 QCURVE",
"93 32 LINE SMOOTH",
"90 9 OFFCURVE",
"114 -6 QCURVE SMOOTH",
"138 -21 OFFCURVE",
"156 -21 QCURVE SMOOTH",
"186 -21 OFFCURVE",
"202 23 QCURVE SMOOTH",
"213 55 OFFCURVE",
"218 96 QCURVE SMOOTH",
"226 152 OFFCURVE",
"276 166 QCURVE SMOOTH",
"344 186 OFFCURVE",
"411 186 QCURVE SMOOTH",
"438 186 OFFCURVE",
"466 183 QCURVE",
"472 159 LINE SMOOTH",
"483 113 OFFCURVE",
"486 97 QCURVE",
"494 41 OFFCURVE",
"527 10 QCURVE",
"538 1 OFFCURVE",
"558 1 QCURVE SMOOTH",
"566 1 OFFCURVE",
"570 2 QCURVE",
"575 3 OFFCURVE",
"586 23 OFFCURVE",
"585 31 QCURVE",
"583 63 OFFCURVE",
"566 114 QCURVE SMOOTH",
"559 135 OFFCURVE",
"558 139 QCURVE",
"548 158 OFFCURVE",
"548 172 QCURVE SMOOTH",
"548 186 OFFCURVE",
"572 202 OFFCURVE",
"598 205 QCURVE SMOOTH",
"615 207 OFFCURVE",
"635 233 OFFCURVE",
"636 254 QCURVE",
"608 258 OFFCURVE",
"594 259 QCURVE",
"554 264 OFFCURVE",
"551 265 QCURVE",
"510 547 LINE SMOOTH",
"508 561 OFFCURVE",
"506 585 QCURVE",
"501 622 LINE SMOOTH",
"492 684 OFFCURVE",
"430 706 QCURVE SMOOTH",
"412 712 OFFCURVE",
"404 712 QCURVE SMOOTH",
"386 712 OFFCURVE",
"374 697 QCURVE SMOOTH",
"367 688 OFFCURVE",
"351 670 QCURVE SMOOTH",
"337 654 OFFCURVE",
"311 621 OFFCURVE",
"302 605 QCURVE SMOOTH",
"196 422 OFFCURVE",
"143 271 QCURVE SMOOTH",
"127 230 OFFCURVE",
"94 212 QCURVE",
"90 209 OFFCURVE",
"64 202 OFFCURVE",
"50 194 OFFCURVE",
"50 186 QCURVE SMOOTH",
"50 174 OFFCURVE",
"64 161 OFFCURVE",
"77 154 QCURVE"
);
},
{
closed = 1;
nodes = (
"276 277 OFFCURVE",
"319 392 OFFCURVE",
"378 512 OFFCURVE",
"398 538 QCURVE",
"411 490 OFFCURVE",
"429 384 OFFCURVE",
"430 375 QCURVE SMOOTH",
"440 303 OFFCURVE",
"448 266 QCURVE",
"412 257 OFFCURVE",
"356 257 QCURVE SMOOTH",
"329 257 LINE SMOOTH",
"320 257 OFFCURVE",
"293 258 OFFCURVE",
"276 257 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 73 values pushed */
85 80 2 4 0 29 1 2 4 68 41 2 1 2 3 76 2 1 2 1 75 0 0 4 0 133 0 1 2 3 2 1 3 128 0 3 3 132 5 1 4 2 2 4 87 5 1 4 4 2 97 0 2 4 2 81 79 75 75 89 79 89 64 62 56 54 47 45 17 16 6 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 659;
}
);
note = A.alt2;
unicode = F027;
},
{
glyphname = A.alt3;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"598 304 OFFCURVE",
"594 304 QCURVE",
"594 306 OFFCURVE",
"609 308 QCURVE",
"632 314 OFFCURVE",
"648 325 QCURVE SMOOTH",
"667 338 OFFCURVE",
"690 346 QCURVE",
"710 354 OFFCURVE",
"732 372 OFFCURVE",
"735 389 QCURVE",
"705 394 OFFCURVE",
"685 394 QCURVE SMOOTH",
"679 394 OFFCURVE",
"655 392 QCURVE SMOOTH",
"631 390 LINE",
"613 389 LINE",
"584 388 LINE SMOOTH",
"577 388 OFFCURVE",
"555 385 QCURVE",
"545 383 OFFCURVE",
"529 379 OFFCURVE",
"519 378 QCURVE SMOOTH",
"508 377 LINE",
"507 388 LINE",
"502 470 LINE SMOOTH",
"495 575 OFFCURVE",
"489 646 QCURVE SMOOTH",
"485 697 OFFCURVE",
"413 760 OFFCURVE",
"359 760 QCURVE SMOOTH",
"352 760 OFFCURVE",
"339 755 OFFCURVE",
"326 743 OFFCURVE",
"324 742 QCURVE",
"311 729 OFFCURVE",
"298 724 QCURVE",
"289 720 OFFCURVE",
"283 708 OFFCURVE",
"281 694 QCURVE SMOOTH",
"279 678 OFFCURVE",
"271 640 OFFCURVE",
"264 626 QCURVE SMOOTH",
"240 575 OFFCURVE",
"203 502 QCURVE SMOOTH",
"165 426 LINE",
"151 398 LINE SMOOTH",
"117 328 OFFCURVE",
"73 227 OFFCURVE",
"59 175 QCURVE SMOOTH",
"56 165 LINE",
"51 151 OFFCURVE",
"50 139 QCURVE SMOOTH",
"49 128 OFFCURVE",
"78 94 OFFCURVE",
"91 92 QCURVE",
"104 89 OFFCURVE",
"128 104 OFFCURVE",
"135 119 QCURVE SMOOTH",
"144 137 LINE",
"153 158 OFFCURVE",
"155 163 QCURVE SMOOTH",
"171 204 OFFCURVE",
"215 251 OFFCURVE",
"256 251 QCURVE",
"270 250 LINE",
"273 251 LINE",
"282 254 LINE",
"370 266 LINE",
"412 272 LINE",
"413 260 LINE",
"413 248 OFFCURVE",
"415 226 QCURVE",
"417 180 OFFCURVE",
"417 158 QCURVE SMOOTH",
"417 120 OFFCURVE",
"416 102 QCURVE SMOOTH",
"414 46 OFFCURVE",
"415 18 QCURVE SMOOTH",
"416 0 OFFCURVE",
"433 -18 OFFCURVE",
"452 -20 QCURVE",
"455 -21 OFFCURVE",
"461 -21 QCURVE SMOOTH",
"475 -21 OFFCURVE",
"498 -6 OFFCURVE",
"504 7 QCURVE",
"515 34 OFFCURVE",
"516 55 QCURVE SMOOTH",
"518 131 OFFCURVE",
"518 171 QCURVE SMOOTH",
"519 229 LINE",
"519 244 LINE SMOOTH",
"519 258 OFFCURVE",
"517 275 OFFCURVE",
"517 280 QCURVE SMOOTH",
"517 289 OFFCURVE",
"527 296 OFFCURVE",
"544 298 QCURVE",
"556 300 OFFCURVE",
"580 302 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"396 585 LINE",
"396 358 LINE",
"248 335 LINE",
"346 539 OFFCURVE",
"373 566 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
104 1 4 2 103 102 76 75 30 29 4 7 1 3 27 1 0 1 3 76 89 1 3 1 75 0 2 4 2 133 0 4 3 4 133 0 3 1 3 133 0 1 0 1 133 0 0 0 118 88 86 84 81 70 68 36 33 31 5 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 730;
}
);
note = A.alt3;
unicode = F028;
},
{
glyphname = E.alt1;
lastChange = "2019-06-23 23:16:21 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"363 540 LINE",
"462 563 LINE",
"476 565 OFFCURVE",
"482 565 QCURVE SMOOTH",
"503 565 OFFCURVE",
"517 551 QCURVE SMOOTH",
"527 541 OFFCURVE",
"555 541 QCURVE SMOOTH",
"568 541 OFFCURVE",
"596 543 QCURVE",
"635 544 LINE SMOOTH",
"652 544 OFFCURVE",
"675 563 OFFCURVE",
"681 577 QCURVE",
"683 581 OFFCURVE",
"683 590 QCURVE SMOOTH",
"683 610 OFFCURVE",
"674 622 QCURVE",
"642 672 OFFCURVE",
"576 672 QCURVE",
"529 674 OFFCURVE",
"481 669 QCURVE SMOOTH",
"335 654 OFFCURVE",
"244 626 QCURVE SMOOTH",
"225 620 OFFCURVE",
"208 599 OFFCURVE",
"208 581 QCURVE",
"206 557 OFFCURVE",
"201 541 QCURVE",
"189 509 OFFCURVE",
"181 483 QCURVE",
"155 413 OFFCURVE",
"144 377 QCURVE SMOOTH",
"138 359 OFFCURVE",
"116 343 OFFCURVE",
"98 342 QCURVE",
"82 342 OFFCURVE",
"50 338 QCURVE",
"51 308 OFFCURVE",
"84 281 OFFCURVE",
"114 272 QCURVE",
"111 242 LINE",
"107 210 LINE SMOOTH",
"97 138 OFFCURVE",
"94 103 QCURVE SMOOTH",
"92 73 OFFCURVE",
"105 56 QCURVE SMOOTH",
"123 33 OFFCURVE",
"156 2 QCURVE SMOOTH",
"174 -16 LINE SMOOTH",
"201 -43 OFFCURVE",
"235 -39 QCURVE SMOOTH",
"272 -34 LINE SMOOTH",
"328 -28 OFFCURVE",
"356 -20 QCURVE SMOOTH",
"426 -1 OFFCURVE",
"570 45 QCURVE SMOOTH",
"644 70 OFFCURVE",
"740 98 QCURVE SMOOTH",
"773 107 OFFCURVE",
"792 115 QCURVE",
"806 122 OFFCURVE",
"822 144 OFFCURVE",
"822 156 QCURVE SMOOTH",
"822 163 OFFCURVE",
"819 170 QCURVE SMOOTH",
"811 190 OFFCURVE",
"786 190 QCURVE SMOOTH",
"780 190 OFFCURVE",
"768 188 QCURVE",
"739 181 OFFCURVE",
"674 163 QCURVE",
"644 153 OFFCURVE",
"592 140 QCURVE SMOOTH",
"482 112 LINE SMOOTH",
"393 88 OFFCURVE",
"305 67 QCURVE SMOOTH",
"257 54 OFFCURVE",
"224 54 QCURVE SMOOTH",
"207 54 OFFCURVE",
"191 57 QCURVE",
"191 62 OFFCURVE",
"191 87 OFFCURVE",
"192 95 QCURVE",
"196 118 OFFCURVE",
"203 153 QCURVE",
"212 191 OFFCURVE",
"218 229 QCURVE SMOOTH",
"221 248 OFFCURVE",
"242 269 OFFCURVE",
"261 274 QCURVE",
"361 296 OFFCURVE",
"425 316 QCURVE SMOOTH",
"450 323 OFFCURVE",
"477 323 QCURVE SMOOTH",
"500 323 OFFCURVE",
"528 318 QCURVE SMOOTH",
"533 317 OFFCURVE",
"549 315 OFFCURVE",
"553 315 QCURVE",
"550 355 OFFCURVE",
"517 395 OFFCURVE",
"482 398 QCURVE SMOOTH",
"472 399 OFFCURVE",
"450 399 QCURVE SMOOTH",
"427 399 OFFCURVE",
"391 397 OFFCURVE",
"379 396 QCURVE SMOOTH",
"355 394 LINE SMOOTH",
"341 393 OFFCURVE",
"302 387 QCURVE SMOOTH",
"266 382 LINE",
"323 530 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 93 values pushed */
86 1 8 5 1 1 4 0 75 1 1 4 72 13 2 3 1 68 1 2 3 5 76 0 8 5 6 5 8 6 128 0 4 0 1 0 4 1 128 0 3 1 2 1 3 2 128 0 2 2 132 0 5 7 1 6 0 5 6 105 0 0 4 1 0 89 0 0 0 1 97 0 1 0 1 81 109 108 106 104 103 101 94 92 78 76 41 46 40 54 9 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 792;
}
);
note = E.alt1;
unicode = F029;
},
{
glyphname = E.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"540 405 LINE",
"534 407 OFFCURVE",
"512 418 QCURVE SMOOTH",
"480 434 OFFCURVE",
"466 434 QCURVE SMOOTH",
"460 434 OFFCURVE",
"457 433 QCURVE",
"411 420 OFFCURVE",
"362 420 QCURVE SMOOTH",
"318 420 OFFCURVE",
"240 433 QCURVE SMOOTH",
"208 438 OFFCURVE",
"184 464 OFFCURVE",
"184 488 QCURVE SMOOTH",
"184 502 OFFCURVE",
"185 510 QCURVE SMOOTH",
"186 518 OFFCURVE",
"186 534 QCURVE SMOOTH",
"186 555 OFFCURVE",
"189 582 OFFCURVE",
"196 592 QCURVE SMOOTH",
"201 599 OFFCURVE",
"223 606 OFFCURVE",
"243 609 QCURVE SMOOTH",
"259 611 OFFCURVE",
"266 613 QCURVE SMOOTH",
"270 614 LINE",
"380 634 OFFCURVE",
"436 645 QCURVE SMOOTH",
"476 652 LINE SMOOTH",
"537 662 OFFCURVE",
"564 670 QCURVE SMOOTH",
"574 673 OFFCURVE",
"595 699 OFFCURVE",
"601 705 QCURVE",
"586 720 LINE SMOOTH",
"568 738 OFFCURVE",
"554 746 QCURVE",
"551 748 OFFCURVE",
"542 748 QCURVE SMOOTH",
"540 748 OFFCURVE",
"513 745 QCURVE",
"495 744 OFFCURVE",
"454 740 QCURVE SMOOTH",
"443 739 OFFCURVE",
"368 733 OFFCURVE",
"336 733 QCURVE SMOOTH",
"288 733 OFFCURVE",
"222 715 OFFCURVE",
"198 687 QCURVE",
"176 695 LINE",
"142 709 OFFCURVE",
"126 709 QCURVE",
"112 710 OFFCURVE",
"78 695 OFFCURVE",
"70 685 QCURVE",
"54 660 OFFCURVE",
"50 613 QCURVE SMOOTH",
"49 603 OFFCURVE",
"57 583 QCURVE SMOOTH",
"63 567 OFFCURVE",
"63 558 QCURVE",
"66 492 OFFCURVE",
"70 360 QCURVE SMOOTH",
"72 270 OFFCURVE",
"74 226 QCURVE SMOOTH",
"76 160 OFFCURVE",
"147 56 OFFCURVE",
"259 -7 OFFCURVE",
"320 -13 QCURVE SMOOTH",
"352 -16 OFFCURVE",
"382 -16 QCURVE SMOOTH",
"499 -16 OFFCURVE",
"599 29 QCURVE SMOOTH",
"616 36 OFFCURVE",
"645 64 OFFCURVE",
"645 77 QCURVE SMOOTH",
"645 88 OFFCURVE",
"629 110 QCURVE SMOOTH",
"622 119 OFFCURVE",
"617 128 QCURVE",
"533 97 OFFCURVE",
"414 66 OFFCURVE",
"354 66 QCURVE SMOOTH",
"327 66 OFFCURVE",
"294 71 QCURVE SMOOTH",
"272 74 OFFCURVE",
"226 99 OFFCURVE",
"219 115 QCURVE SMOOTH",
"185 194 OFFCURVE",
"185 276 QCURVE SMOOTH",
"185 314 OFFCURVE",
"193 357 QCURVE",
"193 358 OFFCURVE",
"201 361 QCURVE",
"226 354 LINE SMOOTH",
"281 339 OFFCURVE",
"350 324 OFFCURVE",
"385 324 QCURVE SMOOTH",
"472 324 OFFCURVE",
"536 381 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
65 50 2 8 3 100 5 2 0 7 19 1 1 0 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 50 values pushed */
0 6 5 6 133 0 5 4 5 133 0 4 3 4 133 0 3 8 3 133 0 8 7 7 8 112 0 7 0 0 1 7 0 106 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 46 values pushed */
6 1 5 4 5 133 0 4 3 4 133 0 3 8 3 133 0 8 7 7 8 112 0 7 0 0 1 7 0 106 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 50 values pushed */
0 6 5 6 133 0 5 4 5 133 0 4 3 4 133 0 3 8 3 133 0 8 7 7 8 112 0 7 0 0 1 7 0 106 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
96 95 92 90 61 59 58 57 54 52 48 47 42 45 32 9 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 695;
}
);
note = E.alt2;
unicode = F02A;
},
{
glyphname = B.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"496 488 OFFCURVE",
"540 545 OFFCURVE",
"567 587 QCURVE SMOOTH",
"576 601 OFFCURVE",
"576 613 QCURVE SMOOTH",
"576 626 OFFCURVE",
"565 642 QCURVE SMOOTH",
"528 696 OFFCURVE",
"458 704 QCURVE SMOOTH",
"393 712 OFFCURVE",
"265 720 QCURVE SMOOTH",
"183 726 LINE",
"174 727 OFFCURVE",
"151 724 OFFCURVE",
"144 723 QCURVE SMOOTH",
"130 721 OFFCURVE",
"116 707 OFFCURVE",
"116 692 QCURVE SMOOTH",
"116 683 OFFCURVE",
"117 678 QCURVE",
"140 668 LINE SMOOTH",
"145 666 OFFCURVE",
"191 645 OFFCURVE",
"213 642 QCURVE SMOOTH",
"254 635 OFFCURVE",
"318 633 QCURVE SMOOTH",
"360 631 LINE",
"422 627 LINE",
"441 627 OFFCURVE",
"452 626 QCURVE",
"370 520 OFFCURVE",
"266 446 QCURVE",
"259 458 OFFCURVE",
"259 476 QCURVE SMOOTH",
"260 505 LINE SMOOTH",
"260 527 OFFCURVE",
"243 538 QCURVE SMOOTH",
"222 551 OFFCURVE",
"188 564 OFFCURVE",
"168 564 QCURVE SMOOTH",
"156 564 OFFCURVE",
"150 563 QCURVE",
"144 543 OFFCURVE",
"142 528 QCURVE SMOOTH",
"141 521 OFFCURVE",
"141 508 QCURVE SMOOTH",
"141 504 OFFCURVE",
"139 483 OFFCURVE",
"137 475 QCURVE SMOOTH",
"115 375 LINE SMOOTH",
"84 229 OFFCURVE",
"52 94 QCURVE",
"50 88 OFFCURVE",
"50 77 QCURVE SMOOTH",
"50 53 OFFCURVE",
"78 41 QCURVE",
"74 35 OFFCURVE",
"56 17 OFFCURVE",
"56 10 QCURVE SMOOTH",
"56 2 OFFCURVE",
"67 -5 QCURVE SMOOTH",
"75 -10 OFFCURVE",
"113 -33 OFFCURVE",
"155 -52 OFFCURVE",
"179 -52 QCURVE SMOOTH",
"241 -52 OFFCURVE",
"344 -37 OFFCURVE",
"391 -18 QCURVE SMOOTH",
"469 14 OFFCURVE",
"571 126 OFFCURVE",
"592 205 QCURVE SMOOTH",
"601 240 OFFCURVE",
"601 266 QCURVE SMOOTH",
"601 303 OFFCURVE",
"562 354 OFFCURVE",
"516 374 QCURVE SMOOTH",
"499 382 OFFCURVE",
"452 398 QCURVE SMOOTH",
"407 415 LINE",
"429 434 LINE SMOOTH",
"454 457 OFFCURVE",
"467 467 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"170 149 OFFCURVE",
"195 237 QCURVE SMOOTH",
"207 277 OFFCURVE",
"212 297 QCURVE",
"299 317 OFFCURVE",
"360 334 QCURVE SMOOTH",
"376 338 OFFCURVE",
"395 338 QCURVE SMOOTH",
"425 338 OFFCURVE",
"457 326 QCURVE SMOOTH",
"477 319 OFFCURVE",
"493 305 OFFCURVE",
"493 294 QCURVE SMOOTH",
"493 286 OFFCURVE",
"488 269 QCURVE SMOOTH",
"462 179 OFFCURVE",
"389 108 QCURVE SMOOTH",
"332 51 OFFCURVE",
"236 36 QCURVE SMOOTH",
"199 29 OFFCURVE",
"156 26 QCURVE",
"116 21 LINE",
"109 32 LINE",
"129 37 OFFCURVE",
"150 59 OFFCURVE",
"158 85 OFFCURVE",
"163 110 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
63 1 2 3 51 1 1 2 49 2 2 5 1 85 25 2 4 5 86 1 0 4 5 76 0 1 2 5 2 1 5 128 0 5 4 2 5 4 126 0 3 0 2 1 3 2 103 0 4 0 0 4 89 0 4 4 0 97 0 0 4 0 81 101 99 88 87 71 70 56 52 42 39 47 6 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 651;
}
);
note = B.alt1;
unicode = F02B;
},
{
glyphname = C.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"620 632 OFFCURVE",
"551 683 OFFCURVE",
"500 703 QCURVE SMOOTH",
"463 718 OFFCURVE",
"422 718 QCURVE SMOOTH",
"369 718 OFFCURVE",
"260 673 OFFCURVE",
"172 602 OFFCURVE",
"147 566 QCURVE SMOOTH",
"75 464 OFFCURVE",
"54 324 QCURVE SMOOTH",
"50 299 OFFCURVE",
"50 269 QCURVE SMOOTH",
"50 173 OFFCURVE",
"152 46 OFFCURVE",
"246 17 QCURVE SMOOTH",
"298 1 OFFCURVE",
"352 1 QCURVE SMOOTH",
"465 1 OFFCURVE",
"601 77 QCURVE SMOOTH",
"626 92 OFFCURVE",
"672 127 OFFCURVE",
"706 156 QCURVE SMOOTH",
"740 185 LINE SMOOTH",
"751 194 OFFCURVE",
"765 217 OFFCURVE",
"765 229 QCURVE SMOOTH",
"765 247 OFFCURVE",
"755 260 QCURVE",
"749 267 OFFCURVE",
"740 267 QCURVE SMOOTH",
"732 267 OFFCURVE",
"716 257 QCURVE SMOOTH",
"642 212 LINE",
"522 140 LINE SMOOTH",
"424 82 OFFCURVE",
"292 82 QCURVE SMOOTH",
"221 82 OFFCURVE",
"149 156 OFFCURVE",
"149 228 QCURVE SMOOTH",
"149 319 OFFCURVE",
"195 413 QCURVE SMOOTH",
"284 590 OFFCURVE",
"453 613 QCURVE SMOOTH",
"471 615 OFFCURVE",
"479 615 QCURVE SMOOTH",
"525 615 OFFCURVE",
"553 577 QCURVE",
"567 556 OFFCURVE",
"595 532 OFFCURVE",
"614 532 QCURVE SMOOTH",
"620 532 OFFCURVE",
"634 536 QCURVE",
"646 550 OFFCURVE",
"646 565 QCURVE SMOOTH",
"646 575 OFFCURVE",
"639 591 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
0 5 1 5 133 0 1 0 1 133 0 0 3 0 133 0 3 2 3 133 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 43 43 36 40 19 36 6 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 815;
}
);
note = C.alt1;
unicode = F02C;
},
{
glyphname = C.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"367 554 OFFCURVE",
"378 542 OFFCURVE",
"380 540 QCURVE",
"408 518 OFFCURVE",
"425 518 QCURVE SMOOTH",
"451 518 OFFCURVE",
"467 564 QCURVE SMOOTH",
"476 590 OFFCURVE",
"475 607 QCURVE SMOOTH",
"473 644 OFFCURVE",
"420 715 OFFCURVE",
"343 759 OFFCURVE",
"305 759 QCURVE SMOOTH",
"298 759 OFFCURVE",
"286 757 QCURVE",
"269 753 OFFCURVE",
"263 748 QCURVE",
"256 743 OFFCURVE",
"207 709 OFFCURVE",
"190 690 QCURVE",
"141 639 OFFCURVE",
"83 510 OFFCURVE",
"66 431 QCURVE SMOOTH",
"50 355 OFFCURVE",
"50 300 QCURVE SMOOTH",
"50 229 OFFCURVE",
"75 169 QCURVE SMOOTH",
"107 96 OFFCURVE",
"217 8 OFFCURVE",
"294 -2 QCURVE",
"318 -6 OFFCURVE",
"349 -6 QCURVE SMOOTH",
"462 -6 OFFCURVE",
"579 59 QCURVE SMOOTH",
"596 68 OFFCURVE",
"625 96 OFFCURVE",
"645 118 QCURVE",
"657 130 OFFCURVE",
"657 147 QCURVE SMOOTH",
"657 161 OFFCURVE",
"649 172 QCURVE",
"634 196 OFFCURVE",
"613 196 QCURVE SMOOTH",
"603 196 OFFCURVE",
"595 192 QCURVE",
"588 189 OFFCURVE",
"565 182 OFFCURVE",
"558 178 QCURVE",
"528 164 LINE SMOOTH",
"453 129 OFFCURVE",
"352 94 OFFCURVE",
"295 94 QCURVE SMOOTH",
"193 94 OFFCURVE",
"175 188 QCURVE SMOOTH",
"169 226 OFFCURVE",
"169 261 QCURVE SMOOTH",
"169 326 OFFCURVE",
"190 402 QCURVE SMOOTH",
"230 539 OFFCURVE",
"333 618 QCURVE",
"331 611 OFFCURVE",
"331 600 QCURVE SMOOTH",
"331 570 OFFCURVE",
"361 556 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
0 3 4 3 133 0 4 1 4 133 0 1 0 1 133 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 59 57 51 49 41 39 42 5 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 707;
}
);
note = C.alt2;
unicode = F02D;
},
{
glyphname = D.alt1;
lastChange = "2019-06-19 01:47:05 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"535 688 OFFCURVE",
"424 735 OFFCURVE",
"348 752 QCURVE SMOOTH",
"325 757 OFFCURVE",
"308 757 QCURVE SMOOTH",
"265 757 OFFCURVE",
"207 733 QCURVE SMOOTH",
"191 726 OFFCURVE",
"176 705 OFFCURVE",
"176 691 QCURVE SMOOTH",
"176 674 OFFCURVE",
"190 655 QCURVE SMOOTH",
"219 620 OFFCURVE",
"256 620 QCURVE SMOOTH",
"269 620 OFFCURVE",
"280 624 QCURVE",
"321 634 OFFCURVE",
"360 634 QCURVE SMOOTH",
"400 634 OFFCURVE",
"438 622 QCURVE SMOOTH",
"497 603 OFFCURVE",
"569 565 OFFCURVE",
"595 528 QCURVE SMOOTH",
"621 494 OFFCURVE",
"621 457 QCURVE SMOOTH",
"621 444 OFFCURVE",
"618 431 QCURVE SMOOTH",
"578 246 OFFCURVE",
"422 147 QCURVE SMOOTH",
"328 86 OFFCURVE",
"111 16 OFFCURVE",
"-20 -3 QCURVE",
"-6 -47 OFFCURVE",
"46 -96 OFFCURVE",
"82 -96 QCURVE SMOOTH",
"91 -96 OFFCURVE",
"96 -95 QCURVE",
"224 -75 OFFCURVE",
"433 -3 OFFCURVE",
"521 62 QCURVE SMOOTH",
"625 137 OFFCURVE",
"671 234 QCURVE SMOOTH",
"709 313 OFFCURVE",
"709 386 QCURVE SMOOTH",
"709 456 OFFCURVE",
"640 583 OFFCURVE",
"577 646 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"227 125 OFFCURVE",
"243 171 OFFCURVE",
"251 210 QCURVE SMOOTH",
"257 239 LINE",
"273 313 LINE SMOOTH",
"286 375 OFFCURVE",
"303 438 QCURVE SMOOTH",
"307 453 OFFCURVE",
"307 468 QCURVE SMOOTH",
"307 506 OFFCURVE",
"258 558 OFFCURVE",
"215 564 QCURVE",
"174 352 OFFCURVE",
"152 232 QCURVE SMOOTH",
"147 207 OFFCURVE",
"147 170 QCURVE SMOOTH",
"148 139 OFFCURVE",
"173 112 OFFCURVE",
"210 103 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
53 14 2 0 2 1 76 0 2 1 0 1 2 114 0 0 0 132 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 39 34 47 57 4 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 759;
}
);
leftKerningGroup = D;
note = D.alt1;
rightKerningGroup = D;
unicode = F02E;
},
{
glyphname = F.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"120 429 OFFCURVE",
"120 408 QCURVE SMOOTH",
"120 394 OFFCURVE",
"130 380 QCURVE",
"132 376 OFFCURVE",
"140 370 QCURVE",
"158 353 OFFCURVE",
"158 330 QCURVE SMOOTH",
"158 319 OFFCURVE",
"153 302 QCURVE SMOOTH",
"85 82 OFFCURVE",
"52 -29 QCURVE",
"50 -39 OFFCURVE",
"50 -46 QCURVE SMOOTH",
"50 -62 OFFCURVE",
"55 -69 QCURVE",
"63 -84 OFFCURVE",
"83 -84 QCURVE SMOOTH",
"93 -84 OFFCURVE",
"99 -82 QCURVE",
"150 -67 OFFCURVE",
"172 -9 QCURVE SMOOTH",
"179 8 OFFCURVE",
"191 51 OFFCURVE",
"194 60 QCURVE",
"202 90 OFFCURVE",
"207 104 QCURVE",
"222 152 LINE SMOOTH",
"260 281 OFFCURVE",
"269 312 QCURVE",
"273 328 OFFCURVE",
"292 346 OFFCURVE",
"309 349 QCURVE SMOOTH",
"373 362 LINE SMOOTH",
"433 375 OFFCURVE",
"468 381 QCURVE SMOOTH",
"487 384 OFFCURVE",
"537 387 OFFCURVE",
"547 388 QCURVE",
"593 390 OFFCURVE",
"616 393 QCURVE SMOOTH",
"624 394 OFFCURVE",
"640 406 OFFCURVE",
"644 413 QCURVE",
"646 417 OFFCURVE",
"635 435 OFFCURVE",
"629 439 QCURVE",
"625 441 OFFCURVE",
"601 456 OFFCURVE",
"573 469 OFFCURVE",
"558 470 QCURVE SMOOTH",
"530 472 OFFCURVE",
"475 472 QCURVE SMOOTH",
"407 472 OFFCURVE",
"373 471 QCURVE SMOOTH",
"333 470 LINE",
"313 468 OFFCURVE",
"299 468 QCURVE",
"331 610 LINE",
"366 616 LINE SMOOTH",
"448 631 OFFCURVE",
"550 646 OFFCURVE",
"602 646 QCURVE SMOOTH",
"641 646 OFFCURVE",
"672 642 QCURVE",
"677 659 OFFCURVE",
"677 668 QCURVE SMOOTH",
"677 693 OFFCURVE",
"655 703 QCURVE",
"631 715 OFFCURVE",
"602 727 OFFCURVE",
"586 728 QCURVE SMOOTH",
"548 731 OFFCURVE",
"512 731 QCURVE SMOOTH",
"447 731 OFFCURVE",
"313 716 OFFCURVE",
"228 703 QCURVE",
"218 701 OFFCURVE",
"214 699 QCURVE",
"194 691 OFFCURVE",
"194 676 QCURVE SMOOTH",
"194 670 OFFCURVE",
"199 660 QCURVE SMOOTH",
"201 656 OFFCURVE",
"211 641 OFFCURVE",
"211 636 QCURVE SMOOTH",
"211 635 LINE",
"196 537 LINE SMOOTH",
"186 477 OFFCURVE",
"182 447 QCURVE",
"177 446 OFFCURVE",
"154 442 OFFCURVE",
"147 439 QCURVE"
);
},
{
closed = 1;
nodes = (
"386 385 OFFCURVE",
"384 380 OFFCURVE",
"383 379 QCURVE",
"361 383 LINE",
"363 393 LINE",
"379 389 OFFCURVE",
"387 388 QCURVE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
9 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
27 5 2 3 2 94 1 6 3 95 78 2 8 7 3 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
27 5 2 4 2 94 1 6 3 95 78 2 8 7 3 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
27 5 2 3 2 94 1 6 3 95 78 2 8 6 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
27 5 2 3 2 94 1 6 3 95 78 2 8 7 3 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
9 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
0 0 1 0 133 0 8 7 8 134 0 1 0 2 3 1 2 105 5 4 2 3 0 6 7 3 6 105 5 4 2 3 3 7 97 0 7 3 7 81 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 43 values pushed */
0 0 1 0 133 0 8 7 8 134 0 1 0 2 4 1 2 105 0 4 3 7 4 87 5 1 3 0 6 7 3 6 105 0 4 4 7 97 0 7 4 7 81 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
0 8 6 8 134 1 1 0 0 2 3 0 2 105 5 4 2 3 6 6 3 89 5 4 2 3 3 6 97 7 1 6 3 6 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 40 values pushed */
0 0 1 0 133 0 8 7 8 134 0 1 0 2 3 1 2 105 5 4 2 3 0 6 7 3 6 105 5 4 2 3 3 7 97 0 7 3 7 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 21 values pushed */
75 74 55 54 53 52 42 41 40 36 35 34 30 28 21 20 19 17 9 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 727;
}
);
note = F.alt1;
unicode = F02F;
},
{
glyphname = G.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"478 169 LINE",
"430 134 OFFCURVE",
"378 99 OFFCURVE",
"308 72 OFFCURVE",
"270 72 QCURVE",
"254 73 LINE SMOOTH",
"209 77 OFFCURVE",
"152 146 OFFCURVE",
"152 191 QCURVE SMOOTH",
"152 201 OFFCURVE",
"153 206 QCURVE",
"175 397 OFFCURVE",
"367 508 QCURVE SMOOTH",
"434 547 OFFCURVE",
"485 547 QCURVE SMOOTH",
"515 547 OFFCURVE",
"545 534 QCURVE",
"549 533 OFFCURVE",
"564 536 OFFCURVE",
"568 536 QCURVE",
"575 550 OFFCURVE",
"575 561 QCURVE SMOOTH",
"575 578 OFFCURVE",
"558 595 QCURVE SMOOTH",
"511 642 OFFCURVE",
"442 642 QCURVE SMOOTH",
"420 642 OFFCURVE",
"393 637 QCURVE SMOOTH",
"298 616 OFFCURVE",
"140 489 OFFCURVE",
"50 311 OFFCURVE",
"50 219 QCURVE SMOOTH",
"50 171 OFFCURVE",
"82 93 OFFCURVE",
"119 62 QCURVE SMOOTH",
"213 -18 OFFCURVE",
"316 -18 QCURVE SMOOTH",
"337 -18 OFFCURVE",
"359 -15 QCURVE SMOOTH",
"378 -12 OFFCURVE",
"411 -1 OFFCURVE",
"437 11 QCURVE SMOOTH",
"456 19 LINE SMOOTH",
"515 45 OFFCURVE",
"603 114 OFFCURVE",
"633 163 QCURVE",
"638 172 OFFCURVE",
"659 193 OFFCURVE",
"665 200 QCURVE",
"668 224 OFFCURVE",
"647 258 OFFCURVE",
"624 281 QCURVE SMOOTH",
"610 295 OFFCURVE",
"604 303 QCURVE",
"235 259 LINE",
"222 245 OFFCURVE",
"222 229 QCURVE SMOOTH",
"222 213 OFFCURVE",
"236 196 QCURVE SMOOTH",
"266 159 OFFCURVE",
"302 159 QCURVE",
"312 160 LINE SMOOTH",
"337 163 OFFCURVE",
"392 173 QCURVE",
"410 177 OFFCURVE",
"448 183 QCURVE SMOOTH",
"454 184 OFFCURVE",
"470 182 OFFCURVE",
"475 182 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
57 14 2 0 3 1 76 0 0 3 4 3 0 4 128 0 2 0 3 0 2 3 105 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 64 62 54 52 43 41 32 30 23 5 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 715;
}
);
note = G.alt1;
unicode = F030;
},
{
glyphname = H.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"50 118 OFFCURVE",
"50 104 QCURVE SMOOTH",
"50 76 OFFCURVE",
"82 49 OFFCURVE",
"125 37 QCURVE",
"138 47 OFFCURVE",
"156 77 OFFCURVE",
"170 117 OFFCURVE",
"173 126 QCURVE SMOOTH",
"213 238 OFFCURVE",
"232 294 QCURVE SMOOTH",
"243 325 OFFCURVE",
"274 329 QCURVE",
"297 330 OFFCURVE",
"323 337 QCURVE",
"344 341 OFFCURVE",
"352 342 QCURVE SMOOTH",
"411 348 LINE",
"443 350 OFFCURVE",
"460 352 QCURVE",
"456 336 OFFCURVE",
"455 328 QCURVE",
"447 294 OFFCURVE",
"442 283 QCURVE",
"430 252 OFFCURVE",
"408 203 OFFCURVE",
"400 185 QCURVE SMOOTH",
"357 82 OFFCURVE",
"344 50 QCURVE SMOOTH",
"337 31 OFFCURVE",
"331 -9 OFFCURVE",
"329 -40 QCURVE SMOOTH",
"328 -57 OFFCURVE",
"351 -74 OFFCURVE",
"372 -81 QCURVE",
"380 -83 OFFCURVE",
"384 -83 QCURVE SMOOTH",
"403 -83 OFFCURVE",
"417 -60 QCURVE SMOOTH",
"440 -24 LINE SMOOTH",
"479 33 OFFCURVE",
"496 70 QCURVE SMOOTH",
"593 275 OFFCURVE",
"662 514 QCURVE SMOOTH",
"667 532 OFFCURVE",
"667 546 QCURVE SMOOTH",
"667 587 OFFCURVE",
"610 645 OFFCURVE",
"563 646 QCURVE",
"552 613 OFFCURVE",
"550 606 QCURVE SMOOTH",
"517 487 LINE SMOOTH",
"508 457 OFFCURVE",
"478 456 QCURVE SMOOTH",
"455 456 OFFCURVE",
"409 454 QCURVE SMOOTH",
"340 451 LINE",
"327 451 OFFCURVE",
"310 454 QCURVE",
"288 457 LINE",
"298 497 LINE SMOOTH",
"310 549 OFFCURVE",
"322 580 QCURVE SMOOTH",
"328 597 OFFCURVE",
"328 612 QCURVE SMOOTH",
"328 647 OFFCURVE",
"274 700 OFFCURVE",
"228 703 QCURVE SMOOTH",
"216 704 OFFCURVE",
"206 691 OFFCURVE",
"203 679 QCURVE SMOOTH",
"158 487 LINE SMOOTH",
"145 432 OFFCURVE",
"99 408 QCURVE SMOOTH",
"83 399 OFFCURVE",
"68 387 OFFCURVE",
"68 380 QCURVE SMOOTH",
"68 374 OFFCURVE",
"80 356 OFFCURVE",
"89 346 QCURVE",
"98 337 OFFCURVE",
"101 333 QCURVE",
"80 247 LINE SMOOTH",
"71 213 OFFCURVE",
"55 145 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 71 values pushed */
24 1 1 2 64 1 4 1 2 1 5 4 79 1 3 5 4 76 0 0 2 0 133 0 2 1 2 133 0 5 4 3 4 5 3 128 0 3 3 132 0 1 4 4 1 87 0 1 1 4 97 0 4 1 4 81 71 70 66 65 47 46 36 35 31 26 17 16 6 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 717;
}
);
note = H.alt1;
unicode = F031;
},
{
glyphname = I.alt1;
lastChange = "2019-10-02 10:50:30 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"209 407 OFFCURVE",
"183 309 QCURVE SMOOTH",
"138 140 LINE SMOOTH",
"129 108 OFFCURVE",
"109 88 OFFCURVE",
"81 88 QCURVE SMOOTH",
"59 88 OFFCURVE",
"38 83 OFFCURVE",
"29 72 QCURVE",
"36 38 OFFCURVE",
"87 -9 OFFCURVE",
"119 -9 QCURVE SMOOTH",
"129 -9 OFFCURVE",
"139 -6 QCURVE",
"215 13 OFFCURVE",
"354 60 QCURVE",
"367 65 OFFCURVE",
"383 70 QCURVE",
"389 71 OFFCURVE",
"399 88 OFFCURVE",
"399 95 QCURVE SMOOTH",
"399 96 LINE",
"398 104 OFFCURVE",
"387 121 OFFCURVE",
"379 125 QCURVE",
"371 130 OFFCURVE",
"356 130 QCURVE",
"341 129 LINE",
"323 130 OFFCURVE",
"285 127 QCURVE SMOOTH",
"255 125 OFFCURVE",
"238 125 QCURVE",
"246 161 LINE SMOOTH",
"262 236 OFFCURVE",
"268 257 QCURVE SMOOTH",
"319 419 LINE SMOOTH",
"354 527 OFFCURVE",
"369 581 QCURVE SMOOTH",
"375 603 OFFCURVE",
"375 618 QCURVE SMOOTH",
"375 631 OFFCURVE",
"370 636 QCURVE SMOOTH",
"326 680 OFFCURVE",
"294 683 QCURVE",
"289 684 OFFCURVE",
"279 684 QCURVE SMOOTH",
"251 683 OFFCURVE",
"195 670 QCURVE SMOOTH",
"173 665 LINE SMOOTH",
"165 663 OFFCURVE",
"148 648 OFFCURVE",
"148 642 QCURVE",
"147 635 OFFCURVE",
"159 615 OFFCURVE",
"166 611 QCURVE",
"191 601 OFFCURVE",
"225 592 QCURVE SMOOTH",
"249 586 LINE",
"245 565 LINE SMOOTH",
"233 501 OFFCURVE",
"227 478 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 47 values pushed */
2 1 1 0 38 1 3 1 51 1 2 3 3 76 0 0 1 0 133 0 1 3 1 133 0 3 2 2 3 89 0 3 3 2 97 0 2 3 2 81 36 45 109 45 4 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 440;
}
);
leftKerningGroup = I;
note = I.alt1;
rightKerningGroup = I;
unicode = F032;
},
{
glyphname = J.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"663 593 OFFCURVE",
"663 593 QCURVE",
"660 596 OFFCURVE",
"648 597 OFFCURVE",
"645 598 QCURVE",
"611 607 OFFCURVE",
"591 616 QCURVE SMOOTH",
"574 623 OFFCURVE",
"539 633 QCURVE SMOOTH",
"491 647 OFFCURVE",
"446 647 QCURVE SMOOTH",
"404 647 OFFCURVE",
"329 633 QCURVE",
"313 631 OFFCURVE",
"257 622 OFFCURVE",
"235 619 QCURVE SMOOTH",
"228 618 OFFCURVE",
"214 607 OFFCURVE",
"202 588 OFFCURVE",
"200 585 QCURVE",
"191 573 OFFCURVE",
"191 561 QCURVE SMOOTH",
"191 552 OFFCURVE",
"202 535 OFFCURVE",
"212 531 QCURVE",
"232 522 OFFCURVE",
"272 512 OFFCURVE",
"281 515 QCURVE",
"321 517 OFFCURVE",
"394 523 OFFCURVE",
"401 527 QCURVE",
"439 529 LINE",
"441 521 OFFCURVE",
"443 501 QCURVE SMOOTH",
"448 458 OFFCURVE",
"448 422 QCURVE SMOOTH",
"448 395 OFFCURVE",
"446 355 OFFCURVE",
"445 341 QCURVE SMOOTH",
"443 314 LINE SMOOTH",
"433 172 OFFCURVE",
"336 66 QCURVE",
"325 55 OFFCURVE",
"289 41 OFFCURVE",
"270 39 QCURVE",
"200 36 OFFCURVE",
"149 103 QCURVE SMOOTH",
"131 126 OFFCURVE",
"97 172 QCURVE",
"72 159 OFFCURVE",
"50 136 OFFCURVE",
"50 123 QCURVE SMOOTH",
"50 106 OFFCURVE",
"66 83 QCURVE SMOOTH",
"86 52 OFFCURVE",
"118 26 QCURVE SMOOTH",
"143 5 OFFCURVE",
"198 -18 OFFCURVE",
"244 -32 QCURVE SMOOTH",
"251 -34 OFFCURVE",
"264 -38 OFFCURVE",
"270 -40 QCURVE SMOOTH",
"297 -48 OFFCURVE",
"320 -48 QCURVE SMOOTH",
"355 -48 OFFCURVE",
"385 -31 QCURVE SMOOTH",
"431 -6 OFFCURVE",
"459 24 QCURVE SMOOTH",
"513 79 OFFCURVE",
"561 220 OFFCURVE",
"573 318 QCURVE SMOOTH",
"578 370 OFFCURVE",
"578 410 QCURVE SMOOTH",
"578 463 OFFCURVE",
"571 538 QCURVE",
"657 544 LINE",
"658 544 OFFCURVE",
"664 546 QCURVE",
"670 549 OFFCURVE",
"677 561 OFFCURVE",
"677 568 QCURVE SMOOTH",
"677 579 OFFCURVE",
"670 586 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 67 values pushed */
1 1 0 5 42 33 2 2 4 2 76 0 0 5 3 5 0 3 128 0 4 3 2 3 4 2 128 0 2 1 3 2 1 126 0 1 1 132 0 5 0 3 5 89 0 5 5 3 95 0 3 5 3 79 72 70 54 53 51 50 37 36 42 22 6 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 727;
}
);
note = J.alt1;
unicode = F033;
},
{
glyphname = K.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"634 55 OFFCURVE",
"597 62 QCURVE SMOOTH",
"418 90 OFFCURVE",
"345 242 QCURVE SMOOTH",
"333 266 OFFCURVE",
"333 276 QCURVE SMOOTH",
"333 283 OFFCURVE",
"345 296 OFFCURVE",
"360 306 QCURVE SMOOTH",
"454 370 OFFCURVE",
"592 457 QCURVE SMOOTH",
"639 486 OFFCURVE",
"700 518 OFFCURVE",
"736 525 QCURVE",
"744 527 OFFCURVE",
"761 542 QCURVE",
"774 555 OFFCURVE",
"778 558 QCURVE",
"760 573 OFFCURVE",
"761 572 QCURVE",
"741 588 OFFCURVE",
"734 592 QCURVE SMOOTH",
"700 611 OFFCURVE",
"666 611 QCURVE SMOOTH",
"622 611 OFFCURVE",
"575 580 QCURVE SMOOTH",
"536 555 OFFCURVE",
"432 484 QCURVE SMOOTH",
"379 448 LINE",
"281 385 LINE",
"284 412 OFFCURVE",
"302 454 QCURVE SMOOTH",
"376 617 OFFCURVE",
"435 743 QCURVE SMOOTH",
"440 753 OFFCURVE",
"440 763 QCURVE SMOOTH",
"440 778 OFFCURVE",
"424 790 QCURVE SMOOTH",
"391 815 OFFCURVE",
"353 815 QCURVE SMOOTH",
"346 815 OFFCURVE",
"332 813 QCURVE",
"202 498 LINE SMOOTH",
"197 486 OFFCURVE",
"180 440 QCURVE",
"171 412 OFFCURVE",
"149 355 OFFCURVE",
"137 333 QCURVE SMOOTH",
"98 258 OFFCURVE",
"59 129 QCURVE SMOOTH",
"50 99 OFFCURVE",
"50 83 QCURVE SMOOTH",
"50 64 OFFCURVE",
"79 50 OFFCURVE",
"117 48 QCURVE",
"119 48 OFFCURVE",
"129 54 QCURVE",
"142 82 OFFCURVE",
"160 126 OFFCURVE",
"167 142 QCURVE SMOOTH",
"172 154 OFFCURVE",
"193 204 QCURVE SMOOTH",
"198 216 OFFCURVE",
"218 230 OFFCURVE",
"230 230 QCURVE SMOOTH",
"252 230 OFFCURVE",
"264 208 QCURVE SMOOTH",
"277 185 OFFCURVE",
"309 157 QCURVE",
"324 142 LINE SMOOTH",
"376 89 OFFCURVE",
"507 27 OFFCURVE",
"592 6 QCURVE SMOOTH",
"616 0 OFFCURVE",
"641 0 QCURVE SMOOTH",
"680 0 OFFCURVE",
"716 14 QCURVE",
"712 35 OFFCURVE",
"692 52 OFFCURVE",
"674 53 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 66 values pushed */
61 49 2 1 4 2 1 0 2 2 76 0 3 4 3 133 0 4 1 4 133 0 1 5 1 133 0 2 5 0 5 2 0 128 6 1 5 2 0 5 89 6 1 5 5 0 97 0 0 5 0 81 0 0 0 79 0 78 46 45 40 40 35 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 828;
}
);
note = K.alt1;
unicode = F034;
},
{
glyphname = K.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"516 508 OFFCURVE",
"573 554 QCURVE SMOOTH",
"618 590 OFFCURVE",
"647 622 QCURVE",
"659 634 OFFCURVE",
"659 645 QCURVE SMOOTH",
"659 659 OFFCURVE",
"634 667 QCURVE",
"623 670 OFFCURVE",
"614 670 QCURVE SMOOTH",
"587 670 OFFCURVE",
"554 646 QCURVE SMOOTH",
"274 448 LINE SMOOTH",
"268 444 OFFCURVE",
"255 436 OFFCURVE",
"248 432 QCURVE",
"248 439 OFFCURVE",
"249 456 OFFCURVE",
"250 460 QCURVE",
"277 533 LINE SMOOTH",
"279 539 OFFCURVE",
"283 548 OFFCURVE",
"284 552 QCURVE",
"294 580 OFFCURVE",
"304 615 OFFCURVE",
"304 635 QCURVE SMOOTH",
"304 654 OFFCURVE",
"291 664 QCURVE",
"274 679 OFFCURVE",
"233 694 OFFCURVE",
"198 702 QCURVE",
"194 678 OFFCURVE",
"194 676 QCURVE",
"192 660 OFFCURVE",
"192 652 QCURVE",
"191 646 OFFCURVE",
"188 614 OFFCURVE",
"185 603 QCURVE",
"176 561 OFFCURVE",
"138 418 QCURVE SMOOTH",
"126 373 LINE",
"108 307 LINE",
"81 204 LINE",
"66 132 LINE SMOOTH",
"53 67 OFFCURVE",
"51 59 QCURVE",
"50 56 OFFCURVE",
"50 50 QCURVE SMOOTH",
"50 35 OFFCURVE",
"63 25 QCURVE",
"89 7 LINE SMOOTH",
"99 0 OFFCURVE",
"108 0 QCURVE SMOOTH",
"123 0 OFFCURVE",
"124 25 QCURVE",
"130 88 OFFCURVE",
"155 145 QCURVE SMOOTH",
"163 165 OFFCURVE",
"167 185 QCURVE",
"173 205 LINE",
"204 298 LINE",
"231 293 OFFCURVE",
"238 293 QCURVE SMOOTH",
"249 293 OFFCURVE",
"265 303 OFFCURVE",
"285 319 QCURVE SMOOTH",
"315 343 OFFCURVE",
"347 343 QCURVE SMOOTH",
"369 343 OFFCURVE",
"405 322 OFFCURVE",
"417 301 QCURVE SMOOTH",
"484 186 OFFCURVE",
"589 107 QCURVE",
"609 94 OFFCURVE",
"623 94 QCURVE SMOOTH",
"634 94 OFFCURVE",
"643 98 QCURVE",
"643 108 OFFCURVE",
"635 125 OFFCURVE",
"618 142 OFFCURVE",
"616 144 QCURVE SMOOTH",
"582 179 OFFCURVE",
"523 258 OFFCURVE",
"485 317 QCURVE SMOOTH",
"472 337 OFFCURVE",
"461 347 QCURVE",
"444 361 OFFCURVE",
"414 385 OFFCURVE",
"401 396 QCURVE",
"387 406 OFFCURVE",
"380 412 QCURVE",
"384 413 OFFCURVE",
"397 417 OFFCURVE",
"400 420 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
16 1 0 2 45 38 2 3 0 2 76 62 1 4 74 0 4 1 4 133 0 1 2 1 133 0 2 0 2 133 0 0 3 0 133 0 3 3 118 84 82 41 39 30 29 26 24 19 17 5 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 709;
}
);
note = K.alt2;
unicode = F035;
},
{
glyphname = L.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"73 197 OFFCURVE",
"54 116 QCURVE SMOOTH",
"50 101 OFFCURVE",
"50 83 QCURVE SMOOTH",
"50 30 OFFCURVE",
"95 -8 QCURVE SMOOTH",
"153 -54 OFFCURVE",
"209 -62 QCURVE SMOOTH",
"250 -68 OFFCURVE",
"292 -68 QCURVE SMOOTH",
"311 -68 OFFCURVE",
"321 -67 QCURVE",
"385 -64 OFFCURVE",
"456 -57 OFFCURVE",
"492 -47 QCURVE SMOOTH",
"538 -35 OFFCURVE",
"599 -7 OFFCURVE",
"622 20 QCURVE",
"611 53 LINE",
"610 55 OFFCURVE",
"608 55 OFFCURVE",
"607 56 QCURVE",
"457 10 OFFCURVE",
"301 8 QCURVE SMOOTH",
"254 8 OFFCURVE",
"222 13 QCURVE",
"202 17 OFFCURVE",
"185 31 OFFCURVE",
"185 46 QCURVE SMOOTH",
"185 50 OFFCURVE",
"187 64 QCURVE",
"189 73 OFFCURVE",
"206 171 OFFCURVE",
"220 213 QCURVE SMOOTH",
"244 280 OFFCURVE",
"296 414 QCURVE SMOOTH",
"341 531 LINE SMOOTH",
"381 639 OFFCURVE",
"398 694 QCURVE SMOOTH",
"402 706 OFFCURVE",
"402 719 QCURVE SMOOTH",
"402 747 OFFCURVE",
"377 758 QCURVE",
"369 761 OFFCURVE",
"344 772 OFFCURVE",
"319 780 OFFCURVE",
"306 780 QCURVE SMOOTH",
"299 780 OFFCURVE",
"283 776 QCURVE",
"256 735 LINE SMOOTH",
"235 705 OFFCURVE",
"213 668 QCURVE SMOOTH",
"198 643 OFFCURVE",
"174 589 QCURVE SMOOTH",
"171 582 OFFCURVE",
"171 575 QCURVE SMOOTH",
"171 555 OFFCURVE",
"201 552 QCURVE",
"177 486 LINE SMOOTH",
"135 376 OFFCURVE",
"95 259 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
42 38 4 2 4 1 0 1 76 0 0 1 0 133 0 1 2 2 1 89 0 1 1 2 97 3 1 2 1 2 81 51 49 48 47 37 35 44 4 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 672;
}
);
note = L.alt1;
unicode = F036;
},
{
glyphname = L.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"255 232 LINE SMOOTH",
"284 314 OFFCURVE",
"312 405 QCURVE SMOOTH",
"342 503 OFFCURVE",
"376 632 QCURVE SMOOTH",
"379 643 OFFCURVE",
"379 655 QCURVE SMOOTH",
"379 674 OFFCURVE",
"364 708 OFFCURVE",
"352 716 QCURVE SMOOTH",
"332 729 OFFCURVE",
"301 729 QCURVE SMOOTH",
"262 729 OFFCURVE",
"233 709 QCURVE",
"232 702 OFFCURVE",
"232 687 QCURVE SMOOTH",
"232 666 OFFCURVE",
"228 650 QCURVE SMOOTH",
"172 424 OFFCURVE",
"140 312 QCURVE SMOOTH",
"130 279 OFFCURVE",
"100 197 OFFCURVE",
"94 181 QCURVE SMOOTH",
"67 108 LINE SMOOTH",
"58 82 OFFCURVE",
"51 46 QCURVE",
"50 42 OFFCURVE",
"50 34 QCURVE SMOOTH",
"50 1 OFFCURVE",
"81 -16 QCURVE",
"91 -22 OFFCURVE",
"140 -46 QCURVE SMOOTH",
"165 -58 LINE",
"201 -29 OFFCURVE",
"210 -24 QCURVE SMOOTH",
"280 18 OFFCURVE",
"380 18 QCURVE SMOOTH",
"412 18 OFFCURVE",
"474 14 QCURVE SMOOTH",
"538 10 OFFCURVE",
"568 10 QCURVE SMOOTH",
"588 10 OFFCURVE",
"619 17 OFFCURVE",
"633 27 QCURVE",
"624 42 OFFCURVE",
"620 45 QCURVE",
"611 54 OFFCURVE",
"604 55 QCURVE",
"423 109 OFFCURVE",
"221 106 QCURVE",
"221 113 OFFCURVE",
"220 124 OFFCURVE",
"221 128 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
52 1 0 2 24 8 2 1 0 2 76 19 1 1 73 0 2 0 2 133 0 0 1 1 0 89 0 0 0 1 95 0 1 0 1 79 41 39 103 33 3 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 683;
}
);
note = L.alt2;
unicode = F037;
},
{
glyphname = S.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"338 119 LINE SMOOTH",
"295 86 OFFCURVE",
"237 45 OFFCURVE",
"206 28 QCURVE SMOOTH",
"185 17 OFFCURVE",
"165 -9 OFFCURVE",
"163 -30 QCURVE",
"160 -51 OFFCURVE",
"192 -87 OFFCURVE",
"213 -87 QCURVE SMOOTH",
"222 -87 OFFCURVE",
"229 -83 QCURVE SMOOTH",
"296 -47 OFFCURVE",
"382 11 OFFCURVE",
"414 53 QCURVE SMOOTH",
"450 98 OFFCURVE",
"450 156 QCURVE SMOOTH",
"450 197 OFFCURVE",
"411 271 OFFCURVE",
"376 295 QCURVE",
"376 295 OFFCURVE",
"337 319 QCURVE",
"323 326 OFFCURVE",
"308 336 QCURVE",
"304 339 OFFCURVE",
"280 352 QCURVE",
"271 358 OFFCURVE",
"188 407 OFFCURVE",
"154 432 QCURVE SMOOTH",
"124 453 OFFCURVE",
"124 471 QCURVE SMOOTH",
"124 485 OFFCURVE",
"146 513 QCURVE",
"154 525 OFFCURVE",
"164 533 QCURVE SMOOTH",
"203 566 OFFCURVE",
"273 606 OFFCURVE",
"314 611 QCURVE",
"326 613 OFFCURVE",
"349 625 OFFCURVE",
"354 634 QCURVE SMOOTH",
"365 654 OFFCURVE",
"365 675 QCURVE SMOOTH",
"365 694 OFFCURVE",
"356 711 QCURVE",
"347 730 OFFCURVE",
"321 730 QCURVE SMOOTH",
"313 730 OFFCURVE",
"299 728 OFFCURVE",
"292 728 QCURVE SMOOTH",
"285 728 OFFCURVE",
"279 725 QCURVE",
"210 704 OFFCURVE",
"110 632 OFFCURVE",
"79 574 QCURVE SMOOTH",
"50 518 OFFCURVE",
"50 470 QCURVE SMOOTH",
"50 407 OFFCURVE",
"100 358 QCURVE SMOOTH",
"137 320 OFFCURVE",
"178 294 QCURVE",
"197 283 OFFCURVE",
"237 263 QCURVE SMOOTH",
"243 260 OFFCURVE",
"281 242 OFFCURVE",
"295 232 QCURVE SMOOTH",
"309 222 OFFCURVE",
"323 217 QCURVE",
"347 205 OFFCURVE",
"374 184 OFFCURVE",
"383 165 QCURVE",
"381 161 OFFCURVE",
"374 146 OFFCURVE",
"369 143 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
1 1 0 2 0 133 0 2 2 118 64 62 27 25 24 22 3 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 500;
}
);
note = S.alt1;
unicode = F038;
},
{
glyphname = S.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"51 -88 OFFCURVE",
"100 -143 OFFCURVE",
"127 -146 QCURVE SMOOTH",
"154 -149 OFFCURVE",
"181 -149 QCURVE SMOOTH",
"223 -149 OFFCURVE",
"258 -141 QCURVE SMOOTH",
"349 -119 OFFCURVE",
"450 -5 OFFCURVE",
"450 77 QCURVE SMOOTH",
"450 112 OFFCURVE",
"439 154 QCURVE SMOOTH",
"434 173 LINE SMOOTH",
"393 317 OFFCURVE",
"393 430 QCURVE SMOOTH",
"393 446 OFFCURVE",
"395 480 QCURVE SMOOTH",
"401 572 OFFCURVE",
"464 690 OFFCURVE",
"545 713 QCURVE SMOOTH",
"557 716 OFFCURVE",
"569 729 OFFCURVE",
"569 737 QCURVE SMOOTH",
"569 751 OFFCURVE",
"552 765 QCURVE SMOOTH",
"518 792 OFFCURVE",
"478 792 QCURVE SMOOTH",
"433 792 OFFCURVE",
"398 760 QCURVE SMOOTH",
"353 721 OFFCURVE",
"299 624 OFFCURVE",
"295 568 QCURVE SMOOTH",
"292 522 OFFCURVE",
"292 474 QCURVE SMOOTH",
"292 377 OFFCURVE",
"309 302 QCURVE SMOOTH",
"319 254 LINE SMOOTH",
"335 184 OFFCURVE",
"342 148 QCURVE SMOOTH",
"347 125 OFFCURVE",
"347 107 QCURVE SMOOTH",
"347 61 OFFCURVE",
"319 32 QCURVE SMOOTH",
"270 -17 OFFCURVE",
"217 -44 QCURVE SMOOTH",
"169 -67 OFFCURVE",
"133 -67 QCURVE SMOOTH",
"95 -67 OFFCURVE",
"64 -44 QCURVE",
"64 -43 OFFCURVE",
"57 -46 QCURVE",
"50 -57 OFFCURVE",
"50 -60 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
52 29 20 3 0 1 1 76 0 1 0 1 133 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 48 46 26 24 36 3 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 618;
}
);
note = S.alt2;
unicode = F039;
},
{
glyphname = R.alt1;
lastChange = "2019-06-23 23:29:04 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"364 172 LINE",
"391 152 OFFCURVE",
"408 132 QCURVE SMOOTH",
"445 88 OFFCURVE",
"476 58 QCURVE SMOOTH",
"597 -60 OFFCURVE",
"751 -88 QCURVE",
"754 -89 OFFCURVE",
"763 -91 OFFCURVE",
"768 -91 QCURVE SMOOTH",
"784 -91 OFFCURVE",
"789 -76 QCURVE",
"792 -70 OFFCURVE",
"792 -65 QCURVE SMOOTH",
"792 -56 OFFCURVE",
"779 -45 OFFCURVE",
"767 -39 QCURVE SMOOTH",
"754 -33 OFFCURVE",
"703 -14 QCURVE SMOOTH",
"572 35 OFFCURVE",
"502 154 QCURVE SMOOTH",
"495 166 OFFCURVE",
"480 198 OFFCURVE",
"477 205 QCURVE",
"496 215 OFFCURVE",
"508 222 QCURVE SMOOTH",
"553 249 LINE SMOOTH",
"568 258 OFFCURVE",
"613 284 OFFCURVE",
"643 303 QCURVE SMOOTH",
"711 346 OFFCURVE",
"746 386 QCURVE SMOOTH",
"768 411 OFFCURVE",
"766 432 QCURVE SMOOTH",
"765 445 OFFCURVE",
"757 458 QCURVE",
"733 490 OFFCURVE",
"700 526 OFFCURVE",
"680 537 QCURVE SMOOTH",
"600 581 OFFCURVE",
"418 632 OFFCURVE",
"309 648 QCURVE SMOOTH",
"281 652 OFFCURVE",
"238 630 QCURVE SMOOTH",
"215 618 OFFCURVE",
"215 594 QCURVE SMOOTH",
"215 573 OFFCURVE",
"232 547 QCURVE",
"256 538 OFFCURVE",
"278 538 QCURVE SMOOTH",
"309 539 OFFCURVE",
"358 557 QCURVE SMOOTH",
"369 561 OFFCURVE",
"386 561 QCURVE SMOOTH",
"396 561 OFFCURVE",
"412 559 QCURVE",
"477 546 OFFCURVE",
"536 529 QCURVE SMOOTH",
"585 515 OFFCURVE",
"615 502 QCURVE SMOOTH",
"652 486 OFFCURVE",
"650 461 QCURVE SMOOTH",
"649 447 OFFCURVE",
"634 423 QCURVE",
"614 396 OFFCURVE",
"593 381 QCURVE",
"522 334 OFFCURVE",
"452 291 QCURVE",
"441 285 OFFCURVE",
"419 275 QCURVE SMOOTH",
"394 263 LINE",
"314 225 LINE",
"319 219 OFFCURVE",
"334 198 OFFCURVE",
"339 194 QCURVE"
);
},
{
closed = 1;
nodes = (
"135 338 OFFCURVE",
"122 301 OFFCURVE",
"118 288 QCURVE SMOOTH",
"95 212 OFFCURVE",
"85 180 QCURVE SMOOTH",
"67 121 OFFCURVE",
"62 45 QCURVE",
"61 26 OFFCURVE",
"76 6 OFFCURVE",
"91 6 QCURVE SMOOTH",
"100 6 OFFCURVE",
"110 9 QCURVE",
"133 15 OFFCURVE",
"160 40 OFFCURVE",
"166 63 QCURVE SMOOTH",
"179 112 OFFCURVE",
"216 224 OFFCURVE",
"221 241 QCURVE",
"232 274 LINE",
"245 310 LINE",
"260 346 OFFCURVE",
"264 361 QCURVE",
"267 370 OFFCURVE",
"267 378 QCURVE SMOOTH",
"267 391 OFFCURVE",
"253 413 OFFCURVE",
"241 419 QCURVE SMOOTH",
"211 434 OFFCURVE",
"191 434 QCURVE SMOOTH",
"170 434 OFFCURVE",
"150 417 QCURVE",
"148 403 OFFCURVE",
"148 397 QCURVE",
"143 366 OFFCURVE",
"142 363 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
102 85 50 2 4 4 3 60 1 2 4 2 76 0 0 1 0 133 0 1 3 1 133 0 3 4 3 133 0 4 2 4 133 0 2 2 118 100 98 81 79 64 63 25 23 21 19 5 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 830;
}
);
note = R.alt1;
unicode = F03A;
},
{
glyphname = Q.alt1;
lastChange = "2019-10-02 11:16:13 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"531 -123 OFFCURVE",
"501 -58 QCURVE",
"495 -43 OFFCURVE",
"481 -13 QCURVE SMOOTH",
"462 31 OFFCURVE",
"462 52 QCURVE SMOOTH",
"462 70 OFFCURVE",
"483 101 OFFCURVE",
"507 122 QCURVE SMOOTH",
"563 171 OFFCURVE",
"610 259 QCURVE",
"627 288 OFFCURVE",
"630 329 QCURVE",
"631 338 OFFCURVE",
"631 357 QCURVE SMOOTH",
"631 447 OFFCURVE",
"528 584 OFFCURVE",
"444 628 QCURVE",
"437 631 OFFCURVE",
"420 633 QCURVE SMOOTH",
"400 635 OFFCURVE",
"392 635 QCURVE SMOOTH",
"335 635 OFFCURVE",
"234 588 OFFCURVE",
"172 543 QCURVE",
"167 540 OFFCURVE",
"165 536 QCURVE",
"162 510 OFFCURVE",
"139 468 OFFCURVE",
"118 440 QCURVE SMOOTH",
"107 426 OFFCURVE",
"93 404 QCURVE",
"50 330 OFFCURVE",
"50 226 QCURVE SMOOTH",
"50 209 OFFCURVE",
"52 175 QCURVE SMOOTH",
"56 126 OFFCURVE",
"106 39 OFFCURVE",
"193 -15 OFFCURVE",
"248 -15 QCURVE SMOOTH",
"279 -15 OFFCURVE",
"317 -4 QCURVE SMOOTH",
"334 1 OFFCURVE",
"339 3 QCURVE",
"369 12 LINE",
"372 5 OFFCURVE",
"381 -14 OFFCURVE",
"388 -26 QCURVE SMOOTH",
"405 -55 LINE SMOOTH",
"459 -149 OFFCURVE",
"498 -212 QCURVE SMOOTH",
"517 -244 OFFCURVE",
"544 -244 QCURVE SMOOTH",
"548 -244 OFFCURVE",
"558 -242 QCURVE",
"561 -230 OFFCURVE",
"561 -220 QCURVE SMOOTH",
"561 -208 OFFCURVE",
"555 -182 OFFCURVE",
"543 -153 OFFCURVE",
"541 -148 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"361 409 OFFCURVE",
"339 439 QCURVE",
"334 447 OFFCURVE",
"315 459 OFFCURVE",
"313 461 QCURVE",
"306 465 OFFCURVE",
"294 475 QCURVE",
"277 491 OFFCURVE",
"272 509 QCURVE SMOOTH",
"271 513 OFFCURVE",
"286 527 OFFCURVE",
"294 531 QCURVE",
"300 535 OFFCURVE",
"322 545 OFFCURVE",
"329 548 QCURVE",
"362 566 OFFCURVE",
"395 566 QCURVE SMOOTH",
"430 566 OFFCURVE",
"488 529 OFFCURVE",
"523 464 OFFCURVE",
"523 423 QCURVE SMOOTH",
"523 343 OFFCURVE",
"473 290 QCURVE SMOOTH",
"466 283 OFFCURVE",
"449 262 OFFCURVE",
"445 257 QCURVE SMOOTH",
"424 230 LINE",
"410 274 OFFCURVE",
"407 282 QCURVE SMOOTH",
"378 365 OFFCURVE",
"378 366 QCURVE"
);
},
{
closed = 1;
nodes = (
"308 240 OFFCURVE",
"322 166 QCURVE",
"324 158 OFFCURVE",
"318 137 OFFCURVE",
"313 132 QCURVE SMOOTH",
"264 86 OFFCURVE",
"191 86 QCURVE SMOOTH",
"159 86 OFFCURVE",
"150 115 QCURVE SMOOTH",
"138 151 OFFCURVE",
"136 172 QCURVE",
"134 206 OFFCURVE",
"134 222 QCURVE SMOOTH",
"134 285 OFFCURVE",
"148 338 QCURVE SMOOTH",
"163 404 OFFCURVE",
"229 446 QCURVE",
"248 419 OFFCURVE",
"270 362 OFFCURVE",
"282 321 QCURVE SMOOTH",
"285 311 OFFCURVE",
"292 289 OFFCURVE",
"296 277 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
103 97 64 24 4 4 3 15 1 1 4 2 76 0 0 1 0 134 0 2 0 3 4 2 3 105 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 108 106 75 73 38 37 43 38 5 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 681;
}
);
leftKerningGroup = O;
note = Q.alt1;
rightKerningGroup = O;
unicode = F03B;
},
{
glyphname = P.alt1;
lastChange = "2019-10-02 11:16:29 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"111 -68 OFFCURVE",
"109 -44 QCURVE",
"106 -26 OFFCURVE",
"106 -7 QCURVE SMOOTH",
"106 3 OFFCURVE",
"107 8 QCURVE",
"117 92 OFFCURVE",
"131 184 QCURVE",
"133 206 OFFCURVE",
"139 242 QCURVE SMOOTH",
"145 278 OFFCURVE",
"178 282 QCURVE SMOOTH",
"194 284 OFFCURVE",
"226 292 QCURVE SMOOTH",
"407 337 OFFCURVE",
"523 420 QCURVE SMOOTH",
"555 443 OFFCURVE",
"574 466 QCURVE SMOOTH",
"597 494 OFFCURVE",
"596 518 QCURVE SMOOTH",
"595 534 OFFCURVE",
"586 548 QCURVE SMOOTH",
"533 630 OFFCURVE",
"454 645 QCURVE SMOOTH",
"387 658 OFFCURVE",
"326 659 QCURVE SMOOTH",
"253 660 OFFCURVE",
"179 641 QCURVE",
"169 639 OFFCURVE",
"120 628 OFFCURVE",
"72 604 OFFCURVE",
"55 576 QCURVE",
"128 522 LINE",
"117 484 OFFCURVE",
"96 410 QCURVE SMOOTH",
"76 340 LINE SMOOTH",
"24 164 OFFCURVE",
"33 -7 QCURVE SMOOTH",
"35 -45 OFFCURVE",
"64 -98 OFFCURVE",
"101 -118 QCURVE",
"103 -110 OFFCURVE",
"111 -88 OFFCURVE",
"111 -81 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"182 376 OFFCURVE",
"182 381 QCURVE SMOOTH",
"182 400 OFFCURVE",
"195 430 QCURVE SMOOTH",
"203 450 OFFCURVE",
"205 460 QCURVE SMOOTH",
"206 466 OFFCURVE",
"217 486 OFFCURVE",
"218 492 QCURVE SMOOTH",
"224 526 OFFCURVE",
"265 553 OFFCURVE",
"301 556 QCURVE SMOOTH",
"322 558 LINE SMOOTH",
"332 559 OFFCURVE",
"361 561 OFFCURVE",
"381 561 QCURVE SMOOTH",
"426 561 OFFCURVE",
"467 547 QCURVE",
"483 539 LINE",
"467 517 OFFCURVE",
"342 437 OFFCURVE",
"210 369 OFFCURVE",
"184 366 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
11 1 1 0 1 76 66 64 47 43 37 10 2 7 1 73 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 52 49 18 16 2 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 564;
}
);
leftKerningGroup = P;
note = P.alt1;
rightKerningGroup = P;
unicode = F03C;
},
{
glyphname = O.alt1;
lastChange = "2019-04-07 07:33:04 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"727 364 LINE",
"706 413 LINE SMOOTH",
"692 448 OFFCURVE",
"669 496 OFFCURVE",
"654 518 QCURVE SMOOTH",
"618 570 OFFCURVE",
"533 636 OFFCURVE",
"478 642 QCURVE SMOOTH",
"448 646 OFFCURVE",
"386 648 QCURVE SMOOTH",
"323 650 OFFCURVE",
"280 656 QCURVE",
"260 658 OFFCURVE",
"252 658 QCURVE SMOOTH",
"201 658 OFFCURVE",
"126 605 OFFCURVE",
"97 556 QCURVE SMOOTH",
"50 477 OFFCURVE",
"50 374 QCURVE SMOOTH",
"50 329 OFFCURVE",
"59 282 QCURVE SMOOTH",
"69 231 OFFCURVE",
"111 136 OFFCURVE",
"142 104 QCURVE SMOOTH",
"189 54 OFFCURVE",
"302 3 OFFCURVE",
"365 3 QCURVE SMOOTH",
"426 3 OFFCURVE",
"489 27 QCURVE SMOOTH",
"552 51 OFFCURVE",
"657 161 OFFCURVE",
"716 297 OFFCURVE",
"713 358 QCURVE"
);
},
{
closed = 1;
nodes = (
"351 104 OFFCURVE",
"325 104 QCURVE SMOOTH",
"272 104 OFFCURVE",
"204 173 OFFCURVE",
"200 236 QCURVE",
"198 256 OFFCURVE",
"198 295 QCURVE SMOOTH",
"198 411 OFFCURVE",
"243 494 QCURVE SMOOTH",
"253 513 OFFCURVE",
"281 545 QCURVE SMOOTH",
"347 616 LINE",
"357 616 OFFCURVE",
"366 615 QCURVE",
"451 609 OFFCURVE",
"534 573 OFFCURVE",
"572 483 OFFCURVE",
"578 388 QCURVE SMOOTH",
"581 330 OFFCURVE",
"531 218 OFFCURVE",
"441 134 OFFCURVE",
"386 115 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
49 32 2 5 3 1 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 1 2 1 133 0 4 2 3 3 4 114 0 2 0 3 5 2 3 105 0 5 0 0 5 89 0 5 5 0 97 0 0 5 0 81 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
11 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 30 values pushed */
0 1 2 1 133 0 2 4 1 3 5 2 3 105 0 5 0 0 5 89 0 5 5 0 97 0 0 5 0 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 36 values pushed */
0 1 2 1 133 0 4 2 3 3 4 114 0 2 0 3 5 2 3 105 0 5 0 0 5 89 0 5 5 0 97 0 0 5 0 81 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
53 51 42 41 40 39 35 27 36 6 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 777;
}
);
note = O.alt1;
unicode = F03D;
},
{
glyphname = O.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"463 46 OFFCURVE",
"577 189 OFFCURVE",
"618 293 QCURVE SMOOTH",
"634 336 OFFCURVE",
"634 370 QCURVE SMOOTH",
"634 400 OFFCURVE",
"623 425 QCURVE SMOOTH",
"608 458 OFFCURVE",
"531 528 OFFCURVE",
"438 574 OFFCURVE",
"400 574 QCURVE SMOOTH",
"391 574 OFFCURVE",
"386 573 QCURVE",
"169 545 OFFCURVE",
"70 379 QCURVE SMOOTH",
"50 346 OFFCURVE",
"50 328 QCURVE SMOOTH",
"50 324 OFFCURVE",
"52 320 QCURVE",
"68 294 OFFCURVE",
"68 259 QCURVE SMOOTH",
"68 244 OFFCURVE",
"66 223 OFFCURVE",
"65 216 QCURVE SMOOTH",
"64 210 OFFCURVE",
"62 193 OFFCURVE",
"62 181 QCURVE",
"61 170 OFFCURVE",
"70 148 QCURVE SMOOTH",
"100 73 OFFCURVE",
"213 -5 OFFCURVE",
"298 -10 QCURVE",
"322 -4 LINE SMOOTH",
"330 -2 OFFCURVE",
"361 7 OFFCURVE",
"372 11 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"460 307 OFFCURVE",
"356 166 OFFCURVE",
"267 129 QCURVE SMOOTH",
"245 120 OFFCURVE",
"233 120 QCURVE SMOOTH",
"222 120 OFFCURVE",
"207 138 OFFCURVE",
"197 160 QCURVE",
"167 234 OFFCURVE",
"147 269 QCURVE",
"137 285 OFFCURVE",
"137 301 QCURVE SMOOTH",
"137 319 OFFCURVE",
"149 335 QCURVE SMOOTH",
"199 401 OFFCURVE",
"312 483 OFFCURVE",
"385 494 QCURVE",
"390 495 OFFCURVE",
"401 495 QCURVE SMOOTH",
"437 495 OFFCURVE",
"490 448 OFFCURVE",
"489 415 QCURVE",
"488 413 OFFCURVE",
"488 408 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
59 18 8 3 3 2 1 76 0 1 0 2 3 1 2 105 0 3 0 0 3 89 0 3 3 0 97 0 0 3 0 81 55 53 41 39 25 24 19 4 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 684;
}
);
note = O.alt2;
unicode = F03E;
},
{
glyphname = N.alt1;
lastChange = "2019-06-23 23:17:29 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"257 359 OFFCURVE",
"331 176 OFFCURVE",
"343 146 QCURVE",
"375 74 OFFCURVE",
"424 -14 OFFCURVE",
"461 -54 QCURVE",
"490 -49 LINE",
"522 -45 OFFCURVE",
"545 -39 QCURVE",
"576 -29 OFFCURVE",
"597 1 OFFCURVE",
"597 34 QCURVE SMOOTH",
"597 61 OFFCURVE",
"598 75 QCURVE",
"598 130 OFFCURVE",
"600 157 QCURVE SMOOTH",
"606 252 OFFCURVE",
"630 396 OFFCURVE",
"661 460 QCURVE SMOOTH",
"682 502 LINE SMOOTH",
"703 541 OFFCURVE",
"708 553 QCURVE SMOOTH",
"717 573 OFFCURVE",
"717 586 QCURVE SMOOTH",
"717 608 OFFCURVE",
"689 630 QCURVE",
"682 624 OFFCURVE",
"652 599 OFFCURVE",
"642 589 QCURVE SMOOTH",
"522 409 OFFCURVE",
"487 221 QCURVE SMOOTH",
"484 205 OFFCURVE",
"475 169 OFFCURVE",
"466 150 QCURVE",
"445 196 OFFCURVE",
"416 274 QCURVE SMOOTH",
"314 546 LINE SMOOTH",
"305 571 OFFCURVE",
"279 572 QCURVE SMOOTH",
"274 572 OFFCURVE",
"266 570 QCURVE SMOOTH",
"245 565 OFFCURVE",
"219 548 OFFCURVE",
"185 524 OFFCURVE",
"174 504 QCURVE SMOOTH",
"161 480 OFFCURVE",
"158 476 QCURVE",
"155 471 OFFCURVE",
"147 457 OFFCURVE",
"142 448 QCURVE SMOOTH",
"109 387 OFFCURVE",
"70 249 OFFCURVE",
"57 166 QCURVE",
"55 156 OFFCURVE",
"53 130 OFFCURVE",
"53 125 QCURVE SMOOTH",
"53 119 OFFCURVE",
"52 102 OFFCURVE",
"50 90 QCURVE",
"49 80 OFFCURVE",
"57 61 OFFCURVE",
"68 41 QCURVE SMOOTH",
"80 19 OFFCURVE",
"82 15 QCURVE",
"114 18 LINE SMOOTH",
"148 21 OFFCURVE",
"169 27 QCURVE SMOOTH",
"192 34 OFFCURVE",
"212 56 OFFCURVE",
"212 79 QCURVE SMOOTH",
"212 116 OFFCURVE",
"203 147 QCURVE SMOOTH",
"193 180 OFFCURVE",
"193 216 QCURVE SMOOTH",
"193 252 OFFCURVE",
"211 354 OFFCURVE",
"229 406 QCURVE",
"234 399 OFFCURVE",
"249 379 OFFCURVE",
"251 373 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
53 1 0 74 73 65 63 45 15 2 6 0 73 0 0 0 118 41 39 1 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 767;
}
);
note = N.alt1;
unicode = F03F;
},
{
glyphname = M.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"560 95 LINE SMOOTH",
"543 -24 OFFCURVE",
"530 -140 QCURVE SMOOTH",
"527 -173 OFFCURVE",
"527 -206 QCURVE SMOOTH",
"528 -272 LINE",
"529 -290 OFFCURVE",
"553 -309 OFFCURVE",
"572 -308 QCURVE SMOOTH",
"588 -307 OFFCURVE",
"604 -290 OFFCURVE",
"606 -273 QCURVE SMOOTH",
"608 -256 OFFCURVE",
"620 -212 OFFCURVE",
"623 -203 QCURVE SMOOTH",
"629 -183 OFFCURVE",
"630 -172 QCURVE",
"646 -78 OFFCURVE",
"653 -30 QCURVE SMOOTH",
"685 156 LINE SMOOTH",
"689 180 OFFCURVE",
"727 374 QCURVE SMOOTH",
"748 478 LINE SMOOTH",
"752 497 OFFCURVE",
"752 515 QCURVE SMOOTH",
"752 545 OFFCURVE",
"720 577 OFFCURVE",
"684 585 QCURVE",
"674 588 OFFCURVE",
"664 588 QCURVE SMOOTH",
"636 588 OFFCURVE",
"619 564 QCURVE",
"599 538 OFFCURVE",
"588 525 QCURVE",
"554 481 OFFCURVE",
"557 485 QCURVE",
"533 451 OFFCURVE",
"480 396 OFFCURVE",
"459 384 QCURVE",
"441 511 LINE SMOOTH",
"434 552 OFFCURVE",
"423 581 OFFCURVE",
"394 594 OFFCURVE",
"353 602 QCURVE SMOOTH",
"343 604 OFFCURVE",
"337 604 QCURVE SMOOTH",
"310 604 OFFCURVE",
"292 582 QCURVE",
"286 576 OFFCURVE",
"265 545 QCURVE SMOOTH",
"211 467 OFFCURVE",
"138 300 OFFCURVE",
"87 163 QCURVE SMOOTH",
"77 134 OFFCURVE",
"55 76 QCURVE SMOOTH",
"50 63 OFFCURVE",
"50 52 QCURVE SMOOTH",
"50 22 OFFCURVE",
"101 -20 OFFCURVE",
"130 -20 QCURVE SMOOTH",
"148 -20 OFFCURVE",
"171 -6 OFFCURVE",
"176 11 QCURVE SMOOTH",
"195 77 OFFCURVE",
"221 144 QCURVE SMOOTH",
"267 263 OFFCURVE",
"311 368 QCURVE",
"313 374 OFFCURVE",
"322 385 OFFCURVE",
"323 386 QCURVE",
"365 284 LINE SMOOTH",
"379 251 OFFCURVE",
"434 224 OFFCURVE",
"473 221 QCURVE SMOOTH",
"490 220 OFFCURVE",
"513 237 QCURVE",
"529 250 OFFCURVE",
"558 277 QCURVE SMOOTH",
"581 299 LINE",
"581 283 OFFCURVE",
"580 276 QCURVE",
"580 255 OFFCURVE",
"579 245 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
43 12 3 3 0 3 1 76 0 2 3 2 133 0 3 0 3 133 0 0 1 0 133 0 1 4 1 133 0 4 4 118 74 72 47 28 45 23 5 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 802;
}
);
note = M.alt1;
unicode = F040;
},
{
glyphname = M.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"442 291 LINE",
"432 292 LINE",
"431 300 OFFCURVE",
"426 322 OFFCURVE",
"425 330 QCURVE SMOOTH",
"408 519 LINE",
"407 546 OFFCURVE",
"399 573 QCURVE",
"393 602 OFFCURVE",
"347 625 OFFCURVE",
"309 625 QCURVE SMOOTH",
"287 625 OFFCURVE",
"266 609 OFFCURVE",
"254 584 QCURVE SMOOTH",
"242 560 OFFCURVE",
"236 542 QCURVE",
"182 399 LINE SMOOTH",
"146 303 OFFCURVE",
"127 255 QCURVE SMOOTH",
"90 161 OFFCURVE",
"55 79 QCURVE",
"50 69 OFFCURVE",
"50 58 QCURVE SMOOTH",
"50 38 OFFCURVE",
"70 24 QCURVE SMOOTH",
"103 1 OFFCURVE",
"130 1 QCURVE SMOOTH",
"158 1 OFFCURVE",
"169 25 QCURVE",
"224 134 OFFCURVE",
"246 212 QCURVE",
"249 221 OFFCURVE",
"261 263 OFFCURVE",
"280 307 OFFCURVE",
"299 327 QCURVE",
"307 311 OFFCURVE",
"316 277 OFFCURVE",
"320 236 OFFCURVE",
"321 228 QCURVE SMOOTH",
"332 150 LINE SMOOTH",
"335 130 OFFCURVE",
"347 36 OFFCURVE",
"354 -1 QCURVE SMOOTH",
"360 -37 OFFCURVE",
"409 -78 OFFCURVE",
"444 -79 QCURVE SMOOTH",
"472 -79 OFFCURVE",
"495 -58 OFFCURVE",
"495 -32 QCURVE SMOOTH",
"496 50 OFFCURVE",
"545 200 OFFCURVE",
"595 312 QCURVE",
"596 314 OFFCURVE",
"604 319 OFFCURVE",
"608 322 QCURVE",
"609 318 OFFCURVE",
"614 305 OFFCURVE",
"615 300 QCURVE",
"635 172 OFFCURVE",
"644 108 QCURVE SMOOTH",
"657 29 OFFCURVE",
"705 -49 QCURVE SMOOTH",
"730 -92 OFFCURVE",
"773 -92 QCURVE SMOOTH",
"796 -92 OFFCURVE",
"821 -80 QCURVE",
"807 -39 OFFCURVE",
"802 -28 QCURVE",
"798 -16 OFFCURVE",
"788 6 QCURVE SMOOTH",
"765 53 OFFCURVE",
"762 82 QCURVE",
"752 151 OFFCURVE",
"736 314 OFFCURVE",
"733 340 QCURVE SMOOTH",
"722 450 LINE SMOOTH",
"716 502 OFFCURVE",
"710 526 QCURVE",
"697 570 OFFCURVE",
"660 571 QCURVE SMOOTH",
"654 571 OFFCURVE",
"636 577 OFFCURVE",
"630 578 QCURVE SMOOTH",
"616 580 OFFCURVE",
"612 580 QCURVE SMOOTH",
"599 580 OFFCURVE",
"581 568 OFFCURVE",
"573 553 QCURVE SMOOTH",
"477 364 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
88 83 54 3 4 1 23 1 2 3 2 76 0 5 0 5 133 0 0 1 0 133 0 1 4 1 133 0 4 3 4 133 0 3 2 3 133 0 2 2 118 79 77 63 61 44 42 46 36 19 6 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 871;
}
);
note = M.alt2;
unicode = F041;
},
{
glyphname = T.alt1;
lastChange = "2019-06-23 23:18:38 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"230 587 OFFCURVE",
"248 587 QCURVE SMOOTH",
"262 587 OFFCURVE",
"275 590 QCURVE",
"286 592 OFFCURVE",
"289 592 QCURVE SMOOTH",
"305 592 OFFCURVE",
"320 569 OFFCURVE",
"318 548 QCURVE",
"317 540 OFFCURVE",
"313 521 OFFCURVE",
"312 514 QCURVE SMOOTH",
"302 447 OFFCURVE",
"275 313 OFFCURVE",
"253 223 QCURVE SMOOTH",
"240 169 LINE SMOOTH",
"211 57 OFFCURVE",
"199 2 QCURVE SMOOTH",
"197 -7 OFFCURVE",
"197 -11 QCURVE SMOOTH",
"197 -31 OFFCURVE",
"215 -38 QCURVE",
"223 -40 OFFCURVE",
"226 -40 QCURVE SMOOTH",
"239 -40 OFFCURVE",
"264 -27 OFFCURVE",
"267 -17 QCURVE",
"291 37 OFFCURVE",
"300 64 QCURVE SMOOTH",
"309 90 LINE SMOOTH",
"343 188 OFFCURVE",
"354 231 QCURVE SMOOTH",
"381 336 OFFCURVE",
"414 485 OFFCURVE",
"414 562 QCURVE SMOOTH",
"414 589 OFFCURVE",
"413 602 QCURVE",
"451 604 LINE SMOOTH",
"551 609 OFFCURVE",
"601 612 QCURVE SMOOTH",
"654 612 OFFCURVE",
"733 628 QCURVE SMOOTH",
"743 630 OFFCURVE",
"772 644 OFFCURVE",
"779 648 QCURVE",
"779 658 LINE",
"758 664 LINE SMOOTH",
"742 669 OFFCURVE",
"731 671 QCURVE",
"710 674 OFFCURVE",
"669 674 QCURVE SMOOTH",
"586 675 LINE SMOOTH",
"544 676 OFFCURVE",
"420 679 OFFCURVE",
"337 678 QCURVE SMOOTH",
"258 677 LINE SMOOTH",
"214 676 OFFCURVE",
"161 669 OFFCURVE",
"135 653 QCURVE",
"147 610 OFFCURVE",
"198 596 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
15 14 1 3 1 0 40 1 3 5 2 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
42 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 2 1 4 1 2 114 0 4 5 1 4 112 0 5 3 1 5 112 0 3 3 132 0 0 1 1 0 87 0 0 0 1 97 0 1 0 1 81 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 40 values pushed */
0 2 1 4 1 2 114 0 4 5 1 4 112 0 5 3 1 5 3 126 0 3 3 132 0 0 1 1 0 87 0 0 0 1 97 0 1 0 1 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
59 57 54 53 28 33 25 115 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 771;
}
);
leftKerningGroup = T;
note = T.alt1;
unicode = F042;
},
{
glyphname = U.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"550 570 OFFCURVE",
"526 604 OFFCURVE",
"505 629 QCURVE SMOOTH",
"488 649 OFFCURVE",
"472 671 QCURVE",
"468 658 OFFCURVE",
"463 646 OFFCURVE",
"463 643 QCURVE SMOOTH",
"463 640 OFFCURVE",
"465 633 OFFCURVE",
"465 629 QCURVE",
"477 565 OFFCURVE",
"477 505 QCURVE SMOOTH",
"477 286 OFFCURVE",
"313 129 QCURVE SMOOTH",
"299 116 OFFCURVE",
"261 94 OFFCURVE",
"248 94 QCURVE SMOOTH",
"244 94 OFFCURVE",
"240 96 QCURVE SMOOTH",
"223 105 OFFCURVE",
"195 148 OFFCURVE",
"191 170 QCURVE SMOOTH",
"181 227 OFFCURVE",
"181 290 QCURVE SMOOTH",
"181 399 OFFCURVE",
"214 531 QCURVE SMOOTH",
"217 543 OFFCURVE",
"217 554 QCURVE SMOOTH",
"217 580 OFFCURVE",
"180 616 OFFCURVE",
"140 627 QCURVE SMOOTH",
"124 631 OFFCURVE",
"118 631 QCURVE SMOOTH",
"79 631 OFFCURVE",
"73 575 QCURVE SMOOTH",
"67 525 LINE SMOOTH",
"61 466 OFFCURVE",
"50 341 OFFCURVE",
"50 290 QCURVE SMOOTH",
"50 185 OFFCURVE",
"147 47 OFFCURVE",
"246 8 QCURVE SMOOTH",
"280 -5 OFFCURVE",
"309 -5 QCURVE SMOOTH",
"367 -5 OFFCURVE",
"409 38 QCURVE SMOOTH",
"491 124 OFFCURVE",
"526 191 QCURVE SMOOTH",
"577 290 OFFCURVE",
"577 404 QCURVE SMOOTH",
"577 479 OFFCURVE",
"555 551 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
47 1 1 74 0 1 2 1 133 0 2 0 2 133 0 0 0 118 35 34 25 38 3 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 627;
}
);
note = U.alt2;
unicode = F043;
},
{
glyphname = V.alt1;
lastChange = "2019-10-02 09:52:03 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"423 164 OFFCURVE",
"486 283 QCURVE SMOOTH",
"510 328 OFFCURVE",
"565 416 OFFCURVE",
"608 481 QCURVE SMOOTH",
"624 504 OFFCURVE",
"654 550 QCURVE SMOOTH",
"675 581 OFFCURVE",
"704 619 QCURVE SMOOTH",
"740 669 LINE SMOOTH",
"760 697 OFFCURVE",
"760 715 QCURVE SMOOTH",
"760 725 OFFCURVE",
"750 747 OFFCURVE",
"743 755 QCURVE",
"736 762 OFFCURVE",
"729 762 QCURVE SMOOTH",
"718 762 OFFCURVE",
"704 748 QCURVE SMOOTH",
"694 738 OFFCURVE",
"672 720 QCURVE",
"655 705 OFFCURVE",
"620 673 OFFCURVE",
"608 657 QCURVE SMOOTH",
"548 576 OFFCURVE",
"448 429 QCURVE SMOOTH",
"359 302 LINE",
"341 276 LINE SMOOTH",
"318 242 OFFCURVE",
"281 193 OFFCURVE",
"256 170 QCURVE",
"252 194 LINE SMOOTH",
"248 223 OFFCURVE",
"247 229 QCURVE",
"244 256 LINE SMOOTH",
"235 342 OFFCURVE",
"217 447 OFFCURVE",
"197 499 QCURVE SMOOTH",
"184 532 OFFCURVE",
"133 564 OFFCURVE",
"94 573 QCURVE SMOOTH",
"90 574 OFFCURVE",
"84 574 QCURVE SMOOTH",
"67 574 OFFCURVE",
"49 552 OFFCURVE",
"50 534 QCURVE",
"52 521 OFFCURVE",
"68 492 OFFCURVE",
"71 487 QCURVE SMOOTH",
"74 482 OFFCURVE",
"93 460 OFFCURVE",
"95 452 QCURVE",
"118 342 OFFCURVE",
"133 254 QCURVE SMOOTH",
"153 138 OFFCURVE",
"160 84 QCURVE",
"168 -4 OFFCURVE",
"256 -42 QCURVE",
"273 -40 OFFCURVE",
"297 -21 OFFCURVE",
"317 12 OFFCURVE",
"322 19 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
30 15 3 3 0 73 0 1 0 1 133 0 0 0 118 44 43 18 17 2 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 640;
}
);
note = V.alt1;
rightKerningGroup = V;
unicode = F044;
},
{
glyphname = W.alt1;
lastChange = "2019-08-23 11:28:24 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"500 64 OFFCURVE",
"544 22 OFFCURVE",
"583 6 QCURVE SMOOTH",
"595 1 OFFCURVE",
"604 1 QCURVE SMOOTH",
"623 1 OFFCURVE",
"635 19 QCURVE",
"661 51 OFFCURVE",
"694 103 OFFCURVE",
"703 132 QCURVE SMOOTH",
"715 169 LINE SMOOTH",
"760 307 OFFCURVE",
"788 373 QCURVE SMOOTH",
"813 435 OFFCURVE",
"853 515 QCURVE SMOOTH",
"860 529 OFFCURVE",
"859 522 OFFCURVE",
"871 549 QCURVE SMOOTH",
"875 558 OFFCURVE",
"881 586 OFFCURVE",
"910 660 OFFCURVE",
"915 702 OFFCURVE",
"875 699 OFFCURVE",
"863 682 QCURVE SMOOTH",
"718 477 OFFCURVE",
"641 276 QCURVE SMOOTH",
"619 220 OFFCURVE",
"605 194 QCURVE",
"603 191 OFFCURVE",
"596 176 OFFCURVE",
"582 161 OFFCURVE",
"568 158 QCURVE",
"552 181 OFFCURVE",
"544 231 OFFCURVE",
"559 298 OFFCURVE",
"572 345 QCURVE",
"580 369 OFFCURVE",
"583 382 QCURVE",
"529 459 LINE",
"504 427 OFFCURVE",
"465 369 QCURVE SMOOTH",
"414 294 OFFCURVE",
"335 203 OFFCURVE",
"280 170 QCURVE",
"277 175 OFFCURVE",
"270 186 OFFCURVE",
"269 190 QCURVE",
"256 252 LINE SMOOTH",
"228 388 OFFCURVE",
"218 456 QCURVE SMOOTH",
"213 491 OFFCURVE",
"173 535 OFFCURVE",
"141 558 QCURVE SMOOTH",
"134 563 OFFCURVE",
"124 563 QCURVE SMOOTH",
"115 563 OFFCURVE",
"109 560 QCURVE",
"75 549 OFFCURVE",
"71 519 QCURVE SMOOTH",
"70 512 OFFCURVE",
"70 499 QCURVE SMOOTH",
"70 469 OFFCURVE",
"91 457 QCURVE SMOOTH",
"110 446 OFFCURVE",
"128 414 OFFCURVE",
"133 389 QCURVE SMOOTH",
"171 215 OFFCURVE",
"213 29 QCURVE SMOOTH",
"218 7 OFFCURVE",
"250 -22 OFFCURVE",
"271 -26 QCURVE",
"281 -27 OFFCURVE",
"307 -15 OFFCURVE",
"317 -6 QCURVE SMOOTH",
"341 19 OFFCURVE",
"390 72 QCURVE SMOOTH",
"414 98 LINE",
"477 169 LINE",
"486 139 LINE SMOOTH",
"494 110 OFFCURVE",
"495 102 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
64 1 0 1 42 41 2 3 2 0 2 76 0 1 0 1 133 0 0 2 0 133 0 2 2 118 88 86 62 61 26 24 3 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 989;
}
);
note = W.alt1;
unicode = F045;
},
{
glyphname = X.alt2;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"466 116 OFFCURVE",
"584 26 OFFCURVE",
"671 -32 QCURVE SMOOTH",
"689 -44 OFFCURVE",
"702 -44 QCURVE SMOOTH",
"717 -44 OFFCURVE",
"723 -33 QCURVE",
"726 -29 OFFCURVE",
"726 -21 QCURVE SMOOTH",
"726 -11 OFFCURVE",
"714 10 OFFCURVE",
"703 17 QCURVE SMOOTH",
"697 21 OFFCURVE",
"670 38 OFFCURVE",
"663 45 QCURVE SMOOTH",
"573 133 OFFCURVE",
"503 206 QCURVE SMOOTH",
"455 255 OFFCURVE",
"428 290 QCURVE SMOOTH",
"410 314 OFFCURVE",
"410 328 QCURVE SMOOTH",
"410 345 OFFCURVE",
"432 368 QCURVE SMOOTH",
"469 409 LINE SMOOTH",
"479 420 OFFCURVE",
"514 460 OFFCURVE",
"526 475 QCURVE SMOOTH",
"554 509 OFFCURVE",
"582 562 QCURVE",
"587 570 OFFCURVE",
"587 583 QCURVE SMOOTH",
"587 594 OFFCURVE",
"583 598 QCURVE SMOOTH",
"577 604 OFFCURVE",
"547 633 OFFCURVE",
"509 656 OFFCURVE",
"480 656 QCURVE SMOOTH",
"450 656 OFFCURVE",
"431 630 QCURVE SMOOTH",
"405 594 OFFCURVE",
"393 576 QCURVE SMOOTH",
"360 529 LINE",
"355 523 OFFCURVE",
"349 513 OFFCURVE",
"346 509 QCURVE",
"332 488 OFFCURVE",
"309 461 OFFCURVE",
"293 451 QCURVE",
"288 457 OFFCURVE",
"280 469 QCURVE",
"258 496 OFFCURVE",
"228 540 QCURVE SMOOTH",
"203 575 OFFCURVE",
"144 614 OFFCURVE",
"105 614 QCURVE SMOOTH",
"98 614 OFFCURVE",
"82 612 QCURVE",
"83 604 OFFCURVE",
"86 576 OFFCURVE",
"91 567 QCURVE",
"101 547 OFFCURVE",
"132 505 OFFCURVE",
"137 497 QCURVE SMOOTH",
"148 480 OFFCURVE",
"167 454 OFFCURVE",
"174 445 QCURVE SMOOTH",
"196 415 OFFCURVE",
"220 381 QCURVE",
"229 367 OFFCURVE",
"229 351 QCURVE SMOOTH",
"229 347 OFFCURVE",
"227 341 QCURVE",
"204 289 OFFCURVE",
"174 241 QCURVE SMOOTH",
"108 138 LINE",
"50 49 LINE",
"55 35 OFFCURVE",
"76 -28 QCURVE",
"85 -29 OFFCURVE",
"99 -31 OFFCURVE",
"105 -31 QCURVE SMOOTH",
"117 -31 OFFCURVE",
"129 -21 OFFCURVE",
"142 -4 QCURVE SMOOTH",
"180 48 LINE SMOOTH",
"214 97 OFFCURVE",
"223 108 QCURVE",
"267 166 OFFCURVE",
"291 195 QCURVE",
"291 195 OFFCURVE",
"333 249 QCURVE",
"356 228 LINE SMOOTH",
"398 190 OFFCURVE",
"416 170 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
84 62 45 36 23 17 2 7 0 1 1 76 0 2 1 2 133 0 1 0 1 133 0 0 3 0 133 0 3 3 118 89 87 57 55 39 37 27 4 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 776;
}
);
note = X.alt2;
unicode = F046;
},
{
glyphname = Y.alt1;
lastChange = "2019-06-23 23:29:59 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"122 -179 LINE",
"129 -184 LINE",
"135 -181 OFFCURVE",
"159 -179 OFFCURVE",
"184 -170 QCURVE SMOOTH",
"197 -170 OFFCURVE",
"217 -155 OFFCURVE",
"234 -129 OFFCURVE",
"237 -125 QCURVE",
"303 -24 OFFCURVE",
"402 131 QCURVE SMOOTH",
"434 181 LINE",
"450 206 LINE SMOOTH",
"508 298 OFFCURVE",
"600 417 OFFCURVE",
"660 465 QCURVE SMOOTH",
"673 475 OFFCURVE",
"673 489 QCURVE SMOOTH",
"673 508 OFFCURVE",
"655 518 QCURVE",
"622 539 OFFCURVE",
"591 539 QCURVE SMOOTH",
"543 539 OFFCURVE",
"507 487 QCURVE SMOOTH",
"460 420 OFFCURVE",
"421 359 QCURVE SMOOTH",
"378 295 LINE SMOOTH",
"360 268 OFFCURVE",
"342 268 QCURVE SMOOTH",
"330 268 OFFCURVE",
"309 284 QCURVE SMOOTH",
"283 305 OFFCURVE",
"269 327 QCURVE",
"203 441 OFFCURVE",
"178 576 QCURVE SMOOTH",
"175 592 OFFCURVE",
"162 611 OFFCURVE",
"148 616 QCURVE",
"141 619 OFFCURVE",
"115 630 OFFCURVE",
"106 631 QCURVE SMOOTH",
"92 633 OFFCURVE",
"83 633 QCURVE SMOOTH",
"64 633 OFFCURVE",
"56 627 QCURVE",
"50 623 OFFCURVE",
"50 607 QCURVE SMOOTH",
"50 596 OFFCURVE",
"54 582 QCURVE",
"63 557 LINE SMOOTH",
"103 443 OFFCURVE",
"129 389 QCURVE SMOOTH",
"185 272 OFFCURVE",
"297 231 QCURVE SMOOTH",
"303 229 OFFCURVE",
"317 217 OFFCURVE",
"320 215 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
54 1 3 1 1 76 57 1 3 73 0 0 2 0 133 0 2 1 2 133 0 1 3 1 133 0 3 3 118 31 37 44 45 4 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 723;
}
);
note = Y.alt1;
unicode = F047;
},
{
glyphname = Z.alt1;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"235 59 LINE",
"229 72 LINE",
"260 111 LINE",
"296 160 OFFCURVE",
"326 193 QCURVE SMOOTH",
"392 266 LINE SMOOTH",
"452 330 OFFCURVE",
"468 350 QCURVE SMOOTH",
"501 389 OFFCURVE",
"537 443 QCURVE SMOOTH",
"549 461 OFFCURVE",
"549 479 QCURVE SMOOTH",
"549 504 OFFCURVE",
"521 523 QCURVE SMOOTH",
"459 564 OFFCURVE",
"393 581 QCURVE SMOOTH",
"346 592 OFFCURVE",
"306 592 QCURVE SMOOTH",
"250 592 OFFCURVE",
"143 564 OFFCURVE",
"67 537 QCURVE SMOOTH",
"50 531 OFFCURVE",
"50 517 QCURVE SMOOTH",
"50 510 OFFCURVE",
"55 500 QCURVE",
"66 480 OFFCURVE",
"114 453 OFFCURVE",
"139 453 QCURVE SMOOTH",
"150 453 OFFCURVE",
"160 456 QCURVE",
"187 463 OFFCURVE",
"215 474 QCURVE",
"260 489 LINE",
"294 499 OFFCURVE",
"334 508 OFFCURVE",
"356 508 QCURVE SMOOTH",
"386 508 OFFCURVE",
"416 495 QCURVE",
"382 423 OFFCURVE",
"342 373 QCURVE SMOOTH",
"250 263 OFFCURVE",
"128 110 QCURVE SMOOTH",
"105 81 OFFCURVE",
"105 59 QCURVE SMOOTH",
"105 29 OFFCURVE",
"150 5 QCURVE",
"157 2 OFFCURVE",
"181 -5 OFFCURVE",
"189 -8 QCURVE",
"219 -17 OFFCURVE",
"248 -17 QCURVE SMOOTH",
"270 -17 OFFCURVE",
"316 -11 QCURVE SMOOTH",
"354 -7 LINE SMOOTH",
"418 -1 OFFCURVE",
"507 15 QCURVE SMOOTH",
"554 23 LINE SMOOTH",
"631 37 OFFCURVE",
"682 48 QCURVE SMOOTH",
"703 52 LINE SMOOTH",
"718 55 OFFCURVE",
"735 73 OFFCURVE",
"735 87 QCURVE SMOOTH",
"735 110 OFFCURVE",
"711 110 QCURVE SMOOTH",
"687 110 OFFCURVE",
"639 104 QCURVE SMOOTH",
"599 100 LINE SMOOTH",
"569 98 OFFCURVE",
"555 98 QCURVE",
"510 96 OFFCURVE",
"488 93 QCURVE SMOOTH",
"456 89 OFFCURVE",
"382 77 QCURVE SMOOTH",
"298 64 LINE SMOOTH",
"279 61 OFFCURVE",
"260 61 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 66 values pushed */
39 1 5 4 76 1 3 0 2 76 0 5 4 2 4 5 2 128 0 2 1 4 2 1 126 0 1 0 4 1 0 126 0 6 0 4 5 6 4 105 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 40 38 45 44 34 53 16 7 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 785;
}
);
note = Z.alt1;
unicode = F048;
},
{
glyphname = uniF8FF;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"657 595 OFFCURVE",
"534 663 QCURVE",
"529 666 OFFCURVE",
"512 673 OFFCURVE",
"501 680 OFFCURVE",
"501 687 QCURVE SMOOTH",
"501 693 OFFCURVE",
"509 706 QCURVE",
"507 707 OFFCURVE",
"492 717 QCURVE SMOOTH",
"489 719 OFFCURVE",
"480 726 OFFCURVE",
"464 734 OFFCURVE",
"458 733 QCURVE",
"439 731 OFFCURVE",
"403 715 QCURVE SMOOTH",
"382 706 OFFCURVE",
"377 704 QCURVE",
"365 726 LINE",
"319 692 OFFCURVE",
"295 676 QCURVE SMOOTH",
"282 667 OFFCURVE",
"263 660 QCURVE",
"117 615 OFFCURVE",
"68 479 QCURVE SMOOTH",
"50 429 OFFCURVE",
"50 371 QCURVE SMOOTH",
"50 335 OFFCURVE",
"61 267 OFFCURVE",
"73 209 QCURVE SMOOTH",
"84 156 OFFCURVE",
"144 77 OFFCURVE",
"194 57 QCURVE SMOOTH",
"211 50 OFFCURVE",
"245 34 QCURVE SMOOTH",
"331 -3 LINE",
"337 -5 OFFCURVE",
"343 -5 QCURVE SMOOTH",
"353 -5 OFFCURVE",
"360 -2 QCURVE",
"412 16 LINE SMOOTH",
"425 21 OFFCURVE",
"517 55 OFFCURVE",
"555 73 QCURVE SMOOTH",
"574 82 OFFCURVE",
"599 90 OFFCURVE",
"611 90 QCURVE SMOOTH",
"628 90 OFFCURVE",
"649 78 QCURVE SMOOTH",
"654 75 OFFCURVE",
"676 80 OFFCURVE",
"682 85 QCURVE",
"689 92 OFFCURVE",
"689 106 QCURVE SMOOTH",
"689 112 OFFCURVE",
"686 115 QCURVE SMOOTH",
"673 128 OFFCURVE",
"673 140 QCURVE SMOOTH",
"673 146 OFFCURVE",
"679 158 OFFCURVE",
"693 174 OFFCURVE",
"696 177 QCURVE",
"737 228 OFFCURVE",
"775 304 OFFCURVE",
"775 342 QCURVE SMOOTH",
"775 375 OFFCURVE",
"745 451 OFFCURVE",
"714 502 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"499 609 LINE SMOOTH",
"538 583 OFFCURVE",
"586 543 OFFCURVE",
"625 486 OFFCURVE",
"633 447 QCURVE",
"490 426 LINE",
"504 453 OFFCURVE",
"518 483 QCURVE",
"485 502 OFFCURVE",
"459 529 OFFCURVE",
"459 547 QCURVE SMOOTH",
"459 559 OFFCURVE",
"469 593 OFFCURVE",
"480 622 QCURVE"
);
},
{
closed = 1;
nodes = (
"219 428 LINE",
"167 425 LINE",
"175 446 LINE",
"176 450 OFFCURVE",
"186 477 OFFCURVE",
"193 486 QCURVE",
"200 496 OFFCURVE",
"227 528 QCURVE",
"232 535 OFFCURVE",
"244 549 QCURVE",
"259 570 OFFCURVE",
"273 570 QCURVE SMOOTH",
"288 570 OFFCURVE",
"301 545 QCURVE SMOOTH",
"332 490 LINE SMOOTH",
"349 462 OFFCURVE",
"366 431 QCURVE",
"325 431 LINE SMOOTH",
"314 431 OFFCURVE",
"284 432 OFFCURVE",
"265 431 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"652 359 LINE",
"586 238 LINE",
"579 244 OFFCURVE",
"566 252 OFFCURVE",
"565 255 QCURVE",
"556 275 OFFCURVE",
"545 305 OFFCURVE",
"541 315 QCURVE SMOOTH",
"529 345 LINE",
"640 374 LINE"
);
},
{
closed = 1;
nodes = (
"323 137 OFFCURVE",
"306 116 OFFCURVE",
"290 116 QCURVE SMOOTH",
"276 116 OFFCURVE",
"261 123 QCURVE SMOOTH",
"217 143 OFFCURVE",
"217 166 QCURVE SMOOTH",
"217 184 OFFCURVE",
"242 208 QCURVE SMOOTH",
"246 212 OFFCURVE",
"268 232 QCURVE SMOOTH",
"292 253 OFFCURVE",
"292 253 QCURVE",
"297 258 OFFCURVE",
"317 283 QCURVE SMOOTH",
"330 300 LINE",
"345 291 LINE",
"339 247 LINE SMOOTH",
"337 232 OFFCURVE",
"330 178 OFFCURVE",
"327 159 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"433 285 LINE",
"436 285 OFFCURVE",
"444 287 QCURVE",
"459 266 LINE SMOOTH",
"464 259 OFFCURVE",
"488 224 OFFCURVE",
"496 209 QCURVE SMOOTH",
"501 199 OFFCURVE",
"501 191 QCURVE SMOOTH",
"501 173 OFFCURVE",
"455 148 OFFCURVE",
"415 147 QCURVE"
);
},
{
closed = 1;
nodes = (
"277 333 LINE",
"182 246 LINE",
"165 319 LINE",
"271 343 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 86 values pushed */
76 73 2 2 3 148 147 146 142 136 117 116 112 111 104 75 11 5 2 13 1 0 4 3 76 81 53 49 48 4 3 74 0 3 2 3 133 6 1 2 5 2 133 7 1 5 4 5 133 0 4 0 4 133 0 0 1 0 133 0 1 1 118 134 134 85 82 134 145 134 145 131 129 91 89 82 102 85 100 29 28 21 19 8 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 826;
}
);
note = uniF8FF;
unicode = F8FF;
},
{
glyphname = fi.liga;
lastChange = "2019-10-02 09:49:40 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"529 300 LINE",
"528 316 OFFCURVE",
"507 327 OFFCURVE",
"487 332 QCURVE",
"482 337 OFFCURVE",
"474 339 QCURVE",
"441 346 OFFCURVE",
"336 345 QCURVE",
"305 347 OFFCURVE",
"290 347 QCURVE SMOOTH",
"276 347 OFFCURVE",
"269 346 QCURVE",
"225 342 OFFCURVE",
"230 386 QCURVE SMOOTH",
"233 416 OFFCURVE",
"233 447 QCURVE SMOOTH",
"233 464 OFFCURVE",
"231 501 QCURVE SMOOTH",
"230 523 LINE",
"230 551 OFFCURVE",
"245 575 OFFCURVE",
"266 575 QCURVE SMOOTH",
"283 575 OFFCURVE",
"309 567 QCURVE",
"324 562 OFFCURVE",
"338 562 QCURVE SMOOTH",
"366 562 OFFCURVE",
"374 586 QCURVE SMOOTH",
"376 592 OFFCURVE",
"376 595 QCURVE SMOOTH",
"376 609 OFFCURVE",
"361 637 OFFCURVE",
"352 644 QCURVE SMOOTH",
"346 650 OFFCURVE",
"317 674 OFFCURVE",
"284 697 OFFCURVE",
"268 700 QCURVE",
"254 702 OFFCURVE",
"244 702 QCURVE SMOOTH",
"185 702 OFFCURVE",
"160 660 QCURVE",
"149 638 OFFCURVE",
"138 600 OFFCURVE",
"131 569 QCURVE SMOOTH",
"125 540 LINE",
"122 527 OFFCURVE",
"122 504 QCURVE SMOOTH",
"122 468 OFFCURVE",
"128 409 QCURVE SMOOTH",
"130 389 OFFCURVE",
"130 381 QCURVE SMOOTH",
"130 358 OFFCURVE",
"100 331 OFFCURVE",
"56 325 QCURVE SMOOTH",
"50 324 OFFCURVE",
"37 309 OFFCURVE",
"37 302 QCURVE SMOOTH",
"37 297 OFFCURVE",
"49 284 OFFCURVE",
"56 281 QCURVE",
"63 278 OFFCURVE",
"90 273 OFFCURVE",
"96 268 QCURVE",
"101 266 OFFCURVE",
"115 263 OFFCURVE",
"125 258 OFFCURVE",
"126 253 QCURVE",
"134 221 OFFCURVE",
"143 153 QCURVE SMOOTH",
"150 84 OFFCURVE",
"161 42 QCURVE SMOOTH",
"164 30 OFFCURVE",
"175 -12 QCURVE SMOOTH",
"185 -55 OFFCURVE",
"201 -112 OFFCURVE",
"213 -137 QCURVE SMOOTH",
"225 -164 OFFCURVE",
"248 -164 QCURVE SMOOTH",
"269 -164 OFFCURVE",
"306 -130 OFFCURVE",
"306 -111 QCURVE SMOOTH",
"306 -109 OFFCURVE",
"304 -104 QCURVE SMOOTH",
"283 -64 OFFCURVE",
"266 25 OFFCURVE",
"259 90 QCURVE SMOOTH",
"248 174 OFFCURVE",
"238 214 QCURVE SMOOTH",
"235 225 OFFCURVE",
"235 234 QCURVE SMOOTH",
"235 266 OFFCURVE",
"283 270 QCURVE SMOOTH",
"295 271 OFFCURVE",
"320 271 QCURVE SMOOTH",
"364 271 LINE SMOOTH",
"415 271 OFFCURVE",
"444 275 QCURVE",
"439 240 OFFCURVE",
"439 198 QCURVE SMOOTH",
"439 177 OFFCURVE",
"441 142 QCURVE",
"442 93 LINE SMOOTH",
"442 74 OFFCURVE",
"441 66 QCURVE",
"440 40 OFFCURVE",
"446 18 OFFCURVE",
"458 12 QCURVE",
"463 13 OFFCURVE",
"493 4 OFFCURVE",
"497 4 QCURVE",
"517 48 OFFCURVE",
"532 142 OFFCURVE",
"532 198 QCURVE SMOOTH",
"532 221 OFFCURVE",
"530 266 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
84 1 5 3 63 1 6 4 17 1 0 6 24 10 4 3 2 0 4 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
21 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 33 values pushed */
0 4 5 6 5 4 6 128 0 2 0 2 134 0 6 1 1 0 2 6 0 105 0 5 5 3 97 0 3 3 30 5 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
0 4 5 6 5 4 6 128 0 2 0 2 134 0 3 0 5 4 3 5 105 0 6 0 0 6 89 0 6 6 0 97 1 1 0 6 0 81 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 17 values pushed */
107 101 93 91 89 87 76 74 37 35 23 22 21 18 7 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 582;
}
);
note = fi.liga;
unicode = FB01;
},
{
glyphname = fl.liga;
lastChange = "2019-10-02 09:50:25 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"510 250 OFFCURVE",
"509 317 QCURVE SMOOTH",
"507 447 OFFCURVE",
"496 570 QCURVE",
"494 584 OFFCURVE",
"476 607 OFFCURVE",
"473 611 QCURVE",
"462 635 OFFCURVE",
"276 655 OFFCURVE",
"270 656 QCURVE SMOOTH",
"264 657 OFFCURVE",
"250 657 QCURVE SMOOTH",
"203 657 OFFCURVE",
"108 630 OFFCURVE",
"100 609 QCURVE SMOOTH",
"89 581 OFFCURVE",
"83 519 OFFCURVE",
"83 476 QCURVE",
"81 424 LINE SMOOTH",
"80 400 OFFCURVE",
"75 377 OFFCURVE",
"56 358 OFFCURVE",
"36 355 QCURVE",
"31 354 OFFCURVE",
"20 342 OFFCURVE",
"20 338 QCURVE SMOOTH",
"20 328 OFFCURVE",
"34 318 QCURVE",
"40 313 OFFCURVE",
"55 313 QCURVE SMOOTH",
"100 313 OFFCURVE",
"105 262 QCURVE SMOOTH",
"108 228 OFFCURVE",
"116 188 QCURVE",
"122 163 OFFCURVE",
"136 37 OFFCURVE",
"138 17 QCURVE SMOOTH",
"151 -112 OFFCURVE",
"159 -153 QCURVE SMOOTH",
"167 -192 OFFCURVE",
"211 -192 QCURVE SMOOTH",
"235 -192 OFFCURVE",
"259 -170 OFFCURVE",
"259 -152 QCURVE SMOOTH",
"259 -140 OFFCURVE",
"252 -105 OFFCURVE",
"250 -96 QCURVE SMOOTH",
"242 -60 OFFCURVE",
"231 82 QCURVE SMOOTH",
"219 237 OFFCURVE",
"211 273 QCURVE",
"210 280 OFFCURVE",
"205 299 OFFCURVE",
"205 305 QCURVE SMOOTH",
"205 321 OFFCURVE",
"226 325 QCURVE",
"252 331 OFFCURVE",
"269 333 QCURVE",
"312 341 LINE SMOOTH",
"318 342 OFFCURVE",
"332 353 OFFCURVE",
"336 356 QCURVE",
"333 359 OFFCURVE",
"325 374 OFFCURVE",
"321 375 QCURVE SMOOTH",
"300 380 OFFCURVE",
"271 388 QCURVE SMOOTH",
"241 396 LINE",
"216 390 OFFCURVE",
"205 390 QCURVE SMOOTH",
"194 390 OFFCURVE",
"188 407 OFFCURVE",
"187 433 QCURVE SMOOTH",
"186 467 LINE",
"186 486 OFFCURVE",
"192 504 QCURVE SMOOTH",
"205 542 OFFCURVE",
"268 569 OFFCURVE",
"297 569 QCURVE SMOOTH",
"304 569 OFFCURVE",
"370 564 OFFCURVE",
"399 565 QCURVE",
"400 551 OFFCURVE",
"402 546 OFFCURVE",
"402 543 QCURVE",
"405 528 OFFCURVE",
"405 484 QCURVE",
"406 475 OFFCURVE",
"406 461 QCURVE SMOOTH",
"406 366 OFFCURVE",
"419 56 OFFCURVE",
"420 56 QCURVE",
"420 20 OFFCURVE",
"423 3 QCURVE SMOOTH",
"428 -24 OFFCURVE",
"452 -24 QCURVE SMOOTH",
"454 -24 OFFCURVE",
"475 -21 QCURVE SMOOTH",
"481 -20 OFFCURVE",
"506 4 OFFCURVE",
"506 12 QCURVE",
"505 125 LINE",
"505 162 OFFCURVE",
"506 181 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
35 16 2 3 1 77 1 5 3 49 2 2 0 5 3 76 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 40 values pushed */
2 1 1 6 3 6 1 3 128 0 3 5 6 3 5 126 0 5 0 6 5 0 126 0 0 4 6 0 4 126 0 4 4 132 0 6 6 32 6 78 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 46 values pushed */
0 2 6 1 6 2 1 128 0 1 3 6 1 3 126 0 3 5 6 3 5 126 0 5 0 6 5 0 126 0 0 4 6 0 4 126 0 4 4 132 0 6 6 32 6 78 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 13 values pushed */
92 90 74 72 63 61 39 33 29 38 7 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 562;
}
);
note = fl.liga;
unicode = FB02;
},
{
glyphname = asciicircum;
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"125 504 OFFCURVE",
"146 522 OFFCURVE",
"153 531 QCURVE",
"163 545 OFFCURVE",
"190 572 QCURVE SMOOTH",
"208 590 LINE",
"211 594 OFFCURVE",
"229 607 OFFCURVE",
"233 610 QCURVE",
"251 588 LINE SMOOTH",
"286 546 OFFCURVE",
"297 535 QCURVE",
"318 505 OFFCURVE",
"343 487 OFFCURVE",
"362 483 QCURVE SMOOTH",
"372 481 OFFCURVE",
"405 485 OFFCURVE",
"409 491 QCURVE",
"413 498 OFFCURVE",
"403 523 OFFCURVE",
"404 527 QCURVE",
"402 532 OFFCURVE",
"393 549 OFFCURVE",
"390 555 QCURVE",
"386 566 OFFCURVE",
"318 646 OFFCURVE",
"245 718 OFFCURVE",
"235 720 QCURVE SMOOTH",
"195 729 OFFCURVE",
"182 702 QCURVE SMOOTH",
"170 677 OFFCURVE",
"132 630 QCURVE",
"128 624 OFFCURVE",
"90 577 OFFCURVE",
"79 552 QCURVE",
"76 541 OFFCURVE",
"75 538 QCURVE SMOOTH",
"71 525 OFFCURVE",
"88 507 OFFCURVE",
"102 505 QCURVE SMOOTH",
"108 504 OFFCURVE",
"114 504 QCURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
NPUSHB[ ]\011/* 13 values pushed */
32 1 0 74 0 0 0 118 41 40 1 8 22 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 482;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = newGlyph;
lastChange = "2019-10-02 10:33:05 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
width = 600;
}
);
},
{
glyphname = Amacron;
lastChange = "2019-10-02 10:44:27 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"366 788 OFFCURVE",
"301 788 OFFCURVE",
"233 788 CURVE",
"227 788 OFFCURVE",
"219 788 OFFCURVE",
"214 790 CURVE",
"202 800 OFFCURVE",
"183 811 OFFCURVE",
"181 820 CURVE",
"181 833 OFFCURVE",
"195 858 OFFCURVE",
"206 861 CURVE",
"238 872 OFFCURVE",
"271 874 OFFCURVE",
"304 874 CURVE",
"325 874 OFFCURVE",
"347 865 OFFCURVE",
"366 865 CURVE",
"443 861 OFFCURVE",
"516 865 OFFCURVE",
"589 861 CURVE",
"601 861 OFFCURVE",
"611 849 OFFCURVE",
"622 842 CURVE",
"611 833 OFFCURVE",
"603 813 OFFCURVE",
"592 811 CURVE",
"541 798 OFFCURVE",
"489 790 OFFCURVE",
"434 781 CURVE",
"434 783 OFFCURVE",
"434 783 OFFCURVE",
"434 788 CURVE"
);
},
{
closed = 1;
nodes = (
"114 140 OFFCURVE",
"114 114 QCURVE SMOOTH",
"114 108 OFFCURVE",
"112 95 QCURVE",
"108 78 OFFCURVE",
"108 53 QCURVE",
"106 33 LINE SMOOTH",
"104 10 OFFCURVE",
"127 -6 QCURVE SMOOTH",
"151 -23 OFFCURVE",
"170 -21 QCURVE SMOOTH",
"202 -18 OFFCURVE",
"217 24 QCURVE SMOOTH",
"229 57 OFFCURVE",
"233 98 QCURVE SMOOTH",
"239 156 OFFCURVE",
"293 170 QCURVE SMOOTH",
"363 188 OFFCURVE",
"430 190 QCURVE SMOOTH",
"458 191 OFFCURVE",
"487 187 QCURVE",
"493 163 LINE SMOOTH",
"505 116 OFFCURVE",
"507 99 QCURVE",
"515 42 OFFCURVE",
"549 11 QCURVE",
"560 1 OFFCURVE",
"580 1 QCURVE SMOOTH",
"589 1 OFFCURVE",
"593 2 QCURVE",
"598 3 OFFCURVE",
"609 24 OFFCURVE",
"608 32 QCURVE",
"606 65 OFFCURVE",
"589 117 QCURVE SMOOTH",
"582 138 OFFCURVE",
"580 142 QCURVE",
"570 162 OFFCURVE",
"570 176 QCURVE SMOOTH",
"570 190 OFFCURVE",
"595 207 OFFCURVE",
"621 210 QCURVE SMOOTH",
"639 212 OFFCURVE",
"659 238 OFFCURVE",
"660 260 QCURVE",
"631 264 OFFCURVE",
"617 265 QCURVE",
"576 270 OFFCURVE",
"573 271 QCURVE",
"531 559 LINE SMOOTH",
"529 573 OFFCURVE",
"527 597 QCURVE",
"522 635 LINE SMOOTH",
"514 697 OFFCURVE",
"450 721 QCURVE SMOOTH",
"431 728 OFFCURVE",
"423 727 QCURVE SMOOTH",
"405 725 OFFCURVE",
"393 712 QCURVE SMOOTH",
"385 703 OFFCURVE",
"369 684 QCURVE SMOOTH",
"355 668 OFFCURVE",
"328 634 OFFCURVE",
"319 618 QCURVE SMOOTH",
"211 430 OFFCURVE",
"157 277 QCURVE SMOOTH",
"142 235 OFFCURVE",
"107 217 QCURVE",
"103 214 OFFCURVE",
"76 207 OFFCURVE",
"62 198 OFFCURVE",
"62 190 QCURVE SMOOTH",
"62 178 OFFCURVE",
"76 165 OFFCURVE",
"90 158 QCURVE"
);
},
{
closed = 1;
nodes = (
"293 283 OFFCURVE",
"337 400 OFFCURVE",
"397 523 OFFCURVE",
"417 549 QCURVE",
"430 500 OFFCURVE",
"449 392 OFFCURVE",
"450 383 QCURVE SMOOTH",
"458 310 OFFCURVE",
"468 272 QCURVE",
"431 263 OFFCURVE",
"374 263 QCURVE SMOOTH",
"347 263 LINE SMOOTH",
"338 263 OFFCURVE",
"310 264 OFFCURVE",
"293 263 QCURVE"
);
}
);
width = 700;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 0100;
},
{
glyphname = Emacron;
lastChange = "2019-10-02 10:47:20 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"250 354 LINE",
"273 429 OFFCURVE",
"298 505 QCURVE SMOOTH",
"308 534 OFFCURVE",
"343 534 QCURVE SMOOTH",
"347 534 OFFCURVE",
"366 530 OFFCURVE",
"370 530 QCURVE",
"422 533 OFFCURVE",
"446 534 QCURVE SMOOTH",
"518 538 OFFCURVE",
"653 565 QCURVE",
"659 567 OFFCURVE",
"673 578 OFFCURVE",
"673 582 QCURVE SMOOTH",
"673 590 OFFCURVE",
"666 607 OFFCURVE",
"660 610 QCURVE SMOOTH",
"626 627 OFFCURVE",
"620 627 QCURVE SMOOTH",
"583 629 OFFCURVE",
"530 629 QCURVE SMOOTH",
"450 629 LINE",
"410 629 LINE SMOOTH",
"374 629 OFFCURVE",
"249 655 OFFCURVE",
"215 666 OFFCURVE",
"208 650 QCURVE",
"206 643 OFFCURVE",
"182 633 OFFCURVE",
"178 631 QCURVE",
"171 628 OFFCURVE",
"156 624 QCURVE",
"135 618 LINE",
"139 610 OFFCURVE",
"148 584 OFFCURVE",
"154 580 QCURVE",
"172 566 OFFCURVE",
"172 547 QCURVE SMOOTH",
"172 534 OFFCURVE",
"164 515 QCURVE",
"161 510 OFFCURVE",
"156 490 OFFCURVE",
"154 483 QCURVE",
"106 344 LINE",
"-1 337 LINE",
"3 311 OFFCURVE",
"30 284 OFFCURVE",
"56 270 QCURVE",
"87 255 OFFCURVE",
"87 223 QCURVE SMOOTH",
"87 219 OFFCURVE",
"87 182 OFFCURVE",
"92 166 QCURVE SMOOTH",
"126 50 OFFCURVE",
"248 2 QCURVE SMOOTH",
"317 -25 OFFCURVE",
"403 -25 QCURVE SMOOTH",
"443 -25 OFFCURVE",
"474 -21 QCURVE SMOOTH",
"504 -17 OFFCURVE",
"542 -1 OFFCURVE",
"553 21 QCURVE",
"538 49 OFFCURVE",
"507 71 OFFCURVE",
"484 71 QCURVE",
"469 70 LINE SMOOTH",
"382 64 OFFCURVE",
"326 62 QCURVE SMOOTH",
"272 60 OFFCURVE",
"208 124 OFFCURVE",
"208 169 QCURVE SMOOTH",
"208 200 OFFCURVE",
"223 233 QCURVE",
"290 243 LINE SMOOTH",
"365 253 OFFCURVE",
"403 259 QCURVE SMOOTH",
"446 266 OFFCURVE",
"484 299 QCURVE",
"496 311 OFFCURVE",
"496 322 QCURVE SMOOTH",
"496 332 OFFCURVE",
"487 345 QCURVE SMOOTH",
"471 370 OFFCURVE",
"444 370 QCURVE SMOOTH",
"431 370 OFFCURVE",
"411 362 QCURVE SMOOTH",
"340 334 OFFCURVE",
"274 334 QCURVE SMOOTH",
"259 334 OFFCURVE",
"252 335 QCURVE",
"251 338 OFFCURVE",
"249 347 OFFCURVE",
"249 351 QCURVE"
);
},
{
closed = 1;
nodes = (
"458 789 OFFCURVE",
"302 811 QCURVE SMOOTH",
"242 819 OFFCURVE",
"230 818 QCURVE SMOOTH",
"214 817 OFFCURVE",
"208 817 QCURVE",
"198 816 OFFCURVE",
"187 805 QCURVE SMOOTH",
"182 800 OFFCURVE",
"167 785 OFFCURVE",
"162 781 QCURVE",
"188 747 OFFCURVE",
"188 747 QCURVE",
"197 739 OFFCURVE",
"212 737 QCURVE",
"330 727 OFFCURVE",
"483 729 OFFCURVE",
"524 731 QCURVE SMOOTH",
"583 733 LINE",
"589 733 OFFCURVE",
"593 756 OFFCURVE",
"602 763 QCURVE",
"592 767 OFFCURVE",
"556 781 OFFCURVE",
"544 782 QCURVE SMOOTH"
);
}
);
width = 740;
}
);
unicode = 0112;
},
{
glyphname = Imacron;
lastChange = "2019-12-27 09:51:11 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"372 743 QCURVE",
"374 765 OFFCURVE",
"335 776 OFFCURVE",
"328 775 QCURVE",
"174 767 OFFCURVE",
"11 769 OFFCURVE",
"-3 727 OFFCURVE",
"6 699 QCURVE",
"11 692 OFFCURVE",
"17 689 QCURVE SMOOTH",
"33 681 OFFCURVE",
"55 671 OFFCURVE",
"146 677 QCURVE",
"201 684 LINE SMOOTH",
"277 694 OFFCURVE",
"374 692 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"295 312 LINE",
"295 349 LINE",
"295 384 LINE SMOOTH",
"294 430 OFFCURVE",
"281 521 QCURVE SMOOTH",
"278 542 OFFCURVE",
"264 567 QCURVE",
"249 589 OFFCURVE",
"209 611 OFFCURVE",
"186 611 QCURVE SMOOTH",
"173 611 OFFCURVE",
"162 608 QCURVE SMOOTH",
"136 600 OFFCURVE",
"136 577 QCURVE SMOOTH",
"136 569 OFFCURVE",
"144 538 OFFCURVE",
"145 529 QCURVE",
"146 510 OFFCURVE",
"150 480 QCURVE",
"176 201 OFFCURVE",
"192 42 QCURVE",
"194 28 OFFCURVE",
"203 1 OFFCURVE",
"210 -1 QCURVE SMOOTH",
"221 -4 OFFCURVE",
"233 -4 QCURVE SMOOTH",
"254 -4 OFFCURVE",
"269 5 QCURVE SMOOTH",
"279 12 OFFCURVE",
"294 41 OFFCURVE",
"294 54 QCURVE SMOOTH",
"294 127 OFFCURVE",
"295 164 QCURVE"
);
}
);
width = 440;
}
);
leftKerningGroup = I;
rightKerningGroup = I;
unicode = 012A;
},
{
glyphname = Omacron;
lastChange = "2019-11-20 00:03:01 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"334 809 OFFCURVE",
"334 809 OFFCURVE",
"151 782 QCURVE SMOOTH",
"109 777 OFFCURVE",
"66 726 QCURVE SMOOTH",
"51 708 OFFCURVE",
"237 722 OFFCURVE",
"301 722 QCURVE SMOOTH",
"334 722 OFFCURVE",
"522 733 OFFCURVE",
"538 775 QCURVE SMOOTH",
"544 791 OFFCURVE",
"544 805 QCURVE"
);
},
{
closed = 1;
nodes = (
"243 627 OFFCURVE",
"186 583 OFFCURVE",
"153 538 QCURVE SMOOTH",
"138 519 LINE",
"137 517 OFFCURVE",
"135 513 OFFCURVE",
"132 511 QCURVE",
"112 479 OFFCURVE",
"88 452 OFFCURVE",
"65 443 QCURVE SMOOTH",
"20 427 OFFCURVE",
"18 364 QCURVE SMOOTH",
"18 310 LINE",
"17 303 OFFCURVE",
"17 287 QCURVE SMOOTH",
"17 228 OFFCURVE",
"49 152 QCURVE SMOOTH",
"79 85 OFFCURVE",
"191 2 OFFCURVE",
"259 2 QCURVE SMOOTH",
"339 2 OFFCURVE",
"417 58 QCURVE SMOOTH",
"518 129 OFFCURVE",
"576 261 QCURVE SMOOTH",
"600 314 OFFCURVE",
"600 368 QCURVE SMOOTH",
"600 449 OFFCURVE",
"541 526 QCURVE SMOOTH",
"496 584 OFFCURVE",
"372 627 OFFCURVE",
"288 627 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"457 296 LINE SMOOTH",
"427 230 OFFCURVE",
"376 147 OFFCURVE",
"337 114 QCURVE SMOOTH",
"309 92 OFFCURVE",
"209 83 OFFCURVE",
"201 96 QCURVE",
"189 121 OFFCURVE",
"159 187 QCURVE SMOOTH",
"144 221 LINE",
"143 239 OFFCURVE",
"141 262 OFFCURVE",
"141 271 QCURVE SMOOTH",
"141 278 OFFCURVE",
"142 281 QCURVE",
"164 372 OFFCURVE",
"246 488 OFFCURVE",
"311 542 QCURVE SMOOTH",
"335 562 OFFCURVE",
"361 561 QCURVE SMOOTH",
"389 560 OFFCURVE",
"409 541 QCURVE SMOOTH",
"493 461 OFFCURVE",
"493 409 QCURVE SMOOTH",
"493 372 OFFCURVE",
"475 335 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
leftKerningGroup = "0";
rightKerningGroup = O;
unicode = 014C;
},
{
glyphname = Umacron;
lastChange = "2019-10-02 10:56:41 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"531 640 OFFCURVE",
"509 667 QCURVE",
"465 678 OFFCURVE",
"446 671 OFFCURVE",
"447 668 QCURVE",
"459 604 OFFCURVE",
"459 542 QCURVE SMOOTH",
"459 314 OFFCURVE",
"290 154 QCURVE SMOOTH",
"273 138 OFFCURVE",
"225 114 OFFCURVE",
"215 120 QCURVE SMOOTH",
"197 131 OFFCURVE",
"169 175 OFFCURVE",
"165 197 QCURVE SMOOTH",
"154 257 OFFCURVE",
"155 322 QCURVE SMOOTH",
"157 440 OFFCURVE",
"188 567 QCURVE SMOOTH",
"191 581 OFFCURVE",
"191 592 QCURVE SMOOTH",
"192 646 OFFCURVE",
"113 666 QCURVE SMOOTH",
"101 669 OFFCURVE",
"91 669 QCURVE SMOOTH",
"69 669 OFFCURVE",
"46 638 OFFCURVE",
"43 613 QCURVE SMOOTH",
"37 560 LINE SMOOTH",
"36 548 OFFCURVE",
"27 464 OFFCURVE",
"20 368 OFFCURVE",
"20 320 QCURVE SMOOTH",
"20 212 OFFCURVE",
"118 68 OFFCURVE",
"221 30 QCURVE SMOOTH",
"253 18 OFFCURVE",
"285 18 QCURVE SMOOTH",
"346 18 OFFCURVE",
"388 61 QCURVE SMOOTH",
"472 147 OFFCURVE",
"509 218 QCURVE SMOOTH",
"562 321 OFFCURVE",
"561 437 QCURVE",
"562 516 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"559 796 OFFCURVE",
"538 807 OFFCURVE",
"524 812 QCURVE SMOOTH",
"503 819 OFFCURVE",
"490 820 QCURVE",
"466 825 OFFCURVE",
"350 824 QCURVE SMOOTH",
"340 824 OFFCURVE",
"312 825 OFFCURVE",
"294 826 QCURVE SMOOTH",
"256 828 OFFCURVE",
"214 819 OFFCURVE",
"200 805 QCURVE SMOOTH",
"195 800 OFFCURVE",
"184 788 OFFCURVE",
"177 781 QCURVE",
"170 774 OFFCURVE",
"165 759 QCURVE SMOOTH",
"160 743 LINE",
"243 743 LINE SMOOTH",
"294 743 OFFCURVE",
"457 746 OFFCURVE",
"501 749 QCURVE SMOOTH",
"516 750 OFFCURVE",
"534 765 QCURVE SMOOTH",
"550 779 OFFCURVE",
"558 794 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 016A;
},
{
glyphname = amacron;
lastChange = "2019-10-02 11:12:24 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"381 523 OFFCURVE",
"384 528 QCURVE",
"384 560 OFFCURVE",
"324 593 QCURVE",
"119 581 OFFCURVE",
"104 582 QCURVE SMOOTH",
"84 583 OFFCURVE",
"66 572 QCURVE SMOOTH",
"52 563 OFFCURVE",
"50 543 QCURVE SMOOTH",
"49 543 OFFCURVE",
"54 532 QCURVE",
"54 497 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"427 255 LINE",
"423 274 OFFCURVE",
"415 281 QCURVE",
"404 291 OFFCURVE",
"386 319 OFFCURVE",
"372 356 OFFCURVE",
"368 365 QCURVE SMOOTH",
"358 388 OFFCURVE",
"318 416 OFFCURVE",
"292 419 QCURVE SMOOTH",
"274 421 OFFCURVE",
"255 417 QCURVE SMOOTH",
"162 398 OFFCURVE",
"120 330 QCURVE SMOOTH",
"69 250 OFFCURVE",
"59 172 QCURVE SMOOTH",
"57 157 OFFCURVE",
"57 149 QCURVE",
"56 109 OFFCURVE",
"73 54 QCURVE SMOOTH",
"83 21 OFFCURVE",
"140 -16 OFFCURVE",
"180 -20 QCURVE SMOOTH",
"243 -26 OFFCURVE",
"298 25 QCURVE",
"332 61 LINE",
"350 81 OFFCURVE",
"356 87 QCURVE",
"380 63 LINE",
"410 32 LINE",
"423 22 OFFCURVE",
"435 20 QCURVE SMOOTH",
"448 18 OFFCURVE",
"458 26 QCURVE SMOOTH",
"469 36 OFFCURVE",
"473 49 QCURVE SMOOTH",
"474 56 OFFCURVE",
"472 66 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"307 282 OFFCURVE",
"306 275 QCURVE SMOOTH",
"301 238 OFFCURVE",
"276 171 OFFCURVE",
"254 133 QCURVE SMOOTH",
"238 108 OFFCURVE",
"214 90 QCURVE SMOOTH",
"206 84 OFFCURVE",
"181 81 OFFCURVE",
"171 84 QCURVE SMOOTH",
"151 90 OFFCURVE",
"155 123 QCURVE SMOOTH",
"163 185 OFFCURVE",
"212 280 OFFCURVE",
"257 314 QCURVE SMOOTH",
"273 326 OFFCURVE",
"287 324 QCURVE SMOOTH",
"300 322 OFFCURVE",
"311 300 OFFCURVE",
"309 287 QCURVE"
);
}
);
width = 530;
}
);
leftKerningGroup = a;
rightKerningGroup = a;
unicode = 0101;
},
{
glyphname = emacron;
lastChange = "2019-10-02 11:10:05 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"406 553 OFFCURVE",
"418 570 OFFCURVE",
"418 580 QCURVE SMOOTH",
"418 591 OFFCURVE",
"411 600 QCURVE SMOOTH",
"385 639 OFFCURVE",
"114 616 QCURVE",
"110 615 OFFCURVE",
"86 605 OFFCURVE",
"77 598 QCURVE SMOOTH",
"67 591 OFFCURVE",
"67 577 QCURVE SMOOTH",
"67 571 OFFCURVE",
"71 563 QCURVE SMOOTH",
"83 544 OFFCURVE",
"347 547 OFFCURVE",
"374 547 QCURVE SMOOTH",
"384 547 OFFCURVE",
"395 550 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"304 73 OFFCURVE",
"258 67 QCURVE",
"253 65 OFFCURVE",
"247 65 QCURVE SMOOTH",
"214 65 OFFCURVE",
"193 100 QCURVE SMOOTH",
"188 107 OFFCURVE",
"187 117 QCURVE SMOOTH",
"186 125 OFFCURVE",
"197 140 OFFCURVE",
"208 143 QCURVE",
"219 147 OFFCURVE",
"229 148 QCURVE",
"246 152 OFFCURVE",
"253 156 QCURVE SMOOTH",
"303 180 OFFCURVE",
"379 232 OFFCURVE",
"403 272 QCURVE SMOOTH",
"417 297 OFFCURVE",
"416 320 QCURVE SMOOTH",
"415 353 OFFCURVE",
"391 378 QCURVE SMOOTH",
"349 421 OFFCURVE",
"283 436 QCURVE SMOOTH",
"270 439 OFFCURVE",
"258 440 QCURVE SMOOTH",
"228 442 OFFCURVE",
"193 421 QCURVE SMOOTH",
"174 410 OFFCURVE",
"146 382 OFFCURVE",
"125 357 QCURVE SMOOTH",
"107 334 LINE SMOOTH",
"64 283 OFFCURVE",
"63 203 QCURVE SMOOTH",
"62 125 OFFCURVE",
"108 52 QCURVE SMOOTH",
"132 14 OFFCURVE",
"212 -27 OFFCURVE",
"255 -27 QCURVE SMOOTH",
"293 -27 OFFCURVE",
"362 4 OFFCURVE",
"387 36 QCURVE SMOOTH",
"422 79 OFFCURVE",
"438 145 QCURVE",
"403 125 LINE SMOOTH",
"363 101 OFFCURVE",
"339 89 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"272 347 OFFCURVE",
"281 343 OFFCURVE",
"284 341 QCURVE",
"288 337 OFFCURVE",
"288 332 QCURVE SMOOTH",
"288 329 OFFCURVE",
"286 327 QCURVE",
"278 305 OFFCURVE",
"240 283 OFFCURVE",
"209 270 QCURVE",
"216 325 OFFCURVE",
"270 346 QCURVE"
);
}
);
width = 530;
}
);
unicode = 0113;
},
{
glyphname = imacron;
lastChange = "2019-12-27 09:51:31 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"23 523 OFFCURVE",
"112 513 QCURVE SMOOTH",
"180 506 OFFCURVE",
"228 530 QCURVE SMOOTH",
"236 534 OFFCURVE",
"261 551 OFFCURVE",
"263 555 QCURVE",
"261 560 OFFCURVE",
"238 576 OFFCURVE",
"229 578 QCURVE SMOOTH",
"172 589 OFFCURVE",
"125 593 QCURVE SMOOTH",
"112 594 OFFCURVE",
"86 594 QCURVE SMOOTH",
"46 594 OFFCURVE",
"11 590 QCURVE SMOOTH",
"1 589 OFFCURVE",
"-19 570 OFFCURVE",
"-19 562 QCURVE SMOOTH",
"-19 554 OFFCURVE",
"-5 534 OFFCURVE",
"3 530 QCURVE"
);
},
{
closed = 1;
nodes = (
"118 424 OFFCURVE",
"105 424 QCURVE SMOOTH",
"86 424 OFFCURVE",
"60 397 OFFCURVE",
"60 376 QCURVE SMOOTH",
"60 354 OFFCURVE",
"63 321 OFFCURVE",
"63 310 QCURVE SMOOTH",
"65 258 LINE SMOOTH",
"70 120 OFFCURVE",
"79 51 QCURVE",
"80 30 OFFCURVE",
"93 7 QCURVE SMOOTH",
"104 -13 OFFCURVE",
"124 -13 QCURVE SMOOTH",
"145 -13 OFFCURVE",
"157 10 QCURVE SMOOTH",
"167 29 OFFCURVE",
"167 54 QCURVE",
"168 77 OFFCURVE",
"168 121 QCURVE SMOOTH",
"168 188 LINE",
"170 188 LINE",
"170 358 LINE SMOOTH",
"170 402 OFFCURVE",
"128 419 QCURVE"
);
}
);
width = 240;
}
);
unicode = 012B;
},
{
glyphname = omacron;
lastChange = "2019-10-02 11:05:16 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"423 535 LINE",
"90 593 OFFCURVE",
"66 533 QCURVE",
"53 522 OFFCURVE",
"53 505 QCURVE SMOOTH",
"53 495 OFFCURVE",
"64 479 OFFCURVE",
"75 475 QCURVE",
"89 470 OFFCURVE",
"369 480 OFFCURVE",
"413 480 QCURVE",
"424 481 OFFCURVE",
"439 496 OFFCURVE",
"439 506 QCURVE SMOOTH",
"439 512 OFFCURVE",
"436 517 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"137 356 OFFCURVE",
"77 323 OFFCURVE",
"68 283 QCURVE SMOOTH",
"61 259 OFFCURVE",
"57 227 QCURVE",
"51 199 LINE",
"47 141 OFFCURVE",
"99 50 OFFCURVE",
"185 1 OFFCURVE",
"233 1 QCURVE SMOOTH",
"274 1 OFFCURVE",
"311 23 QCURVE SMOOTH",
"363 55 OFFCURVE",
"404 118 QCURVE SMOOTH",
"441 173 OFFCURVE",
"441 224 QCURVE SMOOTH",
"441 272 OFFCURVE",
"405 307 QCURVE SMOOTH",
"341 371 OFFCURVE",
"244 371 QCURVE SMOOTH",
"219 371 OFFCURVE",
"184 365 QCURVE"
);
},
{
closed = 1;
nodes = (
"296 151 OFFCURVE",
"267 116 OFFCURVE",
"252 104 QCURVE",
"245 96 OFFCURVE",
"222 84 OFFCURVE",
"215 84 QCURVE SMOOTH",
"199 84 OFFCURVE",
"183 126 QCURVE",
"180 136 OFFCURVE",
"180 159 QCURVE SMOOTH",
"180 175 LINE",
"172 178 LINE",
"179 200 OFFCURVE",
"183 211 QCURVE",
"201 267 OFFCURVE",
"219 317 QCURVE SMOOTH",
"220 320 OFFCURVE",
"235 323 OFFCURVE",
"244 323 QCURVE SMOOTH",
"251 323 OFFCURVE",
"255 322 QCURVE SMOOTH",
"287 312 OFFCURVE",
"326 257 OFFCURVE",
"326 225 QCURVE SMOOTH",
"326 186 OFFCURVE",
"301 158 QCURVE SMOOTH"
);
}
);
width = 500;
}
);
unicode = 014D;
},
{
glyphname = umacron;
lastChange = "2019-10-02 11:08:11 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"81 543 OFFCURVE",
"97 519 OFFCURVE",
"100 517 QCURVE SMOOTH",
"145 487 OFFCURVE",
"195 497 QCURVE",
"257 499 OFFCURVE",
"378 511 QCURVE SMOOTH",
"418 515 OFFCURVE",
"435 522 QCURVE",
"445 527 OFFCURVE",
"449 531 QCURVE",
"461 538 OFFCURVE",
"465 545 QCURVE SMOOTH",
"473 558 OFFCURVE",
"451 567 QCURVE",
"448 569 OFFCURVE",
"434 573 QCURVE SMOOTH",
"363 593 OFFCURVE",
"208 603 OFFCURVE",
"116 591 QCURVE SMOOTH",
"100 589 OFFCURVE",
"87 582 QCURVE",
"70 569 OFFCURVE",
"76 555 QCURVE"
);
},
{
closed = 1;
nodes = (
"479 74 LINE SMOOTH",
"476 83 OFFCURVE",
"468 119 OFFCURVE",
"465 133 QCURVE",
"455 188 OFFCURVE",
"455 239 QCURVE",
"451 269 OFFCURVE",
"460 305 QCURVE SMOOTH",
"461 309 OFFCURVE",
"461 316 QCURVE",
"461 342 OFFCURVE",
"426 369 OFFCURVE",
"395 369 QCURVE",
"375 369 OFFCURVE",
"352 347 OFFCURVE",
"347 322 QCURVE",
"342 298 LINE",
"358 212 OFFCURVE",
"279 133 QCURVE",
"269 123 OFFCURVE",
"224 118 QCURVE",
"217 118 OFFCURVE",
"192 147 OFFCURVE",
"192 235 OFFCURVE",
"209 293 QCURVE",
"218 319 LINE",
"218 326 OFFCURVE",
"217 329 QCURVE SMOOTH",
"211 346 OFFCURVE",
"175 375 OFFCURVE",
"153 375 QCURVE",
"131 375 OFFCURVE",
"103 347 OFFCURVE",
"98 323 QCURVE SMOOTH",
"96 313 OFFCURVE",
"86 235 OFFCURVE",
"86 201 QCURVE",
"86 144 OFFCURVE",
"105 96 QCURVE",
"119 58 OFFCURVE",
"178 12 OFFCURVE",
"215 12 QCURVE",
"263 6 OFFCURVE",
"301 47 QCURVE SMOOTH",
"314 61 LINE",
"327 74 OFFCURVE",
"327 74 QCURVE SMOOTH",
"332 79 OFFCURVE",
"353 106 OFFCURVE",
"357 98 QCURVE SMOOTH",
"390 38 LINE SMOOTH",
"409 3 OFFCURVE",
"448 4 QCURVE",
"453 4 OFFCURVE",
"465 6 QCURVE",
"476 8 OFFCURVE",
"488 22 OFFCURVE",
"488 33 QCURVE",
"488 39 OFFCURVE",
"488 43 QCURVE"
);
}
);
width = 550;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 016B;
},
{
glyphname = fraction;
lastChange = "2019-08-23 23:14:32 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"569 776 OFFCURVE",
"565 776 QCURVE SMOOTH",
"552 776 OFFCURVE",
"529 750 OFFCURVE",
"513 724 QCURVE SMOOTH",
"503 708 OFFCURVE",
"494 695 QCURVE SMOOTH",
"482 677 OFFCURVE",
"474 668 QCURVE SMOOTH",
"216 378 OFFCURVE",
"100 156 QCURVE SMOOTH",
"89 135 OFFCURVE",
"58 88 OFFCURVE",
"45 63 QCURVE",
"20 18 LINE",
"38 -6 OFFCURVE",
"58 -6 QCURVE SMOOTH",
"93 -7 OFFCURVE",
"142 53 QCURVE SMOOTH",
"266 207 LINE SMOOTH",
"441 416 OFFCURVE",
"561 568 QCURVE SMOOTH",
"572 582 OFFCURVE",
"596 636 OFFCURVE",
"600 657 QCURVE SMOOTH",
"606 688 OFFCURVE",
"607 707 QCURVE SMOOTH",
"610 755 OFFCURVE",
"573 774 QCURVE"
);
}
);
width = 627;
}
);
unicode = 2044;
},
{
glyphname = oneeighth;
lastChange = "2019-08-23 23:11:42 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"605 656 OFFCURVE",
"557 664 QCURVE SMOOTH",
"545 666 OFFCURVE",
"540 663 QCURVE",
"519 660 OFFCURVE",
"491 632 OFFCURVE",
"472 604 QCURVE SMOOTH",
"457 582 OFFCURVE",
"453 577 QCURVE SMOOTH",
"356 456 OFFCURVE",
"246 301 QCURVE SMOOTH",
"192 225 OFFCURVE",
"128 128 QCURVE",
"123 122 OFFCURVE",
"117 112 OFFCURVE",
"114 108 QCURVE",
"108 99 OFFCURVE",
"108 84 QCURVE SMOOTH",
"108 78 OFFCURVE",
"109 75 QCURVE",
"110 71 OFFCURVE",
"126 62 OFFCURVE",
"131 58 QCURVE",
"138 62 OFFCURVE",
"163 76 OFFCURVE",
"170 84 QCURVE",
"246 197 OFFCURVE",
"292 253 QCURVE SMOOTH",
"374 358 OFFCURVE",
"464 473 QCURVE SMOOTH",
"575 615 LINE SMOOTH",
"585 628 OFFCURVE",
"585 640 QCURVE SMOOTH",
"585 657 OFFCURVE",
"590 657 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"410 175 LINE SMOOTH",
"390 135 OFFCURVE",
"372 90 OFFCURVE",
"371 61 QCURVE",
"370 54 OFFCURVE",
"370 49 QCURVE SMOOTH",
"370 22 OFFCURVE",
"403 -26 OFFCURVE",
"459 -54 OFFCURVE",
"489 -54 QCURVE SMOOTH",
"524 -54 OFFCURVE",
"577 -10 OFFCURVE",
"589 27 QCURVE",
"592 34 OFFCURVE",
"603 69 OFFCURVE",
"612 109 OFFCURVE",
"612 133 QCURVE SMOOTH",
"612 153 OFFCURVE",
"596 205 OFFCURVE",
"584 217 QCURVE",
"577 226 OFFCURVE",
"560 242 OFFCURVE",
"560 244 QCURVE SMOOTH",
"560 246 OFFCURVE",
"575 257 OFFCURVE",
"583 264 QCURVE SMOOTH",
"592 272 OFFCURVE",
"606 314 OFFCURVE",
"606 329 QCURVE SMOOTH",
"606 336 OFFCURVE",
"604 339 QCURVE SMOOTH",
"595 353 OFFCURVE",
"561 379 OFFCURVE",
"544 384 QCURVE SMOOTH",
"520 391 OFFCURVE",
"502 390 QCURVE SMOOTH",
"474 388 OFFCURVE",
"425 361 OFFCURVE",
"401 333 QCURVE",
"391 314 OFFCURVE",
"380 290 OFFCURVE",
"380 276 QCURVE SMOOTH",
"380 258 OFFCURVE",
"390 242 QCURVE",
"396 229 OFFCURVE",
"417 216 OFFCURVE",
"433 211 QCURVE",
"431 207 OFFCURVE",
"420 195 OFFCURVE",
"419 193 QCURVE"
);
},
{
closed = 1;
nodes = (
"539 351 OFFCURVE",
"550 341 OFFCURVE",
"550 334 QCURVE SMOOTH",
"550 329 OFFCURVE",
"548 323 QCURVE SMOOTH",
"531 273 OFFCURVE",
"472 249 QCURVE SMOOTH",
"467 247 OFFCURVE",
"461 247 QCURVE SMOOTH",
"455 247 OFFCURVE",
"448 257 OFFCURVE",
"448 266 QCURVE SMOOTH",
"448 290 OFFCURVE",
"469 329 OFFCURVE",
"507 351 OFFCURVE",
"530 351 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"546 103 OFFCURVE",
"526 52 OFFCURVE",
"509 18 QCURVE SMOOTH",
"503 6 OFFCURVE",
"486 -12 OFFCURVE",
"476 -12 QCURVE SMOOTH",
"470 -12 OFFCURVE",
"465 -10 QCURVE",
"455 -3 OFFCURVE",
"440 23 OFFCURVE",
"439 38 QCURVE SMOOTH",
"437 61 OFFCURVE",
"436 81 QCURVE SMOOTH",
"433 134 OFFCURVE",
"457 167 QCURVE SMOOTH",
"469 184 OFFCURVE",
"498 208 OFFCURVE",
"527 227 QCURVE",
"529 226 OFFCURVE",
"543 189 OFFCURVE",
"553 145 OFFCURVE",
"551 129 QCURVE"
);
},
{
closed = 1;
nodes = (
"185 549 OFFCURVE",
"188 507 QCURVE SMOOTH",
"190 475 OFFCURVE",
"195 459 QCURVE SMOOTH",
"202 438 OFFCURVE",
"211 402 OFFCURVE",
"214 390 QCURVE SMOOTH",
"216 383 OFFCURVE",
"219 373 OFFCURVE",
"220 369 QCURVE",
"222 364 OFFCURVE",
"237 355 OFFCURVE",
"243 355 QCURVE",
"248 356 OFFCURVE",
"261 366 OFFCURVE",
"264 371 QCURVE",
"273 392 OFFCURVE",
"270 409 QCURVE",
"244 631 OFFCURVE",
"246 659 QCURVE",
"248 677 OFFCURVE",
"248 683 QCURVE SMOOTH",
"248 708 OFFCURVE",
"230 735 OFFCURVE",
"215 735 QCURVE SMOOTH",
"201 735 OFFCURVE",
"181 723 QCURVE SMOOTH",
"85 664 OFFCURVE",
"36 582 QCURVE SMOOTH",
"30 572 OFFCURVE",
"30 562 QCURVE SMOOTH",
"30 545 OFFCURVE",
"45 528 QCURVE",
"55 518 OFFCURVE",
"62 518 QCURVE SMOOTH",
"68 518 OFFCURVE",
"91 532 OFFCURVE",
"99 535 QCURVE",
"107 539 OFFCURVE",
"133 569 QCURVE SMOOTH",
"144 582 OFFCURVE",
"165 603 OFFCURVE",
"170 603 QCURVE SMOOTH",
"175 603 OFFCURVE",
"175 595 QCURVE"
);
}
);
width = 642;
}
);
unicode = 215B;
},
{
glyphname = threeeighths;
lastChange = "2019-08-23 23:13:44 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"580 672 OFFCURVE",
"532 680 QCURVE SMOOTH",
"520 682 OFFCURVE",
"515 679 QCURVE",
"494 676 OFFCURVE",
"466 648 OFFCURVE",
"447 620 QCURVE SMOOTH",
"432 598 OFFCURVE",
"428 593 QCURVE SMOOTH",
"331 472 OFFCURVE",
"221 317 QCURVE SMOOTH",
"167 241 OFFCURVE",
"103 144 QCURVE",
"98 138 OFFCURVE",
"92 128 OFFCURVE",
"89 124 QCURVE",
"83 115 OFFCURVE",
"83 100 QCURVE SMOOTH",
"83 94 OFFCURVE",
"84 91 QCURVE",
"85 87 OFFCURVE",
"101 78 OFFCURVE",
"106 74 QCURVE",
"113 78 OFFCURVE",
"138 92 OFFCURVE",
"145 100 QCURVE",
"221 213 OFFCURVE",
"267 269 QCURVE SMOOTH",
"349 374 OFFCURVE",
"439 489 QCURVE SMOOTH",
"550 631 LINE SMOOTH",
"560 644 OFFCURVE",
"560 656 QCURVE SMOOTH",
"560 673 OFFCURVE",
"565 673 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"404 201 LINE SMOOTH",
"384 161 OFFCURVE",
"366 116 OFFCURVE",
"365 87 QCURVE",
"364 80 OFFCURVE",
"364 75 QCURVE SMOOTH",
"364 48 OFFCURVE",
"397 0 OFFCURVE",
"453 -28 OFFCURVE",
"483 -28 QCURVE SMOOTH",
"518 -28 OFFCURVE",
"571 16 OFFCURVE",
"583 53 QCURVE",
"586 60 OFFCURVE",
"597 95 OFFCURVE",
"606 135 OFFCURVE",
"606 159 QCURVE SMOOTH",
"606 179 OFFCURVE",
"590 231 OFFCURVE",
"578 243 QCURVE",
"571 252 OFFCURVE",
"554 268 OFFCURVE",
"554 270 QCURVE SMOOTH",
"554 272 OFFCURVE",
"569 283 OFFCURVE",
"577 290 QCURVE SMOOTH",
"586 298 OFFCURVE",
"600 340 OFFCURVE",
"600 355 QCURVE SMOOTH",
"600 362 OFFCURVE",
"598 365 QCURVE SMOOTH",
"589 379 OFFCURVE",
"555 405 OFFCURVE",
"538 410 QCURVE SMOOTH",
"514 417 OFFCURVE",
"496 416 QCURVE SMOOTH",
"468 414 OFFCURVE",
"419 387 OFFCURVE",
"395 359 QCURVE",
"385 340 OFFCURVE",
"374 316 OFFCURVE",
"374 302 QCURVE SMOOTH",
"374 284 OFFCURVE",
"384 268 QCURVE",
"390 255 OFFCURVE",
"411 242 OFFCURVE",
"427 237 QCURVE",
"425 233 OFFCURVE",
"414 221 OFFCURVE",
"413 219 QCURVE"
);
},
{
closed = 1;
nodes = (
"533 377 OFFCURVE",
"544 367 OFFCURVE",
"544 360 QCURVE SMOOTH",
"544 355 OFFCURVE",
"542 349 QCURVE SMOOTH",
"525 299 OFFCURVE",
"466 275 QCURVE SMOOTH",
"461 273 OFFCURVE",
"455 273 QCURVE SMOOTH",
"449 273 OFFCURVE",
"442 283 OFFCURVE",
"442 292 QCURVE SMOOTH",
"442 316 OFFCURVE",
"463 355 OFFCURVE",
"501 377 OFFCURVE",
"524 377 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"540 129 OFFCURVE",
"520 78 OFFCURVE",
"503 44 QCURVE SMOOTH",
"497 32 OFFCURVE",
"480 14 OFFCURVE",
"470 14 QCURVE SMOOTH",
"464 14 OFFCURVE",
"459 16 QCURVE",
"449 23 OFFCURVE",
"434 49 OFFCURVE",
"433 64 QCURVE SMOOTH",
"431 87 OFFCURVE",
"430 107 QCURVE SMOOTH",
"427 160 OFFCURVE",
"451 193 QCURVE SMOOTH",
"463 210 OFFCURVE",
"492 234 OFFCURVE",
"521 253 QCURVE",
"523 252 OFFCURVE",
"537 215 OFFCURVE",
"547 171 OFFCURVE",
"545 155 QCURVE"
);
},
{
closed = 1;
nodes = (
"206 394 OFFCURVE",
"232 428 QCURVE SMOOTH",
"265 472 OFFCURVE",
"265 503 QCURVE SMOOTH",
"265 524 OFFCURVE",
"240 566 OFFCURVE",
"213 592 QCURVE",
"224 610 LINE SMOOTH",
"238 633 OFFCURVE",
"247 652 QCURVE",
"249 656 OFFCURVE",
"249 664 QCURVE SMOOTH",
"249 679 OFFCURVE",
"227 709 OFFCURVE",
"211 716 QCURVE SMOOTH",
"192 724 OFFCURVE",
"167 724 QCURVE SMOOTH",
"138 724 OFFCURVE",
"81 708 OFFCURVE",
"66 693 QCURVE SMOOTH",
"61 688 OFFCURVE",
"61 681 QCURVE SMOOTH",
"61 674 OFFCURVE",
"72 662 OFFCURVE",
"81 661 QCURVE",
"109 655 OFFCURVE",
"144 651 QCURVE",
"143 645 OFFCURVE",
"141 627 OFFCURVE",
"137 623 QCURVE",
"120 608 LINE",
"106 598 OFFCURVE",
"102 593 QCURVE",
"95 586 OFFCURVE",
"95 577 QCURVE SMOOTH",
"95 569 OFFCURVE",
"106 556 OFFCURVE",
"116 553 QCURVE",
"142 548 LINE",
"160 546 OFFCURVE",
"167 544 QCURVE",
"189 540 OFFCURVE",
"212 519 OFFCURVE",
"212 505 QCURVE SMOOTH",
"212 495 OFFCURVE",
"204 481 QCURVE SMOOTH",
"186 450 OFFCURVE",
"159 431 QCURVE SMOOTH",
"136 415 OFFCURVE",
"101 397 QCURVE SMOOTH",
"95 394 OFFCURVE",
"86 389 OFFCURVE",
"82 387 QCURVE SMOOTH",
"78 385 OFFCURVE",
"60 376 OFFCURVE",
"46 362 OFFCURVE",
"48 348 QCURVE",
"74 340 OFFCURVE",
"96 340 QCURVE SMOOTH",
"133 340 OFFCURVE",
"160 360 QCURVE SMOOTH"
);
}
);
width = 642;
}
);
unicode = 215C;
},
{
glyphname = periodcentered;
lastChange = "2019-08-23 23:39:10 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"129 267 OFFCURVE",
"104 294 OFFCURVE",
"87 294 QCURVE SMOOTH",
"63 294 OFFCURVE",
"21 262 OFFCURVE",
"10 237 QCURVE",
"10 232 OFFCURVE",
"12 216 OFFCURVE",
"13 212 QCURVE",
"26 184 OFFCURVE",
"62 178 QCURVE",
"63 178 OFFCURVE",
"68 178 QCURVE SMOOTH",
"83 178 OFFCURVE",
"112 195 OFFCURVE",
"129 225 OFFCURVE",
"129 243 QCURVE SMOOTH"
);
}
);
width = 149;
}
);
unicode = 00B7;
},
{
glyphname = quotesinglbase;
layers = (
{
components = (
{
name = comma;
}
);
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
width = 600;
}
);
unicode = 201A;
},
{
glyphname = guillemetleft;
lastChange = "2019-08-23 23:26:06 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"280 216 OFFCURVE",
"232 262 OFFCURVE",
"189 300 QCURVE SMOOTH",
"170 317 OFFCURVE",
"170 330 QCURVE SMOOTH",
"170 342 OFFCURVE",
"187 359 QCURVE",
"217 386 LINE SMOOTH",
"275 442 OFFCURVE",
"332 499 QCURVE SMOOTH",
"345 512 OFFCURVE",
"345 545 QCURVE",
"344 561 LINE",
"343 570 OFFCURVE",
"322 597 OFFCURVE",
"318 596 QCURVE",
"304 591 OFFCURVE",
"276 567 OFFCURVE",
"273 564 QCURVE",
"267 559 OFFCURVE",
"254 543 OFFCURVE",
"250 538 QCURVE",
"210 497 LINE SMOOTH",
"151 433 OFFCURVE",
"73 351 QCURVE SMOOTH",
"54 331 OFFCURVE",
"54 303 QCURVE SMOOTH",
"54 285 OFFCURVE",
"70 250 OFFCURVE",
"85 237 QCURVE",
"101 221 OFFCURVE",
"101 221 QCURVE",
"123 199 OFFCURVE",
"142 184 QCURVE SMOOTH",
"177 157 OFFCURVE",
"224 133 QCURVE SMOOTH",
"276 105 OFFCURVE",
"305 83 QCURVE SMOOTH",
"309 80 OFFCURVE",
"315 80 QCURVE SMOOTH",
"321 80 OFFCURVE",
"325 83 QCURVE",
"331 87 OFFCURVE",
"332 92 QCURVE",
"333 95 OFFCURVE",
"337 108 OFFCURVE",
"337 112 QCURVE SMOOTH",
"337 116 OFFCURVE",
"336 118 QCURVE",
"333 126 OFFCURVE",
"324 153 OFFCURVE",
"315 173 OFFCURVE",
"302 189 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"389 357 OFFCURVE",
"425 379 QCURVE SMOOTH",
"485 415 OFFCURVE",
"505 435 QCURVE SMOOTH",
"528 458 OFFCURVE",
"528 480 QCURVE SMOOTH",
"528 495 OFFCURVE",
"515 507 QCURVE",
"489 528 OFFCURVE",
"474 528 QCURVE SMOOTH",
"465 528 OFFCURVE",
"445 516 OFFCURVE",
"430 501 QCURVE SMOOTH",
"355 424 OFFCURVE",
"290 377 QCURVE SMOOTH",
"260 355 OFFCURVE",
"261 331 QCURVE SMOOTH",
"262 312 OFFCURVE",
"282 292 QCURVE",
"289 286 OFFCURVE",
"357 225 OFFCURVE",
"390 201 QCURVE SMOOTH",
"404 191 OFFCURVE",
"432 185 QCURVE",
"453 179 LINE",
"475 204 LINE",
"460 219 LINE SMOOTH",
"422 257 OFFCURVE",
"415 265 QCURVE SMOOTH",
"401 280 LINE SMOOTH",
"386 297 OFFCURVE",
"367 320 OFFCURVE",
"367 331 QCURVE SMOOTH",
"367 340 OFFCURVE",
"376 347 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 00AB;
},
{
glyphname = guillemetright;
lastChange = "2019-08-23 23:26:54 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"245 479 OFFCURVE",
"171 543 QCURVE SMOOTH",
"139 571 OFFCURVE",
"110 570 QCURVE SMOOTH",
"87 569 OFFCURVE",
"63 553 QCURVE",
"67 546 OFFCURVE",
"84 517 OFFCURVE",
"92 509 QCURVE",
"118 478 OFFCURVE",
"167 439 QCURVE SMOOTH",
"172 435 OFFCURVE",
"194 417 OFFCURVE",
"210 400 OFFCURVE",
"210 391 QCURVE SMOOTH",
"210 382 OFFCURVE",
"205 376 QCURVE SMOOTH",
"189 359 OFFCURVE",
"148 319 QCURVE SMOOTH",
"124 296 OFFCURVE",
"93 268 OFFCURVE",
"84 253 QCURVE",
"78 244 OFFCURVE",
"70 213 OFFCURVE",
"67 205 QCURVE",
"85 202 OFFCURVE",
"101 202 QCURVE SMOOTH",
"131 202 OFFCURVE",
"178 222 OFFCURVE",
"200 243 QCURVE SMOOTH",
"237 278 OFFCURVE",
"280 315 OFFCURVE",
"305 330 QCURVE SMOOTH",
"324 341 OFFCURVE",
"340 355 OFFCURVE",
"340 364 QCURVE SMOOTH",
"340 376 OFFCURVE",
"324 393 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"397 512 OFFCURVE",
"333 566 QCURVE SMOOTH",
"327 571 OFFCURVE",
"312 571 QCURVE",
"290 570 LINE",
"276 568 OFFCURVE",
"268 568 QCURVE",
"273 547 LINE",
"277 519 OFFCURVE",
"286 509 QCURVE SMOOTH",
"314 474 OFFCURVE",
"382 417 QCURVE SMOOTH",
"395 406 OFFCURVE",
"409 390 OFFCURVE",
"409 382 QCURVE SMOOTH",
"409 372 OFFCURVE",
"402 364 QCURVE",
"374 327 OFFCURVE",
"320 273 QCURVE SMOOTH",
"288 241 OFFCURVE",
"247 196 OFFCURVE",
"229 170 QCURVE",
"221 157 OFFCURVE",
"208 119 OFFCURVE",
"204 110 QCURVE",
"219 99 LINE",
"248 114 LINE",
"251 116 OFFCURVE",
"294 137 OFFCURVE",
"310 152 QCURVE SMOOTH",
"329 170 OFFCURVE",
"405 236 QCURVE",
"454 275 OFFCURVE",
"500 319 QCURVE SMOOTH",
"524 342 OFFCURVE",
"524 363 QCURVE SMOOTH",
"524 383 OFFCURVE",
"504 403 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 00BB;
},
{
glyphname = CR;
lastChange = "2019-08-24 02:06:19 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
width = 0;
}
);
note = controlCR;
unicode = 000D;
},
{
glyphname = euro;
lastChange = "2019-08-23 23:28:26 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"552 225 OFFCURVE",
"546 225 QCURVE SMOOTH",
"535 225 OFFCURVE",
"521 219 QCURVE SMOOTH",
"491 206 OFFCURVE",
"476 200 QCURVE SMOOTH",
"441 186 OFFCURVE",
"424 178 QCURVE SMOOTH",
"404 169 OFFCURVE",
"385 171 QCURVE SMOOTH",
"362 173 OFFCURVE",
"328 198 OFFCURVE",
"309 228 QCURVE",
"317 231 OFFCURVE",
"347 243 OFFCURVE",
"357 248 QCURVE",
"417 274 OFFCURVE",
"457 297 QCURVE",
"461 299 OFFCURVE",
"467 311 OFFCURVE",
"467 317 QCURVE SMOOTH",
"467 321 LINE",
"466 326 OFFCURVE",
"452 337 OFFCURVE",
"446 337 QCURVE SMOOTH",
"408 337 OFFCURVE",
"374 330 QCURVE",
"354 327 OFFCURVE",
"296 314 QCURVE",
"289 313 OFFCURVE",
"273 309 QCURVE",
"267 347 OFFCURVE",
"267 344 QCURVE",
"266 354 OFFCURVE",
"262 380 OFFCURVE",
"262 388 QCURVE SMOOTH",
"262 398 OFFCURVE",
"273 406 OFFCURVE",
"289 406 QCURVE",
"318 404 LINE",
"330 403 LINE",
"347 403 OFFCURVE",
"379 412 OFFCURVE",
"403 421 QCURVE",
"409 423 OFFCURVE",
"427 430 OFFCURVE",
"439 433 QCURVE",
"445 435 OFFCURVE",
"458 448 OFFCURVE",
"458 453 QCURVE SMOOTH",
"458 459 OFFCURVE",
"448 472 OFFCURVE",
"442 476 QCURVE",
"437 480 OFFCURVE",
"418 481 OFFCURVE",
"415 481 QCURVE",
"314 486 LINE",
"316 491 OFFCURVE",
"325 509 OFFCURVE",
"329 513 QCURVE SMOOTH",
"343 527 OFFCURVE",
"343 527 QCURVE",
"378 561 OFFCURVE",
"431 593 OFFCURVE",
"469 590 QCURVE",
"475 590 OFFCURVE",
"488 597 OFFCURVE",
"504 611 OFFCURVE",
"511 615 QCURVE",
"505 621 OFFCURVE",
"480 645 OFFCURVE",
"469 649 QCURVE SMOOTH",
"455 654 OFFCURVE",
"431 654 QCURVE SMOOTH",
"415 654 OFFCURVE",
"408 653 QCURVE SMOOTH",
"392 651 OFFCURVE",
"384 651 QCURVE",
"357 649 OFFCURVE",
"324 642 OFFCURVE",
"312 633 QCURVE SMOOTH",
"257 592 OFFCURVE",
"214 524 QCURVE",
"202 507 OFFCURVE",
"180 492 OFFCURVE",
"164 492 QCURVE SMOOTH",
"156 492 OFFCURVE",
"152 493 QCURVE",
"147 494 OFFCURVE",
"137 494 QCURVE SMOOTH",
"79 494 OFFCURVE",
"39 446 QCURVE",
"34 439 OFFCURVE",
"26 416 OFFCURVE",
"26 407 QCURVE SMOOTH",
"26 400 OFFCURVE",
"29 395 QCURVE",
"35 388 OFFCURVE",
"60 380 OFFCURVE",
"73 380 QCURVE SMOOTH",
"88 380 OFFCURVE",
"116 387 OFFCURVE",
"137 395 QCURVE",
"164 404 LINE",
"164 386 OFFCURVE",
"169 351 QCURVE",
"175 295 OFFCURVE",
"173 294 QCURVE",
"147 289 OFFCURVE",
"85 244 OFFCURVE",
"82 219 QCURVE",
"94 214 OFFCURVE",
"113 214 QCURVE SMOOTH",
"142 214 OFFCURVE",
"188 222 QCURVE",
"228 158 OFFCURVE",
"333 91 OFFCURVE",
"394 91 QCURVE SMOOTH",
"457 91 OFFCURVE",
"524 127 QCURVE SMOOTH",
"548 140 OFFCURVE",
"572 184 QCURVE",
"575 190 OFFCURVE",
"564 216 OFFCURVE",
"557 222 QCURVE"
);
}
);
width = 600;
}
);
unicode = 20AC;
},
{
glyphname = minus;
lastChange = "2019-08-23 23:29:16 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"564 225 OFFCURVE",
"572 241 QCURVE",
"574 244 OFFCURVE",
"574 250 QCURVE SMOOTH",
"574 261 OFFCURVE",
"558 285 OFFCURVE",
"548 289 QCURVE SMOOTH",
"520 300 OFFCURVE",
"493 302 QCURVE",
"454 302 LINE",
"375 302 LINE SMOOTH",
"343 302 OFFCURVE",
"326 303 QCURVE SMOOTH",
"286 305 OFFCURVE",
"227 311 OFFCURVE",
"208 312 QCURVE",
"146 318 OFFCURVE",
"119 320 QCURVE",
"112 321 OFFCURVE",
"91 323 OFFCURVE",
"78 323 QCURVE",
"58 322 OFFCURVE",
"30 303 OFFCURVE",
"26 289 QCURVE SMOOTH",
"24 281 OFFCURVE",
"24 276 QCURVE SMOOTH",
"24 262 OFFCURVE",
"42 236 OFFCURVE",
"58 228 QCURVE",
"86 210 OFFCURVE",
"123 211 QCURVE SMOOTH",
"186 212 LINE SMOOTH",
"237 212 OFFCURVE",
"263 211 QCURVE SMOOTH",
"504 205 LINE",
"510 206 OFFCURVE",
"531 207 OFFCURVE",
"537 211 QCURVE"
);
}
);
width = 600;
}
);
unicode = 2212;
},
{
glyphname = emptyset;
lastChange = "2019-08-23 23:32:38 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"477 416 OFFCURVE",
"465 435 OFFCURVE",
"457 441 QCURVE",
"439 459 OFFCURVE",
"439 480 QCURVE SMOOTH",
"439 496 OFFCURVE",
"448 514 QCURVE SMOOTH",
"492 601 LINE",
"494 605 OFFCURVE",
"494 613 QCURVE SMOOTH",
"494 629 OFFCURVE",
"479 640 QCURVE",
"462 653 OFFCURVE",
"437 653 QCURVE SMOOTH",
"416 653 OFFCURVE",
"384 633 OFFCURVE",
"377 617 QCURVE",
"376 608 OFFCURVE",
"366 586 QCURVE SMOOTH",
"346 541 LINE SMOOTH",
"332 509 OFFCURVE",
"297 508 QCURVE SMOOTH",
"261 508 OFFCURVE",
"240 503 QCURVE SMOOTH",
"172 486 OFFCURVE",
"72 386 OFFCURVE",
"62 326 QCURVE SMOOTH",
"61 319 OFFCURVE",
"59 297 OFFCURVE",
"57 291 QCURVE",
"50 263 OFFCURVE",
"50 238 QCURVE SMOOTH",
"50 156 OFFCURVE",
"112 78 QCURVE SMOOTH",
"132 53 OFFCURVE",
"151 11 OFFCURVE",
"151 -12 QCURVE SMOOTH",
"132 -67 OFFCURVE",
"127 -87 QCURVE SMOOTH",
"125 -95 OFFCURVE",
"125 -98 QCURVE SMOOTH",
"125 -109 OFFCURVE",
"142 -123 OFFCURVE",
"155 -123 QCURVE SMOOTH",
"167 -123 OFFCURVE",
"177 -118 QCURVE",
"198 -110 OFFCURVE",
"214 -92 QCURVE",
"222 -82 OFFCURVE",
"250 -27 QCURVE SMOOTH",
"259 -11 LINE",
"283 -5 LINE",
"309 -3 LINE SMOOTH",
"433 11 OFFCURVE",
"485 109 QCURVE SMOOTH",
"529 187 OFFCURVE",
"529 261 QCURVE SMOOTH",
"529 340 OFFCURVE",
"479 412 QCURVE"
);
},
{
closed = 1;
nodes = (
"204 146 LINE",
"190 116 OFFCURVE",
"185 114 QCURVE",
"168 130 OFFCURVE",
"138 234 OFFCURVE",
"138 297 QCURVE SMOOTH",
"138 350 OFFCURVE",
"222 441 OFFCURVE",
"287 452 QCURVE",
"288 452 OFFCURVE",
"294 448 OFFCURVE",
"298 446 QCURVE",
"298 443 OFFCURVE",
"298 424 OFFCURVE",
"295 415 QCURVE"
);
},
{
closed = 1;
nodes = (
"385 130 OFFCURVE",
"341 82 OFFCURVE",
"300 73 QCURVE",
"299 76 OFFCURVE",
"278 70 OFFCURVE",
"278 75 QCURVE",
"299 157 OFFCURVE",
"373 346 OFFCURVE",
"403 384 QCURVE",
"426 348 OFFCURVE",
"426 274 QCURVE SMOOTH",
"426 250 OFFCURVE",
"413 201 OFFCURVE",
"400 167 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 2205;
},
{
glyphname = integral;
lastChange = "2019-08-23 23:34:47 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"100 -143 OFFCURVE",
"181 -149 QCURVE SMOOTH",
"224 -148 OFFCURVE",
"258 -131 QCURVE SMOOTH",
"401 -59 OFFCURVE",
"396 328 OFFCURVE",
"381 446 OFFCURVE",
"383 480 QCURVE SMOOTH",
"389 572 OFFCURVE",
"464 690 OFFCURVE",
"545 713 QCURVE SMOOTH",
"557 716 OFFCURVE",
"569 729 OFFCURVE",
"569 737 QCURVE SMOOTH",
"569 751 OFFCURVE",
"552 765 QCURVE SMOOTH",
"518 792 OFFCURVE",
"478 792 QCURVE SMOOTH",
"433 792 OFFCURVE",
"398 760 QCURVE SMOOTH",
"353 721 OFFCURVE",
"299 624 OFFCURVE",
"295 568 QCURVE SMOOTH",
"292 522 OFFCURVE",
"292 474 QCURVE SMOOTH",
"299 380 OFFCURVE",
"309 302 QCURVE SMOOTH",
"325 177 OFFCURVE",
"266 -21 OFFCURVE",
"171 -61 OFFCURVE",
"133 -67 QCURVE SMOOTH",
"95 -67 OFFCURVE"
);
}
);
width = 600;
}
);
unicode = 222B;
},
{
glyphname = upArrow;
lastChange = "2019-10-02 11:13:46 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"503 523 OFFCURVE",
"470 555 OFFCURVE",
"416 608 CURVE",
"385 641 OFFCURVE",
"352 674 OFFCURVE",
"317 706 CURVE",
"299 722 OFFCURVE",
"282 729 OFFCURVE",
"267 728 CURVE",
"253 726 OFFCURVE",
"238 717 OFFCURVE",
"224 702 CURVE",
"148 619 OFFCURVE",
"93 552 OFFCURVE",
"59 500 CURVE",
"57 495 OFFCURVE",
"55 487 OFFCURVE",
"55 478 CURVE",
"55 453 OFFCURVE",
"85 436 OFFCURVE",
"85 436 CURVE",
"105 431 OFFCURVE",
"119 446 OFFCURVE",
"126 453 CURVE",
"150 477 OFFCURVE",
"181 515 OFFCURVE",
"219 567 CURVE",
"226 576 OFFCURVE",
"232 583 OFFCURVE",
"237 589 CURVE",
"235 362 OFFCURVE",
"229 202 OFFCURVE",
"220 109 CURVE",
"220 94 OFFCURVE",
"214 -15 OFFCURVE",
"236 -32 CURVE",
"258 -49 OFFCURVE",
"272 -38 OFFCURVE",
"282 -30 CURVE",
"298 -15 OFFCURVE",
"309 17 OFFCURVE",
"315 68 CURVE",
"327 169 LINE",
"330 317 OFFCURVE",
"328 448 OFFCURVE",
"321 562 CURVE",
"340 547 OFFCURVE",
"360 530 OFFCURVE",
"382 510 CURVE",
"406 488 OFFCURVE",
"428 470 OFFCURVE",
"446 457 CURVE",
"465 443 OFFCURVE",
"484 430 OFFCURVE",
"503 419 CURVE",
"514 414 OFFCURVE",
"526 412 OFFCURVE",
"539 411 CURVE",
"552 410 OFFCURVE",
"559 417 OFFCURVE",
"561 434 CURVE",
"563 450 OFFCURVE",
"564 459 OFFCURVE",
"564 462 CURVE",
"564 464 OFFCURVE",
"548 480 OFFCURVE",
"516 510 CURVE"
);
}
);
width = 600;
}
);
unicode = 2191;
},
{
glyphname = northEastArrow;
lastChange = "2019-08-23 23:21:28 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"563 712 OFFCURVE",
"537 729 OFFCURVE",
"517 729 QCURVE SMOOTH",
"509 729 OFFCURVE",
"493 725 QCURVE SMOOTH",
"484 723 OFFCURVE",
"462 722 QCURVE SMOOTH",
"444 721 OFFCURVE",
"402 715 OFFCURVE",
"384 710 QCURVE",
"321 701 OFFCURVE",
"210 674 OFFCURVE",
"210 658 QCURVE SMOOTH",
"210 654 OFFCURVE",
"218 648 QCURVE",
"248 624 OFFCURVE",
"255 623 QCURVE",
"261 622 OFFCURVE",
"272 622 QCURVE SMOOTH",
"286 622 OFFCURVE",
"312 628 QCURVE",
"350 635 LINE SMOOTH",
"359 637 OFFCURVE",
"388 643 QCURVE SMOOTH",
"414 648 OFFCURVE",
"451 657 QCURVE",
"381 609 OFFCURVE",
"301 524 OFFCURVE",
"258 465 QCURVE SMOOTH",
"236 435 LINE",
"84 219 LINE",
"33 132 LINE",
"25 115 OFFCURVE",
"25 100 QCURVE SMOOTH",
"25 81 OFFCURVE",
"50 58 OFFCURVE",
"68 58 QCURVE SMOOTH",
"88 58 OFFCURVE",
"109 73 QCURVE",
"122 88 OFFCURVE",
"140 116 OFFCURVE",
"150 132 QCURVE SMOOTH",
"172 168 OFFCURVE",
"189 193 QCURVE SMOOTH",
"214 230 OFFCURVE",
"261 304 OFFCURVE",
"271 319 QCURVE SMOOTH",
"311 379 OFFCURVE",
"350 437 OFFCURVE",
"413 511 OFFCURVE",
"502 612 QCURVE",
"504 587 OFFCURVE",
"504 572 QCURVE SMOOTH",
"503 520 LINE SMOOTH",
"502 483 OFFCURVE",
"501 465 QCURVE SMOOTH",
"500 420 OFFCURVE",
"506 395 QCURVE SMOOTH",
"509 383 OFFCURVE",
"529 361 OFFCURVE",
"540 361 QCURVE SMOOTH",
"556 361 OFFCURVE",
"575 391 OFFCURVE",
"574 404 QCURVE",
"575 437 LINE SMOOTH",
"577 494 OFFCURVE",
"577 550 QCURVE SMOOTH",
"577 652 OFFCURVE",
"567 693 QCURVE"
);
}
);
width = 600;
}
);
unicode = 2197;
},
{
glyphname = rightArrow;
lastChange = "2019-08-23 23:19:18 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"339 130 OFFCURVE",
"420 138 OFFCURVE",
"499 169 QCURVE",
"709 271 LINE",
"734 281 OFFCURVE",
"741 294 QCURVE SMOOTH",
"749 309 OFFCURVE",
"736 339 QCURVE",
"727 362 OFFCURVE",
"710 371 QCURVE SMOOTH",
"702 375 OFFCURVE",
"691 379 OFFCURVE",
"687 380 QCURVE",
"679 384 OFFCURVE",
"583 428 QCURVE",
"517 460 LINE",
"471 485 OFFCURVE",
"431 498 QCURVE SMOOTH",
"387 512 OFFCURVE",
"363 526 QCURVE SMOOTH",
"342 538 OFFCURVE",
"329 513 QCURVE SMOOTH",
"321 497 OFFCURVE",
"328 479 QCURVE SMOOTH",
"338 453 OFFCURVE",
"373 433 OFFCURVE",
"390 428 QCURVE",
"492 391 LINE",
"557 368 LINE SMOOTH",
"567 365 OFFCURVE",
"221 411 OFFCURVE",
"4 393 QCURVE",
"-115 395 OFFCURVE",
"-139 357 OFFCURVE",
"-136 354 QCURVE",
"-147 304 OFFCURVE",
"-115 288 OFFCURVE",
"168 306 QCURVE",
"166 304 OFFCURVE",
"585 293 OFFCURVE",
"579 291 QCURVE SMOOTH",
"427 239 OFFCURVE",
"367 224 QCURVE SMOOTH",
"324 213 OFFCURVE",
"312 213 QCURVE SMOOTH",
"263 213 OFFCURVE",
"312 155 QCURVE"
);
}
);
width = 600;
}
);
unicode = 2192;
},
{
glyphname = southEastArrow;
lastChange = "2019-08-23 23:23:36 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"457 375 OFFCURVE",
"457 355 QCURVE SMOOTH",
"457 342 OFFCURVE",
"460 325 QCURVE SMOOTH",
"470 269 OFFCURVE",
"484 157 QCURVE",
"377 256 LINE SMOOTH",
"333 296 OFFCURVE",
"310 315 QCURVE",
"222 394 OFFCURVE",
"219 397 QCURVE SMOOTH",
"144 469 LINE SMOOTH",
"95 518 OFFCURVE",
"68 540 QCURVE SMOOTH",
"49 556 OFFCURVE",
"35 557 QCURVE SMOOTH",
"19 558 OFFCURVE",
"-2 533 QCURVE SMOOTH",
"-7 527 OFFCURVE",
"-17 503 OFFCURVE",
"-21 496 QCURVE",
"82 404 OFFCURVE",
"163 337 QCURVE SMOOTH",
"209 299 LINE SMOOTH",
"257 259 OFFCURVE",
"272 246 QCURVE",
"316 206 OFFCURVE",
"337 185 QCURVE SMOOTH",
"376 148 OFFCURVE",
"414 114 QCURVE SMOOTH",
"424 105 OFFCURVE",
"460 80 QCURVE",
"367 92 OFFCURVE",
"181 114 QCURVE SMOOTH",
"164 116 OFFCURVE",
"129 87 OFFCURVE",
"130 72 QCURVE SMOOTH",
"131 59 OFFCURVE",
"145 48 OFFCURVE",
"170 48 OFFCURVE",
"175 48 QCURVE",
"251 43 OFFCURVE",
"347 28 QCURVE SMOOTH",
"423 16 LINE SMOOTH",
"473 8 OFFCURVE",
"518 1 QCURVE SMOOTH",
"544 -3 OFFCURVE",
"585 40 OFFCURVE",
"583 65 QCURVE SMOOTH",
"578 120 LINE",
"576 163 OFFCURVE",
"571 198 QCURVE SMOOTH",
"557 289 OFFCURVE",
"538 377 QCURVE SMOOTH",
"535 391 OFFCURVE",
"518 406 OFFCURVE",
"507 406 QCURVE SMOOTH",
"488 406 OFFCURVE",
"467 385 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 2198;
},
{
glyphname = downArrow;
lastChange = "2019-08-23 23:20:32 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"513 236 OFFCURVE",
"500 236 QCURVE SMOOTH",
"489 236 OFFCURVE",
"479 228 QCURVE",
"445 207 OFFCURVE",
"398 152 OFFCURVE",
"360 93 QCURVE",
"355 87 OFFCURVE",
"349 77 OFFCURVE",
"346 73 QCURVE",
"341 118 OFFCURVE",
"337 204 QCURVE SMOOTH",
"334 269 LINE",
"327 335 OFFCURVE",
"318 543 QCURVE SMOOTH",
"316 590 LINE",
"316 665 LINE SMOOTH",
"316 674 OFFCURVE",
"315 706 OFFCURVE",
"313 718 QCURVE SMOOTH",
"312 723 OFFCURVE",
"276 739 OFFCURVE",
"270 740 QCURVE",
"267 741 OFFCURVE",
"260 741 QCURVE SMOOTH",
"246 741 OFFCURVE",
"236 733 QCURVE",
"229 728 OFFCURVE",
"219 711 OFFCURVE",
"218 702 QCURVE",
"216 695 OFFCURVE",
"216 678 QCURVE SMOOTH",
"216 664 OFFCURVE",
"217 657 QCURVE",
"244 233 LINE SMOOTH",
"248 175 OFFCURVE",
"248 136 QCURVE",
"253 61 LINE",
"247 79 OFFCURVE",
"214 148 OFFCURVE",
"203 167 QCURVE SMOOTH",
"193 184 OFFCURVE",
"182 220 QCURVE SMOOTH",
"177 237 OFFCURVE",
"164 271 OFFCURVE",
"156 283 QCURVE SMOOTH",
"142 304 OFFCURVE",
"124 304 QCURVE SMOOTH",
"113 304 OFFCURVE",
"104 298 QCURVE",
"91 288 OFFCURVE",
"77 252 OFFCURVE",
"77 233 QCURVE SMOOTH",
"77 213 OFFCURVE",
"85 200 QCURVE",
"112 149 OFFCURVE",
"135 111 QCURVE SMOOTH",
"151 84 OFFCURVE",
"235 -56 QCURVE SMOOTH",
"253 -86 LINE",
"272 -130 OFFCURVE",
"293 -130 QCURVE SMOOTH",
"307 -130 OFFCURVE",
"333 -94 OFFCURVE",
"353 -61 QCURVE SMOOTH",
"372 -29 LINE",
"395 -1 OFFCURVE",
"438 63 QCURVE SMOOTH",
"476 119 OFFCURVE",
"514 167 QCURVE",
"531 184 OFFCURVE",
"531 200 QCURVE SMOOTH",
"531 213 OFFCURVE",
"523 222 QCURVE"
);
}
);
width = 600;
}
);
unicode = 2193;
},
{
glyphname = southWestArrow;
lastChange = "2019-08-23 23:24:02 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"465 438 LINE SMOOTH",
"545 520 OFFCURVE",
"622 601 QCURVE SMOOTH",
"689 671 LINE",
"673 687 OFFCURVE",
"649 687 QCURVE SMOOTH",
"604 687 OFFCURVE",
"552 633 QCURVE SMOOTH",
"393 471 OFFCURVE",
"151 229 QCURVE SMOOTH",
"96 174 OFFCURVE",
"72 142 QCURVE",
"73 148 LINE",
"77 159 OFFCURVE",
"101 219 QCURVE SMOOTH",
"142 323 OFFCURVE",
"159 381 QCURVE SMOOTH",
"163 395 OFFCURVE",
"162 405 QCURVE SMOOTH",
"160 430 OFFCURVE",
"131 460 OFFCURVE",
"101 463 QCURVE",
"94 464 OFFCURVE",
"89 452 OFFCURVE",
"88 441 QCURVE SMOOTH",
"87 432 OFFCURVE",
"83 421 QCURVE SMOOTH",
"62 364 OFFCURVE",
"23 251 QCURVE SMOOTH",
"-10 154 LINE SMOOTH",
"-17 133 OFFCURVE",
"-25 117 QCURVE SMOOTH",
"-31 105 OFFCURVE",
"-39 82 OFFCURVE",
"-39 72 QCURVE SMOOTH",
"-39 50 OFFCURVE",
"-15 18 QCURVE",
"-9 17 OFFCURVE",
"1 13 OFFCURVE",
"5 12 QCURVE",
"48 -1 OFFCURVE",
"71 1 QCURVE SMOOTH",
"111 4 OFFCURVE",
"189 26 OFFCURVE",
"257 49 QCURVE SMOOTH",
"317 69 OFFCURVE",
"383 88 OFFCURVE",
"417 93 QCURVE",
"422 95 OFFCURVE",
"422 106 QCURVE SMOOTH",
"422 130 OFFCURVE",
"389 176 OFFCURVE",
"360 173 QCURVE SMOOTH",
"338 171 OFFCURVE",
"269 148 OFFCURVE",
"236 136 QCURVE SMOOTH",
"157 107 OFFCURVE",
"126 100 QCURVE",
"171 130 OFFCURVE",
"222 184 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 2199;
},
{
glyphname = leftArrow;
lastChange = "2019-08-23 23:19:57 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"740 394 OFFCURVE",
"719 395 QCURVE",
"693 399 OFFCURVE",
"664 397 QCURVE SMOOTH",
"461 383 LINE SMOOTH",
"333 374 OFFCURVE",
"254 368 QCURVE SMOOTH",
"211 365 OFFCURVE",
"165 365 QCURVE SMOOTH",
"134 365 LINE",
"72 364 LINE",
"113 373 OFFCURVE",
"192 419 QCURVE",
"230 434 LINE SMOOTH",
"285 456 OFFCURVE",
"319 473 QCURVE",
"333 483 OFFCURVE",
"333 496 QCURVE SMOOTH",
"333 515 OFFCURVE",
"310 538 QCURVE SMOOTH",
"295 553 OFFCURVE",
"277 553 QCURVE SMOOTH",
"257 554 OFFCURVE",
"215 534 QCURVE SMOOTH",
"181 518 LINE SMOOTH",
"118 488 OFFCURVE",
"101 482 QCURVE",
"69 465 OFFCURVE",
"-33 409 QCURVE SMOOTH",
"-64 392 OFFCURVE",
"-63 392 QCURVE",
"-128 370 OFFCURVE",
"-128 346 QCURVE SMOOTH",
"-128 332 OFFCURVE",
"-95 301 OFFCURVE",
"-56 277 QCURVE SMOOTH",
"-40 267 OFFCURVE",
"-32 261 QCURVE",
"-39 264 OFFCURVE",
"23 204 QCURVE SMOOTH",
"95 134 OFFCURVE",
"150 110 OFFCURVE",
"175 110 QCURVE SMOOTH",
"201 110 OFFCURVE",
"209 124 QCURVE",
"217 129 OFFCURVE",
"217 138 QCURVE SMOOTH",
"217 156 OFFCURVE",
"185 182 QCURVE",
"133 232 LINE SMOOTH",
"103 260 OFFCURVE",
"76 276 QCURVE",
"105 272 OFFCURVE",
"139 272 QCURVE SMOOTH",
"175 272 OFFCURVE",
"222 277 QCURVE SMOOTH",
"231 278 OFFCURVE",
"281 282 OFFCURVE",
"303 282 QCURVE",
"358 286 OFFCURVE",
"510 295 QCURVE SMOOTH",
"638 303 LINE",
"676 303 LINE SMOOTH",
"719 303 OFFCURVE",
"740 304 QCURVE",
"750 305 OFFCURVE",
"768 342 QCURVE",
"769 350 OFFCURVE",
"763 371 OFFCURVE",
"758 378 QCURVE"
);
}
);
width = 600;
}
);
unicode = 2190;
},
{
glyphname = northWestArrow;
lastChange = "2019-08-23 23:22:02 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"603 155 OFFCURVE",
"496 283 QCURVE SMOOTH",
"353 455 OFFCURVE",
"345 460 QCURVE",
"329 481 LINE SMOOTH",
"291 530 OFFCURVE",
"275 549 QCURVE",
"266 564 OFFCURVE",
"256 584 QCURVE",
"304 571 OFFCURVE",
"347 571 QCURVE SMOOTH",
"381 571 OFFCURVE",
"424 598 OFFCURVE",
"422 625 QCURVE SMOOTH",
"420 658 OFFCURVE",
"405 688 OFFCURVE",
"373 698 OFFCURVE",
"339 698 QCURVE SMOOTH",
"184 699 OFFCURVE",
"97 714 QCURVE SMOOTH",
"91 715 OFFCURVE",
"79 715 QCURVE SMOOTH",
"48 715 OFFCURVE",
"13 684 OFFCURVE",
"13 654 QCURVE",
"14 641 LINE",
"16 547 OFFCURVE",
"27 460 QCURVE",
"50 339 OFFCURVE",
"70 339 QCURVE SMOOTH",
"86 339 OFFCURVE",
"107 451 OFFCURVE",
"110 496 QCURVE",
"110 528 LINE SMOOTH",
"110 561 OFFCURVE",
"116 579 QCURVE",
"119 575 OFFCURVE",
"138 560 OFFCURVE",
"143 555 QCURVE",
"146 554 OFFCURVE",
"149 551 QCURVE",
"186 521 OFFCURVE",
"507 160 OFFCURVE",
"560 96 QCURVE",
"575 72 OFFCURVE",
"586 63 QCURVE",
"596 58 OFFCURVE",
"599 58 QCURVE SMOOTH",
"603 58 OFFCURVE",
"606 61 QCURVE",
"612 61 OFFCURVE",
"632 88 OFFCURVE",
"632 104 QCURVE SMOOTH",
"632 126 OFFCURVE",
"609 149 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 2196;
},
{
glyphname = leftRightArrow;
lastChange = "2019-08-23 23:23:11 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"161 164 LINE",
"182 208 OFFCURVE",
"139 229 QCURVE",
"92 240 OFFCURVE",
"16 286 OFFCURVE",
"-15 321 QCURVE",
"-11 328 OFFCURVE",
"1 348 OFFCURVE",
"6 353 QCURVE SMOOTH",
"77 426 OFFCURVE",
"146 467 QCURVE SMOOTH",
"151 470 OFFCURVE",
"181 484 OFFCURVE",
"191 493 QCURVE",
"197 498 OFFCURVE",
"205 518 OFFCURVE",
"203 525 QCURVE SMOOTH",
"201 533 OFFCURVE",
"187 547 OFFCURVE",
"179 549 QCURVE",
"147 561 OFFCURVE",
"118 545 QCURVE SMOOTH",
"107 539 OFFCURVE",
"102 534 QCURVE",
"23 468 OFFCURVE",
"-74 386 OFFCURVE",
"-91 371 QCURVE SMOOTH",
"-133 335 LINE",
"-131 321 OFFCURVE",
"-126 312 QCURVE SMOOTH",
"-118 297 OFFCURVE",
"-103 288 QCURVE",
"-84 275 LINE SMOOTH",
"-23 233 OFFCURVE",
"87 174 OFFCURVE",
"118 170 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"662 451 OFFCURVE",
"588 515 QCURVE SMOOTH",
"556 543 OFFCURVE",
"527 542 QCURVE SMOOTH",
"504 541 OFFCURVE",
"480 525 QCURVE",
"484 518 OFFCURVE",
"501 489 OFFCURVE",
"509 481 QCURVE",
"535 450 OFFCURVE",
"584 411 QCURVE SMOOTH",
"589 407 OFFCURVE",
"611 389 OFFCURVE",
"636 362 OFFCURVE",
"627 363 QCURVE SMOOTH",
"-4 433 OFFCURVE",
"-93 323 QCURVE",
"-93 311 OFFCURVE",
"565 291 QCURVE SMOOTH",
"598 290 OFFCURVE",
"510 240 OFFCURVE",
"501 225 QCURVE",
"495 216 OFFCURVE",
"487 185 OFFCURVE",
"484 177 QCURVE",
"502 174 OFFCURVE",
"518 174 QCURVE SMOOTH",
"548 174 OFFCURVE",
"595 194 OFFCURVE",
"617 215 QCURVE SMOOTH",
"654 250 OFFCURVE",
"697 287 OFFCURVE",
"722 302 QCURVE SMOOTH",
"741 313 OFFCURVE",
"757 327 OFFCURVE",
"757 336 QCURVE SMOOTH",
"757 348 OFFCURVE",
"741 365 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 2194;
},
{
glyphname = upDownArrow;
lastChange = "2019-08-23 23:22:37 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"480 515 OFFCURVE",
"436 611 QCURVE SMOOTH",
"411 666 OFFCURVE",
"396 692 QCURVE SMOOTH",
"376 727 OFFCURVE",
"332 777 OFFCURVE",
"314 779 QCURVE",
"294 779 OFFCURVE",
"266 757 OFFCURVE",
"251 736 QCURVE",
"229 710 OFFCURVE",
"190 643 OFFCURVE",
"166 593 QCURVE SMOOTH",
"144 548 OFFCURVE",
"113 490 OFFCURVE",
"94 466 QCURVE",
"91 462 OFFCURVE",
"106 446 OFFCURVE",
"132 433 OFFCURVE",
"146 433 QCURVE SMOOTH",
"166 433 OFFCURVE",
"178 449 QCURVE",
"197 475 OFFCURVE",
"228 543 QCURVE SMOOTH",
"258 608 OFFCURVE",
"271 629 QCURVE",
"271 612 LINE",
"276 519 OFFCURVE",
"277 469 QCURVE",
"278 449 OFFCURVE",
"280 271 QCURVE SMOOTH",
"282 81 OFFCURVE",
"284 -13 QCURVE",
"261 35 LINE SMOOTH",
"248 63 OFFCURVE",
"247 64 QCURVE",
"226 94 OFFCURVE",
"162 195 QCURVE",
"145 213 OFFCURVE",
"130 213 QCURVE SMOOTH",
"121 213 OFFCURVE",
"94 202 OFFCURVE",
"89 200 QCURVE",
"79 195 OFFCURVE",
"79 183 QCURVE SMOOTH",
"79 171 OFFCURVE",
"113 124 OFFCURVE",
"115 120 QCURVE SMOOTH",
"121 108 OFFCURVE",
"162 38 QCURVE SMOOTH",
"194 -16 OFFCURVE",
"228 -77 QCURVE",
"230 -81 OFFCURVE",
"250 -111 OFFCURVE",
"263 -120 QCURVE",
"280 -136 OFFCURVE",
"301 -136 QCURVE SMOOTH",
"321 -136 OFFCURVE",
"357 -106 OFFCURVE",
"369 -81 QCURVE SMOOTH",
"389 -51 OFFCURVE",
"424 12 QCURVE SMOOTH",
"494 137 LINE",
"503 152 OFFCURVE",
"503 168 QCURVE",
"502 178 LINE",
"500 187 OFFCURVE",
"486 198 OFFCURVE",
"476 198 QCURVE SMOOTH",
"466 198 OFFCURVE",
"455 193 QCURVE",
"447 187 OFFCURVE",
"432 167 OFFCURVE",
"413 137 OFFCURVE",
"409 129 QCURVE SMOOTH",
"346 17 LINE",
"346 547 OFFCURVE",
"342 619 QCURVE",
"342 633 OFFCURVE",
"340 640 QCURVE",
"359 601 OFFCURVE",
"373 567 QCURVE SMOOTH",
"408 482 OFFCURVE",
"432 446 QCURVE SMOOTH",
"453 415 OFFCURVE",
"478 414 QCURVE SMOOTH",
"498 413 OFFCURVE",
"518 431 QCURVE",
"523 434 OFFCURVE",
"520 445 OFFCURVE",
"506 463 OFFCURVE",
"503 469 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 2195;
},
{
glyphname = bar;
lastChange = "2019-08-23 23:35:53 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"174 506 LINE",
"153 268 OFFCURVE",
"145 149 QCURVE SMOOTH",
"125 -143 LINE SMOOTH",
"124 -160 OFFCURVE",
"140 -177 OFFCURVE",
"154 -177 QCURVE SMOOTH",
"173 -177 OFFCURVE",
"212 -149 OFFCURVE",
"216 -129 QCURVE SMOOTH",
"272 151 OFFCURVE",
"280 364 QCURVE SMOOTH",
"286 524 OFFCURVE",
"294 604 QCURVE SMOOTH",
"295 614 OFFCURVE",
"295 633 QCURVE SMOOTH",
"295 673 OFFCURVE",
"273 727 OFFCURVE",
"248 744 QCURVE SMOOTH",
"233 754 OFFCURVE",
"215 754 QCURVE SMOOTH",
"200 754 OFFCURVE",
"192 747 QCURVE",
"144 709 OFFCURVE",
"133 645 QCURVE",
"157 635 OFFCURVE",
"176 591 OFFCURVE",
"176 558 QCURVE SMOOTH",
"176 545 OFFCURVE",
"174 521 QCURVE"
);
}
);
width = 400;
}
);
unicode = 007C;
},
{
glyphname = dotaccent;
lastChange = "2019-08-23 23:39:25 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"358 738 OFFCURVE",
"333 765 OFFCURVE",
"316 765 QCURVE SMOOTH",
"292 765 OFFCURVE",
"250 733 OFFCURVE",
"239 708 QCURVE",
"239 703 OFFCURVE",
"241 687 OFFCURVE",
"242 683 QCURVE",
"255 655 OFFCURVE",
"291 649 QCURVE",
"292 649 OFFCURVE",
"297 649 QCURVE SMOOTH",
"312 649 OFFCURVE",
"341 666 OFFCURVE",
"358 696 OFFCURVE",
"358 714 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 02D9;
},
{
glyphname = macron;
lastChange = "2019-10-02 10:39:48 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"377 691 OFFCURVE",
"240 709 QCURVE SMOOTH",
"187 716 OFFCURVE",
"176 715 QCURVE SMOOTH",
"162 714 OFFCURVE",
"156 714 QCURVE",
"147 713 OFFCURVE",
"138 704 QCURVE SMOOTH",
"134 700 OFFCURVE",
"120 686 OFFCURVE",
"116 683 QCURVE",
"139 653 OFFCURVE",
"139 653 QCURVE",
"147 646 OFFCURVE",
"152 645 QCURVE",
"175 635 OFFCURVE",
"210 635 QCURVE SMOOTH",
"264 635 OFFCURVE",
"399 639 OFFCURVE",
"426 640 QCURVE SMOOTH",
"478 642 LINE",
"483 642 OFFCURVE",
"497 660 OFFCURVE",
"504 667 QCURVE",
"496 670 OFFCURVE",
"464 683 OFFCURVE",
"453 684 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 00AF;
},
{
glyphname = ring;
lastChange = "2019-08-23 11:39:22 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"241 422 OFFCURVE",
"264 459 QCURVE",
"277 482 OFFCURVE",
"277 509 QCURVE SMOOTH",
"277 527 OFFCURVE",
"269 563 QCURVE",
"268 569 OFFCURVE",
"252 581 OFFCURVE",
"244 585 QCURVE SMOOTH",
"236 589 OFFCURVE",
"210 599 OFFCURVE",
"203 604 QCURVE SMOOTH",
"176 624 OFFCURVE",
"154 624 QCURVE SMOOTH",
"145 624 OFFCURVE",
"136 621 QCURVE SMOOTH",
"99 609 OFFCURVE",
"60 557 OFFCURVE",
"60 523 QCURVE SMOOTH",
"60 499 OFFCURVE",
"70 473 QCURVE",
"79 444 OFFCURVE",
"150 408 OFFCURVE",
"185 408 QCURVE SMOOTH",
"201 408 OFFCURVE",
"214 413 QCURVE"
);
},
{
closed = 1;
nodes = (
"182 569 OFFCURVE",
"205 570 QCURVE",
"209 571 OFFCURVE",
"226 554 OFFCURVE",
"229 552 QCURVE",
"234 540 OFFCURVE",
"234 533 QCURVE SMOOTH",
"234 515 OFFCURVE",
"215 492 QCURVE",
"208 485 OFFCURVE",
"182 476 OFFCURVE",
"169 476 QCURVE SMOOTH",
"147 476 OFFCURVE",
"138 485 QCURVE SMOOTH",
"132 491 OFFCURVE",
"122 514 OFFCURVE",
"121 524 QCURVE",
"125 533 OFFCURVE",
"140 550 OFFCURVE",
"149 554 QCURVE SMOOTH"
);
},
{
closed = 0;
nodes = (
"135 397 LINE SMOOTH"
);
},
{
closed = 0;
nodes = (
"85 386 LINE SMOOTH"
);
}
);
width = 337;
}
);
unicode = 02DA;
},
{
glyphname = tilde;
lastChange = "2019-08-23 23:42:13 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"563 762 OFFCURVE",
"540 790 OFFCURVE",
"509 790 QCURVE SMOOTH",
"498 790 OFFCURVE",
"485 779 OFFCURVE",
"477 764 QCURVE SMOOTH",
"465 741 OFFCURVE",
"427 706 OFFCURVE",
"388 690 QCURVE",
"381 689 OFFCURVE",
"366 689 QCURVE SMOOTH",
"328 689 OFFCURVE",
"279 713 OFFCURVE",
"251 737 QCURVE SMOOTH",
"232 753 OFFCURVE",
"203 772 OFFCURVE",
"185 779 QCURVE",
"158 783 OFFCURVE",
"146 783 QCURVE SMOOTH",
"133 783 OFFCURVE",
"112 774 OFFCURVE",
"98 763 QCURVE SMOOTH",
"67 739 OFFCURVE",
"45 713 OFFCURVE",
"46 694 QCURVE SMOOTH",
"48 664 OFFCURVE",
"109 645 OFFCURVE",
"110 645 QCURVE",
"120 640 OFFCURVE",
"128 640 QCURVE SMOOTH",
"145 640 OFFCURVE",
"151 664 QCURVE SMOOTH",
"155 681 OFFCURVE",
"174 702 OFFCURVE",
"189 702 QCURVE SMOOTH",
"200 702 OFFCURVE",
"213 696 QCURVE SMOOTH",
"237 685 OFFCURVE",
"282 656 QCURVE SMOOTH",
"309 639 OFFCURVE",
"312 637 QCURVE SMOOTH",
"375 595 OFFCURVE",
"421 600 QCURVE SMOOTH",
"451 603 OFFCURVE",
"507 633 OFFCURVE",
"537 668 QCURVE SMOOTH",
"563 698 OFFCURVE",
"563 734 QCURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 02DC;
},
{
glyphname = minussign;
lastChange = "2019-08-23 11:47:44 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"590 225 OFFCURVE",
"598 241 QCURVE",
"600 244 OFFCURVE",
"600 250 QCURVE SMOOTH",
"600 261 OFFCURVE",
"584 285 OFFCURVE",
"574 289 QCURVE SMOOTH",
"546 300 OFFCURVE",
"519 302 QCURVE",
"480 302 LINE",
"401 302 LINE SMOOTH",
"369 302 OFFCURVE",
"352 303 QCURVE SMOOTH",
"312 305 OFFCURVE",
"253 311 OFFCURVE",
"234 312 QCURVE",
"172 318 OFFCURVE",
"145 320 QCURVE",
"138 321 OFFCURVE",
"117 323 OFFCURVE",
"104 323 QCURVE",
"84 322 OFFCURVE",
"56 303 OFFCURVE",
"52 289 QCURVE SMOOTH",
"50 281 OFFCURVE",
"50 276 QCURVE SMOOTH",
"50 262 OFFCURVE",
"68 236 OFFCURVE",
"84 228 QCURVE",
"112 210 OFFCURVE",
"149 211 QCURVE SMOOTH",
"212 212 LINE SMOOTH",
"263 212 OFFCURVE",
"289 211 QCURVE SMOOTH",
"530 205 LINE",
"536 206 OFFCURVE",
"557 207 OFFCURVE",
"563 211 QCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 2 values pushed */
6 100 
WCVTP[ ]\011/* WriteCVTInPixels */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 7 values pushed */
33 11 2 0 2 1 76 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 7 values pushed */
33 11 2 0 3 1 76 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
0 1 2 2 1 112 3 1 2 0 0 2 89 3 1 2 2 0 96 0 0 2 0 80 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
0 1 2 3 1 112 0 2 3 3 2 112 0 3 0 0 3 87 0 3 3 0 96 0 0 3 0 80 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
97 20 40 112 4 8 26 
CALL[ ]\011/* CallFunction */
PUSHB[ ]\011/* 2 values pushed */
6 0 
WCVTP[ ]\011/* WriteCVTInPixels */";
};
width = 651;
}
);
note = underscore;
},
{
glyphname = lowquote;
lastChange = "2019-08-23 11:43:31 +0000";
layers = (
{
layerId = "D6A4831D-747C-4592-93C0-305F4CD57904";
paths = (
{
closed = 1;
nodes = (
"142 183 OFFCURVE",
"131 183 QCURVE SMOOTH",
"121 183 OFFCURVE",
"103 172 OFFCURVE",
"99 163 QCURVE SMOOTH",
"84 129 OFFCURVE",
"84 104 QCURVE SMOOTH",
"83 9 OFFCURVE",
"49 -96 QCURVE SMOOTH",
"41 -121 OFFCURVE",
"40 -130 QCURVE SMOOTH",
"39 -139 OFFCURVE",
"50 -167 OFFCURVE",
"51 -170 QCURVE",
"76 -171 OFFCURVE",
"109 -142 OFFCURVE",
"119 -119 QCURVE SMOOTH",
"154 -39 OFFCURVE",
"194 79 QCURVE",
"197 90 OFFCURVE",
"197 100 QCURVE SMOOTH",
"197 122 OFFCURVE",
"172 164 OFFCURVE",
"154 176 QCURVE"
);
}
);
width = 237;
}
);
}
);
instances = (
{
instanceInterpolations = {
"D6A4831D-747C-4592-93C0-305F4CD57904" = 1;
};
name = Regular;
weightClass = Normal;
}
);
kerning = {
"D6A4831D-747C-4592-93C0-305F4CD57904" = {
"@MMK_L_A" = {
A.alt1 = -30;
};
"@MMK_L_D" = {
"@MMK_R_D" = -60;
"@MMK_R_i" = -20;
"@MMK_R_u" = -30;
};
"@MMK_L_P" = {
"@MMK_R_e" = -40;
};
"@MMK_L_T" = {
"@MMK_R_o" = -110;
y.alt1 = -190;
};
"@MMK_L_a" = {
j = -40;
};
"@MMK_L_e" = {
"@MMK_R_e" = -20;
};
"@MMK_L_i" = {
"@MMK_R_D" = 10;
};
"@MMK_L_n" = {
"@MMK_R_a" = -30;
"@MMK_R_n" = -30;
"@MMK_R_o" = -40;
"@MMK_R_t" = -30;
};
"@MMK_L_p" = {
"@MMK_R_a" = -60;
};
"@MMK_L_q" = {
"@MMK_R_u" = -60;
};
"@MMK_L_u" = {
"@MMK_R_m" = 10;
};
A = {
v = -40;
};
C = {
h = -30;
o = -40;
};
D = {
"@MMK_R_e" = -50;
};
E.alt1 = {
"@MMK_R_m" = 40;
"@MMK_R_n" = 20;
};
F = {
"@MMK_R_i" = -8;
a = -40;
e = -10;
j = -77;
};
G = {
a = -40;
};
H = {
I = -30;
};
L = {
D = 22;
u = -30;
};
M = {
"@MMK_R_a" = -30;
};
N.alt1 = {
E.alt1 = -50;
};
O = {
p = -50;
quotesingle = 30;
};
P = {
X = -55;
a = -33;
c = -55;
d = -55;
e = -88;
i = -55;
o = -121;
v = -66;
w = -88;
x = -110;
};
R.alt1 = {
U = -40;
};
S = {
"@MMK_R_T" = -70;
};
T = {
E = -88;
J = -44;
N = -66;
a = -143;
b = -55;
c = -110;
d = -88;
e = -182;
f = -143;
g = -121;
i = -117;
j = -187;
k = -55;
m = -110;
o = -206;
q = -132;
r = -110;
s = -121;
u = -148;
v = -110;
w = -210;
z = -99;
};
T.alt1 = {
"@MMK_R_o" = -150;
"@MMK_R_u" = -170;
R = -100;
};
V = {
a = -47;
eacute = -30;
o = -40;
u = -30;
};
a = {
c = 30;
j = -10;
r = 9;
s = 10;
y = -30;
};
b = {
t = -33;
};
c = {
"@MMK_R_a" = -10;
e = -66;
t = -1;
};
d = {
a = -33;
};
e = {
"@MMK_R_e" = -20;
r = -2;
t = -30;
};
eacute = {
s = -30;
};
f = {
"@MMK_R_I" = 30;
f = -60;
o = 10;
};
five = {
four = -33;
six = -66;
three = -44;
two = -77;
};
g = {
t = -55;
u = -5;
};
h = {
e = -33;
u = -55;
y = -33;
y.alt1 = -40;
};
i = {
l = 11;
};
iacute = {
"@MMK_R_a" = -20;
c = -40;
s = -19;
};
j = {
a = -30;
o = -10;
u = -20;
y = -33;
};
k = {
a = -26;
e = -33;
g = -77;
h = -77;
i = -30;
j.alt1 = -130;
o = -28;
u = -50;
v = -88;
};
l = {
u = -30;
};
n = {
j = -30;
t = -40;
};
o = {
s = -44;
};
q = {
u = -60;
};
quotedblleft = {
T = 60;
};
quotesingle = {
d = -50;
m = -10;
};
r = {
"@MMK_R_i" = -31;
"@MMK_R_o" = -30;
a = -43;
c = -40;
e = -30;
g = -48;
j = -77;
o = -20;
p = -55;
};
r.alt1 = {
"@MMK_R_o" = 0;
};
s = {
"@MMK_R_i" = 30;
s = -44;
t = 4;
};
seven = {
five = -66;
zero = 1;
};
six = {
five = -22;
};
t = {
"@MMK_R_i" = -2;
e = -20;
eacute = -20;
g = -55;
t = -30;
};
u = {
c = 30;
j = -10;
k = 10;
l = 22;
r = 20;
};
v = {
"@MMK_R_e" = -20;
c = -55;
};
x = {
t = -34;
};
y = {
space = -3;
u = -2;
};
};
};
manufacturer = "Carolina Short";
manufacturerURL = bigital.com;
unitsPerEm = 1000;
versionMajor = 2;
versionMinor = 3;
}
